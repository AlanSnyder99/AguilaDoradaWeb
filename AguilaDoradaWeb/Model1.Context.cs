//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AguilaDoradaWeb
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class myContext : DbContext
    {
        internal object Guests;

        public myContext()
            : base("name=myContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Agencia> Agencia { get; set; }
        public virtual DbSet<Application> Application { get; set; }
        public virtual DbSet<ApplicationTree> ApplicationTree { get; set; }
        public virtual DbSet<Asiento> Asiento { get; set; }
        public virtual DbSet<Cajas> Cajas { get; set; }
        public virtual DbSet<Carroceria> Carroceria { get; set; }
        public virtual DbSet<Categoria> Categoria { get; set; }
        public virtual DbSet<Chofer> Chofer { get; set; }
        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<ClientesEnco> ClientesEnco { get; set; }
        public virtual DbSet<Configuracion> Configuracion { get; set; }
        public virtual DbSet<CuentasBancarias> CuentasBancarias { get; set; }
        public virtual DbSet<CuentasBancariasDepo> CuentasBancariasDepo { get; set; }
        public virtual DbSet<Desdoblamiento> Desdoblamiento { get; set; }
        public virtual DbSet<dtproperties> dtproperties { get; set; }
        public virtual DbSet<Empleado> Empleado { get; set; }
        public virtual DbSet<Empresa> Empresa { get; set; }
        public virtual DbSet<Estructura> Estructura { get; set; }
        public virtual DbSet<GastosDetalle> GastosDetalle { get; set; }
        public virtual DbSet<Group> Group { get; set; }
        public virtual DbSet<HojaDeRuta> HojaDeRuta { get; set; }
        public virtual DbSet<HojaDeRutaMD> HojaDeRutaMD { get; set; }
        public virtual DbSet<Kilos> Kilos { get; set; }
        public virtual DbSet<Linea> Linea { get; set; }
        public virtual DbSet<Liquidaciones> Liquidaciones { get; set; }
        public virtual DbSet<Liquidaciones2> Liquidaciones2 { get; set; }
        public virtual DbSet<LiquidacionesEnco> LiquidacionesEnco { get; set; }
        public virtual DbSet<Localidad> Localidad { get; set; }
        public virtual DbSet<LogImpVent> LogImpVent { get; set; }
        public virtual DbSet<Logs> Logs { get; set; }
        public virtual DbSet<Logs2> Logs2 { get; set; }
        public virtual DbSet<LowCost> LowCost { get; set; }
        public virtual DbSet<Marca> Marca { get; set; }
        public virtual DbSet<MercadoPago> MercadoPago { get; set; }
        public virtual DbSet<Novedades> Novedades { get; set; }
        public virtual DbSet<Ocupacion> Ocupacion { get; set; }
        public virtual DbSet<Pais> Pais { get; set; }
        public virtual DbSet<Parada> Parada { get; set; }
        public virtual DbSet<PCS> PCS { get; set; }
        public virtual DbSet<Permission> Permission { get; set; }
        public virtual DbSet<PermissionType> PermissionType { get; set; }
        public virtual DbSet<Provincia> Provincia { get; set; }
        public virtual DbSet<Rango> Rango { get; set; }
        public virtual DbSet<RangoEnco> RangoEnco { get; set; }
        public virtual DbSet<RangoExceso> RangoExceso { get; set; }
        public virtual DbSet<RangoFacturas> RangoFacturas { get; set; }
        public virtual DbSet<RangoRecibos> RangoRecibos { get; set; }
        public virtual DbSet<RangoRemitos> RangoRemitos { get; set; }
        public virtual DbSet<RangosHuecos> RangosHuecos { get; set; }
        public virtual DbSet<Recorrido> Recorrido { get; set; }
        public virtual DbSet<Rel_Group_Permission> Rel_Group_Permission { get; set; }
        public virtual DbSet<Rel_Reserva_Asiento> Rel_Reserva_Asiento { get; set; }
        public virtual DbSet<Rel_Tapa_Asiento> Rel_Tapa_Asiento { get; set; }
        public virtual DbSet<Reserva> Reserva { get; set; }
        public virtual DbSet<Servicio> Servicio { get; set; }
        public virtual DbSet<ServicioEfectivo> ServicioEfectivo { get; set; }
        public virtual DbSet<ServicioPred> ServicioPred { get; set; }
        public virtual DbSet<Sessions> Sessions { get; set; }
        public virtual DbSet<Sexo> Sexo { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Tapadas> Tapadas { get; set; }
        public virtual DbSet<Tarifa> Tarifa { get; set; }
        public virtual DbSet<TarifaBolsas> TarifaBolsas { get; set; }
        public virtual DbSet<TarifaExceso> TarifaExceso { get; set; }
        public virtual DbSet<TarifaSeguro> TarifaSeguro { get; set; }
        public virtual DbSet<Tarifat> Tarifat { get; set; }
        public virtual DbSet<Tarjetas> Tarjetas { get; set; }
        public virtual DbSet<TarjetasMovimientos> TarjetasMovimientos { get; set; }
        public virtual DbSet<Temporada> Temporada { get; set; }
        public virtual DbSet<Ticket> Ticket { get; set; }
        public virtual DbSet<TicketFacturas> TicketFacturas { get; set; }
        public virtual DbSet<TicketLib> TicketLib { get; set; }
        public virtual DbSet<Tipo> Tipo { get; set; }
        public virtual DbSet<TipoDocumento> TipoDocumento { get; set; }
        public virtual DbSet<TipoGasto> TipoGasto { get; set; }
        public virtual DbSet<TipoServicio> TipoServicio { get; set; }
        public virtual DbSet<Trayecto> Trayecto { get; set; }
        public virtual DbSet<TrayectoTemp> TrayectoTemp { get; set; }
        public virtual DbSet<User> User { get; set; }
        public virtual DbSet<UserReg> UserReg { get; set; }
        public virtual DbSet<Usuarios> Usuarios { get; set; }
        public virtual DbSet<ValidaComisiones> ValidaComisiones { get; set; }
        public virtual DbSet<Vehiculo> Vehiculo { get; set; }
        public virtual DbSet<Venta> Venta { get; set; }
        public virtual DbSet<VentaFacturas> VentaFacturas { get; set; }
        public virtual DbSet<Visitas> Visitas { get; set; }
        public virtual DbSet<Zonas> Zonas { get; set; }
        public virtual DbSet<AsientoT> AsientoT { get; set; }
        public virtual DbSet<Computadoras> Computadoras { get; set; }
        public virtual DbSet<ErrorJava> ErrorJava { get; set; }
        public virtual DbSet<Listados> Listados { get; set; }
        public virtual DbSet<OcuTemp> OcuTemp { get; set; }
        public virtual DbSet<Sesiones> Sesiones { get; set; }
        public virtual DbSet<ListadoComputadoras> ListadoComputadoras { get; set; }
        public virtual DbSet<ListadoComputadorasPorUsuario> ListadoComputadorasPorUsuario { get; set; }
        public virtual DbSet<ListadoIniciosDeSesionHoy> ListadoIniciosDeSesionHoy { get; set; }
        public virtual DbSet<ServiciosOfrecidos> ServiciosOfrecidos { get; set; }
        public virtual DbSet<vCtaCte> vCtaCte { get; set; }
        public virtual DbSet<vEmpresaOriDes> vEmpresaOriDes { get; set; }
        public virtual DbSet<vLiqAConf> vLiqAConf { get; set; }
        public virtual DbSet<vLiquidaciones> vLiquidaciones { get; set; }
        public virtual DbSet<vVehiculoFecha> vVehiculoFecha { get; set; }
        public virtual DbSet<vVentas> vVentas { get; set; }
        public virtual DbSet<vVentas2> vVentas2 { get; set; }
        public virtual DbSet<vVentas3> vVentas3 { get; set; }
        public virtual DbSet<vVentasBol> vVentasBol { get; set; }
        public virtual DbSet<vVentasDesc> vVentasDesc { get; set; }
        public virtual DbSet<vwBajanxServicio> vwBajanxServicio { get; set; }
        public virtual DbSet<vwSubenxServicio> vwSubenxServicio { get; set; }
    
        public virtual int f_Rangoget2_(string filterType, string filter, Nullable<int> id, string fields, string userId)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("f_Rangoget2_", filterTypeParameter, filterParameter, idParameter, fieldsParameter, userIdParameter);
        }
    
        public virtual int f_TarifaInsert_(Nullable<int> recorridoId, Nullable<int> lineaId, Nullable<int> paradaOrigenId, Nullable<int> paradaDestinoId, Nullable<decimal> precio, Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta, Nullable<int> grilla)
        {
            var recorridoIdParameter = recorridoId.HasValue ?
                new ObjectParameter("RecorridoId", recorridoId) :
                new ObjectParameter("RecorridoId", typeof(int));
    
            var lineaIdParameter = lineaId.HasValue ?
                new ObjectParameter("LineaId", lineaId) :
                new ObjectParameter("LineaId", typeof(int));
    
            var paradaOrigenIdParameter = paradaOrigenId.HasValue ?
                new ObjectParameter("ParadaOrigenId", paradaOrigenId) :
                new ObjectParameter("ParadaOrigenId", typeof(int));
    
            var paradaDestinoIdParameter = paradaDestinoId.HasValue ?
                new ObjectParameter("ParadaDestinoId", paradaDestinoId) :
                new ObjectParameter("ParadaDestinoId", typeof(int));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("FechaDesde", fechaDesde) :
                new ObjectParameter("FechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(System.DateTime));
    
            var grillaParameter = grilla.HasValue ?
                new ObjectParameter("Grilla", grilla) :
                new ObjectParameter("Grilla", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("f_TarifaInsert_", recorridoIdParameter, lineaIdParameter, paradaOrigenIdParameter, paradaDestinoIdParameter, precioParameter, fechaDesdeParameter, fechaHastaParameter, grillaParameter);
        }
    
        public virtual int f_TrayectoGet_(Nullable<int> recorridoId, Nullable<int> paradaId, string fields, string filterType, string filter)
        {
            var recorridoIdParameter = recorridoId.HasValue ?
                new ObjectParameter("RecorridoId", recorridoId) :
                new ObjectParameter("RecorridoId", typeof(int));
    
            var paradaIdParameter = paradaId.HasValue ?
                new ObjectParameter("ParadaId", paradaId) :
                new ObjectParameter("ParadaId", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("f_TrayectoGet_", recorridoIdParameter, paradaIdParameter, fieldsParameter, filterTypeParameter, filterParameter);
        }
    
        public virtual int ActivarRango(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActivarRango", idParameter);
        }
    
        public virtual int ActivarRangoEnco(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActivarRangoEnco", idParameter);
        }
    
        public virtual int ActivarRangoExcesos(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActivarRangoExcesos", idParameter);
        }
    
        public virtual int ActivarRangoFacturas(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActivarRangoFacturas", idParameter);
        }
    
        public virtual int ActivarRangoRecibos(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActivarRangoRecibos", idParameter);
        }
    
        public virtual int ActivarRangoRemitos(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActivarRangoRemitos", idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> AcuseRecibo(Nullable<int> ticketId)
        {
            var ticketIdParameter = ticketId.HasValue ?
                new ObjectParameter("TicketId", ticketId) :
                new ObjectParameter("TicketId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AcuseRecibo", ticketIdParameter);
        }
    
        public virtual ObjectResult<AcuseReciboGet_Result> AcuseReciboGet(string numero, string userId, string apellido, Nullable<int> parada)
        {
            var numeroParameter = numero != null ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var paradaParameter = parada.HasValue ?
                new ObjectParameter("Parada", parada) :
                new ObjectParameter("Parada", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AcuseReciboGet_Result>("AcuseReciboGet", numeroParameter, userIdParameter, apellidoParameter, paradaParameter);
        }
    
        public virtual int AgenciaDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgenciaDelete", idParameter);
        }
    
        public virtual int AgenciaGet(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgenciaGet", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual int AgenciaGetList(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgenciaGetList", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> AgenciaInsert(string nombre, string domicilio, Nullable<int> localidadId, string telefono, string fax, string email, Nullable<int> zonasId, Nullable<int> comision, Nullable<int> comisionEncomiendas, string impresora, Nullable<int> reserva, Nullable<int> conTarjeta, Nullable<int> comisionTarjeta, Nullable<int> comisionPagoDestino, Nullable<int> comisionRecepciona, Nullable<int> avisoBoletos, Nullable<int> comisionValidaCall, string horario)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var domicilioParameter = domicilio != null ?
                new ObjectParameter("Domicilio", domicilio) :
                new ObjectParameter("Domicilio", typeof(string));
    
            var localidadIdParameter = localidadId.HasValue ?
                new ObjectParameter("LocalidadId", localidadId) :
                new ObjectParameter("LocalidadId", typeof(int));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var zonasIdParameter = zonasId.HasValue ?
                new ObjectParameter("ZonasId", zonasId) :
                new ObjectParameter("ZonasId", typeof(int));
    
            var comisionParameter = comision.HasValue ?
                new ObjectParameter("Comision", comision) :
                new ObjectParameter("Comision", typeof(int));
    
            var comisionEncomiendasParameter = comisionEncomiendas.HasValue ?
                new ObjectParameter("ComisionEncomiendas", comisionEncomiendas) :
                new ObjectParameter("ComisionEncomiendas", typeof(int));
    
            var impresoraParameter = impresora != null ?
                new ObjectParameter("Impresora", impresora) :
                new ObjectParameter("Impresora", typeof(string));
    
            var reservaParameter = reserva.HasValue ?
                new ObjectParameter("Reserva", reserva) :
                new ObjectParameter("Reserva", typeof(int));
    
            var conTarjetaParameter = conTarjeta.HasValue ?
                new ObjectParameter("ConTarjeta", conTarjeta) :
                new ObjectParameter("ConTarjeta", typeof(int));
    
            var comisionTarjetaParameter = comisionTarjeta.HasValue ?
                new ObjectParameter("ComisionTarjeta", comisionTarjeta) :
                new ObjectParameter("ComisionTarjeta", typeof(int));
    
            var comisionPagoDestinoParameter = comisionPagoDestino.HasValue ?
                new ObjectParameter("ComisionPagoDestino", comisionPagoDestino) :
                new ObjectParameter("ComisionPagoDestino", typeof(int));
    
            var comisionRecepcionaParameter = comisionRecepciona.HasValue ?
                new ObjectParameter("ComisionRecepciona", comisionRecepciona) :
                new ObjectParameter("ComisionRecepciona", typeof(int));
    
            var avisoBoletosParameter = avisoBoletos.HasValue ?
                new ObjectParameter("AvisoBoletos", avisoBoletos) :
                new ObjectParameter("AvisoBoletos", typeof(int));
    
            var comisionValidaCallParameter = comisionValidaCall.HasValue ?
                new ObjectParameter("ComisionValidaCall", comisionValidaCall) :
                new ObjectParameter("ComisionValidaCall", typeof(int));
    
            var horarioParameter = horario != null ?
                new ObjectParameter("Horario", horario) :
                new ObjectParameter("Horario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AgenciaInsert", nombreParameter, domicilioParameter, localidadIdParameter, telefonoParameter, faxParameter, emailParameter, zonasIdParameter, comisionParameter, comisionEncomiendasParameter, impresoraParameter, reservaParameter, conTarjetaParameter, comisionTarjetaParameter, comisionPagoDestinoParameter, comisionRecepcionaParameter, avisoBoletosParameter, comisionValidaCallParameter, horarioParameter);
        }
    
        public virtual int AgenciaUpdate(Nullable<int> id, string nombre, string domicilio, Nullable<int> localidadId, string telefono, string fax, string email, Nullable<int> zonasId, string comision, string comisionEncomiendas, string impresora, Nullable<int> reserva, Nullable<int> conTarjeta, Nullable<int> comisionTarjeta, Nullable<int> comisionPagoDestino, Nullable<int> comisionRecepciona, Nullable<int> avisoBoletos, Nullable<int> comisionValidaCall, string horario)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var domicilioParameter = domicilio != null ?
                new ObjectParameter("Domicilio", domicilio) :
                new ObjectParameter("Domicilio", typeof(string));
    
            var localidadIdParameter = localidadId.HasValue ?
                new ObjectParameter("LocalidadId", localidadId) :
                new ObjectParameter("LocalidadId", typeof(int));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var zonasIdParameter = zonasId.HasValue ?
                new ObjectParameter("ZonasId", zonasId) :
                new ObjectParameter("ZonasId", typeof(int));
    
            var comisionParameter = comision != null ?
                new ObjectParameter("Comision", comision) :
                new ObjectParameter("Comision", typeof(string));
    
            var comisionEncomiendasParameter = comisionEncomiendas != null ?
                new ObjectParameter("ComisionEncomiendas", comisionEncomiendas) :
                new ObjectParameter("ComisionEncomiendas", typeof(string));
    
            var impresoraParameter = impresora != null ?
                new ObjectParameter("Impresora", impresora) :
                new ObjectParameter("Impresora", typeof(string));
    
            var reservaParameter = reserva.HasValue ?
                new ObjectParameter("Reserva", reserva) :
                new ObjectParameter("Reserva", typeof(int));
    
            var conTarjetaParameter = conTarjeta.HasValue ?
                new ObjectParameter("ConTarjeta", conTarjeta) :
                new ObjectParameter("ConTarjeta", typeof(int));
    
            var comisionTarjetaParameter = comisionTarjeta.HasValue ?
                new ObjectParameter("ComisionTarjeta", comisionTarjeta) :
                new ObjectParameter("ComisionTarjeta", typeof(int));
    
            var comisionPagoDestinoParameter = comisionPagoDestino.HasValue ?
                new ObjectParameter("ComisionPagoDestino", comisionPagoDestino) :
                new ObjectParameter("ComisionPagoDestino", typeof(int));
    
            var comisionRecepcionaParameter = comisionRecepciona.HasValue ?
                new ObjectParameter("ComisionRecepciona", comisionRecepciona) :
                new ObjectParameter("ComisionRecepciona", typeof(int));
    
            var avisoBoletosParameter = avisoBoletos.HasValue ?
                new ObjectParameter("AvisoBoletos", avisoBoletos) :
                new ObjectParameter("AvisoBoletos", typeof(int));
    
            var comisionValidaCallParameter = comisionValidaCall.HasValue ?
                new ObjectParameter("ComisionValidaCall", comisionValidaCall) :
                new ObjectParameter("ComisionValidaCall", typeof(int));
    
            var horarioParameter = horario != null ?
                new ObjectParameter("Horario", horario) :
                new ObjectParameter("Horario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgenciaUpdate", idParameter, nombreParameter, domicilioParameter, localidadIdParameter, telefonoParameter, faxParameter, emailParameter, zonasIdParameter, comisionParameter, comisionEncomiendasParameter, impresoraParameter, reservaParameter, conTarjetaParameter, comisionTarjetaParameter, comisionPagoDestinoParameter, comisionRecepcionaParameter, avisoBoletosParameter, comisionValidaCallParameter, horarioParameter);
        }
    
        public virtual int AgenciaZonaGet(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgenciaZonaGet", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual ObjectResult<Application_Childs_Get_Result> Application_Childs_Get(Nullable<int> parentId)
        {
            var parentIdParameter = parentId.HasValue ?
                new ObjectParameter("ParentId", parentId) :
                new ObjectParameter("ParentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Application_Childs_Get_Result>("Application_Childs_Get", parentIdParameter);
        }
    
        public virtual ObjectResult<Application_Path_Get_Result> Application_Path_Get(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Application_Path_Get_Result>("Application_Path_Get", idParameter);
        }
    
        public virtual int ApplicationDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ApplicationDelete", idParameter);
        }
    
        public virtual int ApplicationGenerateTree(Nullable<int> parentId, Nullable<int> level)
        {
            var parentIdParameter = parentId.HasValue ?
                new ObjectParameter("ParentId", parentId) :
                new ObjectParameter("ParentId", typeof(int));
    
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ApplicationGenerateTree", parentIdParameter, levelParameter);
        }
    
        public virtual ObjectResult<ApplicationGet_Result> ApplicationGet(string id, Nullable<byte> filterStart, string filter, Nullable<int> parentId, Nullable<byte> foreignKey)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var filterStartParameter = filterStart.HasValue ?
                new ObjectParameter("FilterStart", filterStart) :
                new ObjectParameter("FilterStart", typeof(byte));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var parentIdParameter = parentId.HasValue ?
                new ObjectParameter("ParentId", parentId) :
                new ObjectParameter("ParentId", typeof(int));
    
            var foreignKeyParameter = foreignKey.HasValue ?
                new ObjectParameter("ForeignKey", foreignKey) :
                new ObjectParameter("ForeignKey", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ApplicationGet_Result>("ApplicationGet", idParameter, filterStartParameter, filterParameter, parentIdParameter, foreignKeyParameter);
        }
    
        public virtual ObjectResult<ApplicationGetTree_Result> ApplicationGetTree(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ApplicationGetTree_Result>("ApplicationGetTree", userIdParameter);
        }
    
        public virtual int ApplicationInsert(Nullable<int> applicationId, string url, string name)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ApplicationInsert", applicationIdParameter, urlParameter, nameParameter);
        }
    
        public virtual int ApplicationUpdate(Nullable<int> id, Nullable<int> applicationId, string url, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ApplicationUpdate", idParameter, applicationIdParameter, urlParameter, nameParameter);
        }
    
        public virtual int ArmarListado(Nullable<int> idListado)
        {
            var idListadoParameter = idListado.HasValue ?
                new ObjectParameter("idListado", idListado) :
                new ObjectParameter("idListado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ArmarListado", idListadoParameter);
        }
    
        public virtual ObjectResult<AscensoEncoGet_Result> AscensoEncoGet(string desde, string hasta)
        {
            var desdeParameter = desde != null ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(string));
    
            var hastaParameter = hasta != null ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AscensoEncoGet_Result>("AscensoEncoGet", desdeParameter, hastaParameter);
        }
    
        public virtual ObjectResult<AscensoGet_Result> AscensoGet(string desde, string hasta)
        {
            var desdeParameter = desde != null ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(string));
    
            var hastaParameter = hasta != null ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AscensoGet_Result>("AscensoGet", desdeParameter, hastaParameter);
        }
    
        public virtual ObjectResult<AsientoaUsar_Result> AsientoaUsar(Nullable<int> servicio)
        {
            var servicioParameter = servicio.HasValue ?
                new ObjectParameter("servicio", servicio) :
                new ObjectParameter("servicio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AsientoaUsar_Result>("AsientoaUsar", servicioParameter);
        }
    
        public virtual int AsientoDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AsientoDelete", idParameter);
        }
    
        public virtual int AsientoGet(Nullable<int> vehiculoId, string filterType, string filter, Nullable<int> id, string fields)
        {
            var vehiculoIdParameter = vehiculoId.HasValue ?
                new ObjectParameter("VehiculoId", vehiculoId) :
                new ObjectParameter("VehiculoId", typeof(int));
    
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AsientoGet", vehiculoIdParameter, filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> AsientoInsert(string nombre, Nullable<int> vehiculoId, string estado)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var vehiculoIdParameter = vehiculoId.HasValue ?
                new ObjectParameter("VehiculoId", vehiculoId) :
                new ObjectParameter("VehiculoId", typeof(int));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AsientoInsert", nombreParameter, vehiculoIdParameter, estadoParameter);
        }
    
        public virtual int AsientoUpdate(Nullable<int> id, string nombre, Nullable<int> vehiculoId, string estado)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var vehiculoIdParameter = vehiculoId.HasValue ?
                new ObjectParameter("VehiculoId", vehiculoId) :
                new ObjectParameter("VehiculoId", typeof(int));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AsientoUpdate", idParameter, nombreParameter, vehiculoIdParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> AsignarAsiento(Nullable<int> ticketId, Nullable<int> servicioEfectivoId, Nullable<int> asientoId, Nullable<int> paradaOrigenId, Nullable<int> paradaDestinoId, Nullable<int> recorridoId, string userId, Nullable<int> clienteID, string horaS, string fechaS)
        {
            var ticketIdParameter = ticketId.HasValue ?
                new ObjectParameter("TicketId", ticketId) :
                new ObjectParameter("TicketId", typeof(int));
    
            var servicioEfectivoIdParameter = servicioEfectivoId.HasValue ?
                new ObjectParameter("ServicioEfectivoId", servicioEfectivoId) :
                new ObjectParameter("ServicioEfectivoId", typeof(int));
    
            var asientoIdParameter = asientoId.HasValue ?
                new ObjectParameter("AsientoId", asientoId) :
                new ObjectParameter("AsientoId", typeof(int));
    
            var paradaOrigenIdParameter = paradaOrigenId.HasValue ?
                new ObjectParameter("ParadaOrigenId", paradaOrigenId) :
                new ObjectParameter("ParadaOrigenId", typeof(int));
    
            var paradaDestinoIdParameter = paradaDestinoId.HasValue ?
                new ObjectParameter("ParadaDestinoId", paradaDestinoId) :
                new ObjectParameter("ParadaDestinoId", typeof(int));
    
            var recorridoIdParameter = recorridoId.HasValue ?
                new ObjectParameter("RecorridoId", recorridoId) :
                new ObjectParameter("RecorridoId", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var clienteIDParameter = clienteID.HasValue ?
                new ObjectParameter("ClienteID", clienteID) :
                new ObjectParameter("ClienteID", typeof(int));
    
            var horaSParameter = horaS != null ?
                new ObjectParameter("HoraS", horaS) :
                new ObjectParameter("HoraS", typeof(string));
    
            var fechaSParameter = fechaS != null ?
                new ObjectParameter("FechaS", fechaS) :
                new ObjectParameter("FechaS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AsignarAsiento", ticketIdParameter, servicioEfectivoIdParameter, asientoIdParameter, paradaOrigenIdParameter, paradaDestinoIdParameter, recorridoIdParameter, userIdParameter, clienteIDParameter, horaSParameter, fechaSParameter);
        }
    
        public virtual int bckpdb()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("bckpdb");
        }
    
        public virtual int BorraT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BorraT");
        }
    
        public virtual ObjectResult<CalculoConTarjeta_Result> CalculoConTarjeta(Nullable<int> idTarjetas)
        {
            var idTarjetasParameter = idTarjetas.HasValue ?
                new ObjectParameter("idTarjetas", idTarjetas) :
                new ObjectParameter("idTarjetas", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CalculoConTarjeta_Result>("CalculoConTarjeta", idTarjetasParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CambioCoche(Nullable<int> servicioEfectivoId, Nullable<int> vehiculoId)
        {
            var servicioEfectivoIdParameter = servicioEfectivoId.HasValue ?
                new ObjectParameter("ServicioEfectivoId", servicioEfectivoId) :
                new ObjectParameter("ServicioEfectivoId", typeof(int));
    
            var vehiculoIdParameter = vehiculoId.HasValue ?
                new ObjectParameter("VehiculoId", vehiculoId) :
                new ObjectParameter("VehiculoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CambioCoche", servicioEfectivoIdParameter, vehiculoIdParameter);
        }
    
        public virtual int CancelarNoValidados()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CancelarNoValidados");
        }
    
        public virtual int CancelarReserva(Nullable<int> reservaId, Nullable<int> asientoId, Nullable<int> servicioEfectivoId)
        {
            var reservaIdParameter = reservaId.HasValue ?
                new ObjectParameter("ReservaId", reservaId) :
                new ObjectParameter("ReservaId", typeof(int));
    
            var asientoIdParameter = asientoId.HasValue ?
                new ObjectParameter("AsientoId", asientoId) :
                new ObjectParameter("AsientoId", typeof(int));
    
            var servicioEfectivoIdParameter = servicioEfectivoId.HasValue ?
                new ObjectParameter("ServicioEfectivoId", servicioEfectivoId) :
                new ObjectParameter("ServicioEfectivoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CancelarReserva", reservaIdParameter, asientoIdParameter, servicioEfectivoIdParameter);
        }
    
        public virtual int CancelarReservas(Nullable<int> servicioEfectivoId)
        {
            var servicioEfectivoIdParameter = servicioEfectivoId.HasValue ?
                new ObjectParameter("ServicioEfectivoId", servicioEfectivoId) :
                new ObjectParameter("ServicioEfectivoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CancelarReservas", servicioEfectivoIdParameter);
        }
    
        public virtual int CancelarTapada(Nullable<int> reservaId, Nullable<int> asientoId, Nullable<int> servicioEfectivoId)
        {
            var reservaIdParameter = reservaId.HasValue ?
                new ObjectParameter("ReservaId", reservaId) :
                new ObjectParameter("ReservaId", typeof(int));
    
            var asientoIdParameter = asientoId.HasValue ?
                new ObjectParameter("AsientoId", asientoId) :
                new ObjectParameter("AsientoId", typeof(int));
    
            var servicioEfectivoIdParameter = servicioEfectivoId.HasValue ?
                new ObjectParameter("ServicioEfectivoId", servicioEfectivoId) :
                new ObjectParameter("ServicioEfectivoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CancelarTapada", reservaIdParameter, asientoIdParameter, servicioEfectivoIdParameter);
        }
    
        public virtual ObjectResult<CanjeB_Result> CanjeB(Nullable<int> numero, Nullable<int> empresa)
        {
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(int));
    
            var empresaParameter = empresa.HasValue ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CanjeB_Result>("CanjeB", numeroParameter, empresaParameter);
        }
    
        public virtual int CanjeMarca(Nullable<int> boleto, Nullable<int> idVenta)
        {
            var boletoParameter = boleto.HasValue ?
                new ObjectParameter("Boleto", boleto) :
                new ObjectParameter("Boleto", typeof(int));
    
            var idVentaParameter = idVenta.HasValue ?
                new ObjectParameter("idVenta", idVenta) :
                new ObjectParameter("idVenta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CanjeMarca", boletoParameter, idVentaParameter);
        }
    
        public virtual int CarroceriaDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CarroceriaDelete", idParameter);
        }
    
        public virtual int CarroceriaGet(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CarroceriaGet", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CarroceriaInsert(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CarroceriaInsert", nombreParameter);
        }
    
        public virtual int CarroceriaUpdate(Nullable<int> id, string nombre)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CarroceriaUpdate", idParameter, nombreParameter);
        }
    
        public virtual int CategoriaDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CategoriaDelete", idParameter);
        }
    
        public virtual int CategoriaGet(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CategoriaGet", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CategoriaInsert(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CategoriaInsert", nombreParameter);
        }
    
        public virtual int CategoriaUpdate(Nullable<int> id, string nombre)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CategoriaUpdate", idParameter, nombreParameter);
        }
    
        public virtual int CheckMacAddress(string macAddress, string nombrePC, string caption, string iPAddress, string dHCPServer, string dHCPEnabled, string iPFilterSecurityEnabled, string latitude, string longitude, string hTTP_USER_AGENT, string rEMOTE_HOST, string rEMOTE_ADDR)
        {
            var macAddressParameter = macAddress != null ?
                new ObjectParameter("MacAddress", macAddress) :
                new ObjectParameter("MacAddress", typeof(string));
    
            var nombrePCParameter = nombrePC != null ?
                new ObjectParameter("NombrePC", nombrePC) :
                new ObjectParameter("NombrePC", typeof(string));
    
            var captionParameter = caption != null ?
                new ObjectParameter("Caption", caption) :
                new ObjectParameter("Caption", typeof(string));
    
            var iPAddressParameter = iPAddress != null ?
                new ObjectParameter("IPAddress", iPAddress) :
                new ObjectParameter("IPAddress", typeof(string));
    
            var dHCPServerParameter = dHCPServer != null ?
                new ObjectParameter("DHCPServer", dHCPServer) :
                new ObjectParameter("DHCPServer", typeof(string));
    
            var dHCPEnabledParameter = dHCPEnabled != null ?
                new ObjectParameter("DHCPEnabled", dHCPEnabled) :
                new ObjectParameter("DHCPEnabled", typeof(string));
    
            var iPFilterSecurityEnabledParameter = iPFilterSecurityEnabled != null ?
                new ObjectParameter("IPFilterSecurityEnabled", iPFilterSecurityEnabled) :
                new ObjectParameter("IPFilterSecurityEnabled", typeof(string));
    
            var latitudeParameter = latitude != null ?
                new ObjectParameter("Latitude", latitude) :
                new ObjectParameter("Latitude", typeof(string));
    
            var longitudeParameter = longitude != null ?
                new ObjectParameter("Longitude", longitude) :
                new ObjectParameter("Longitude", typeof(string));
    
            var hTTP_USER_AGENTParameter = hTTP_USER_AGENT != null ?
                new ObjectParameter("HTTP_USER_AGENT", hTTP_USER_AGENT) :
                new ObjectParameter("HTTP_USER_AGENT", typeof(string));
    
            var rEMOTE_HOSTParameter = rEMOTE_HOST != null ?
                new ObjectParameter("REMOTE_HOST", rEMOTE_HOST) :
                new ObjectParameter("REMOTE_HOST", typeof(string));
    
            var rEMOTE_ADDRParameter = rEMOTE_ADDR != null ?
                new ObjectParameter("REMOTE_ADDR", rEMOTE_ADDR) :
                new ObjectParameter("REMOTE_ADDR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CheckMacAddress", macAddressParameter, nombrePCParameter, captionParameter, iPAddressParameter, dHCPServerParameter, dHCPEnabledParameter, iPFilterSecurityEnabledParameter, latitudeParameter, longitudeParameter, hTTP_USER_AGENTParameter, rEMOTE_HOSTParameter, rEMOTE_ADDRParameter);
        }
    
        public virtual int Chofer2Get(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Chofer2Get", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual int Chofer3Get(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Chofer3Get", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual int Chofer4Get(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Chofer4Get", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual int ChoferDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ChoferDelete", idParameter);
        }
    
        public virtual int ChoferGet(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ChoferGet", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ChoferInsert(string apellido, string nombre, string ncarnet, string venceCarnet)
        {
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var ncarnetParameter = ncarnet != null ?
                new ObjectParameter("Ncarnet", ncarnet) :
                new ObjectParameter("Ncarnet", typeof(string));
    
            var venceCarnetParameter = venceCarnet != null ?
                new ObjectParameter("VenceCarnet", venceCarnet) :
                new ObjectParameter("VenceCarnet", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ChoferInsert", apellidoParameter, nombreParameter, ncarnetParameter, venceCarnetParameter);
        }
    
        public virtual int ChoferUpdate(Nullable<int> id, string apellido, string nombre, string nCarnet, string venceCarnet)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var nCarnetParameter = nCarnet != null ?
                new ObjectParameter("NCarnet", nCarnet) :
                new ObjectParameter("NCarnet", typeof(string));
    
            var venceCarnetParameter = venceCarnet != null ?
                new ObjectParameter("VenceCarnet", venceCarnet) :
                new ObjectParameter("VenceCarnet", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ChoferUpdate", idParameter, apellidoParameter, nombreParameter, nCarnetParameter, venceCarnetParameter);
        }
    
        public virtual int ClienteDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClienteDelete", idParameter);
        }
    
        public virtual int ClienteDNIGet(Nullable<int> documento)
        {
            var documentoParameter = documento.HasValue ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClienteDNIGet", documentoParameter);
        }
    
        public virtual int ClienteEncoDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClienteEncoDelete", idParameter);
        }
    
        public virtual ObjectResult<ClienteEncoDNIGet_Result> ClienteEncoDNIGet(string documento)
        {
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClienteEncoDNIGet_Result>("ClienteEncoDNIGet", documentoParameter);
        }
    
        public virtual int ClienteEncoGet(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClienteEncoGet", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ClienteEncoInsert(string razon, string dNICUIT, string domicilio, Nullable<int> localidadId, string telefono, string email, Nullable<System.DateTime> alta)
        {
            var razonParameter = razon != null ?
                new ObjectParameter("Razon", razon) :
                new ObjectParameter("Razon", typeof(string));
    
            var dNICUITParameter = dNICUIT != null ?
                new ObjectParameter("DNICUIT", dNICUIT) :
                new ObjectParameter("DNICUIT", typeof(string));
    
            var domicilioParameter = domicilio != null ?
                new ObjectParameter("Domicilio", domicilio) :
                new ObjectParameter("Domicilio", typeof(string));
    
            var localidadIdParameter = localidadId.HasValue ?
                new ObjectParameter("LocalidadId", localidadId) :
                new ObjectParameter("LocalidadId", typeof(int));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var altaParameter = alta.HasValue ?
                new ObjectParameter("Alta", alta) :
                new ObjectParameter("Alta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ClienteEncoInsert", razonParameter, dNICUITParameter, domicilioParameter, localidadIdParameter, telefonoParameter, emailParameter, altaParameter);
        }
    
        public virtual int ClienteEncoUpdate(Nullable<int> id, string razon, string dNICUIT, string domicilio, Nullable<int> localidadId, string telefono, string email, Nullable<System.DateTime> alta)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var razonParameter = razon != null ?
                new ObjectParameter("Razon", razon) :
                new ObjectParameter("Razon", typeof(string));
    
            var dNICUITParameter = dNICUIT != null ?
                new ObjectParameter("DNICUIT", dNICUIT) :
                new ObjectParameter("DNICUIT", typeof(string));
    
            var domicilioParameter = domicilio != null ?
                new ObjectParameter("Domicilio", domicilio) :
                new ObjectParameter("Domicilio", typeof(string));
    
            var localidadIdParameter = localidadId.HasValue ?
                new ObjectParameter("LocalidadId", localidadId) :
                new ObjectParameter("LocalidadId", typeof(int));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var altaParameter = alta.HasValue ?
                new ObjectParameter("Alta", alta) :
                new ObjectParameter("Alta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClienteEncoUpdate", idParameter, razonParameter, dNICUITParameter, domicilioParameter, localidadIdParameter, telefonoParameter, emailParameter, altaParameter);
        }
    
        public virtual int ClienteGet(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClienteGet", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual int ClienteGetN(string filterType, Nullable<int> filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter.HasValue ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClienteGetN", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ClienteInsert(string apellido, string nombre, Nullable<int> tipoDocumentoId, string documento, Nullable<System.DateTime> fechaNacimiento, string domicilio, Nullable<int> localidadId, string telefono, string email, Nullable<System.DateTime> alta, Nullable<int> sexoId)
        {
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var tipoDocumentoIdParameter = tipoDocumentoId.HasValue ?
                new ObjectParameter("TipoDocumentoId", tipoDocumentoId) :
                new ObjectParameter("TipoDocumentoId", typeof(int));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var domicilioParameter = domicilio != null ?
                new ObjectParameter("Domicilio", domicilio) :
                new ObjectParameter("Domicilio", typeof(string));
    
            var localidadIdParameter = localidadId.HasValue ?
                new ObjectParameter("LocalidadId", localidadId) :
                new ObjectParameter("LocalidadId", typeof(int));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var altaParameter = alta.HasValue ?
                new ObjectParameter("Alta", alta) :
                new ObjectParameter("Alta", typeof(System.DateTime));
    
            var sexoIdParameter = sexoId.HasValue ?
                new ObjectParameter("SexoId", sexoId) :
                new ObjectParameter("SexoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ClienteInsert", apellidoParameter, nombreParameter, tipoDocumentoIdParameter, documentoParameter, fechaNacimientoParameter, domicilioParameter, localidadIdParameter, telefonoParameter, emailParameter, altaParameter, sexoIdParameter);
        }
    
        public virtual ObjectResult<ClientesViajesGetListado_Result> ClientesViajesGetListado(string documento, string apellido)
        {
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClientesViajesGetListado_Result>("ClientesViajesGetListado", documentoParameter, apellidoParameter);
        }
    
        public virtual int ClienteUpdate(Nullable<int> id, string apellido, string nombre, Nullable<int> tipoDocumentoId, string documento, Nullable<System.DateTime> fechaNacimiento, string domicilio, Nullable<int> localidadId, string telefono, string email, Nullable<System.DateTime> alta, Nullable<int> sexoId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var tipoDocumentoIdParameter = tipoDocumentoId.HasValue ?
                new ObjectParameter("TipoDocumentoId", tipoDocumentoId) :
                new ObjectParameter("TipoDocumentoId", typeof(int));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var domicilioParameter = domicilio != null ?
                new ObjectParameter("Domicilio", domicilio) :
                new ObjectParameter("Domicilio", typeof(string));
    
            var localidadIdParameter = localidadId.HasValue ?
                new ObjectParameter("LocalidadId", localidadId) :
                new ObjectParameter("LocalidadId", typeof(int));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var altaParameter = alta.HasValue ?
                new ObjectParameter("Alta", alta) :
                new ObjectParameter("Alta", typeof(System.DateTime));
    
            var sexoIdParameter = sexoId.HasValue ?
                new ObjectParameter("SexoId", sexoId) :
                new ObjectParameter("SexoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClienteUpdate", idParameter, apellidoParameter, nombreParameter, tipoDocumentoIdParameter, documentoParameter, fechaNacimientoParameter, domicilioParameter, localidadIdParameter, telefonoParameter, emailParameter, altaParameter, sexoIdParameter);
        }
    
        public virtual ObjectResult<Nullable<byte>> ConfiguracionGet()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<byte>>("ConfiguracionGet");
        }
    
        public virtual int ConfiguracionUpdate(Nullable<byte> tiempoReserva)
        {
            var tiempoReservaParameter = tiempoReserva.HasValue ?
                new ObjectParameter("TiempoReserva", tiempoReserva) :
                new ObjectParameter("TiempoReserva", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ConfiguracionUpdate", tiempoReservaParameter);
        }
    
        public virtual ObjectResult<ControlTarifaC_Result> ControlTarifaC(Nullable<int> aReemplazar, Nullable<int> original, Nullable<int> tarifaOriginal, Nullable<int> tarifaReemplazar)
        {
            var aReemplazarParameter = aReemplazar.HasValue ?
                new ObjectParameter("AReemplazar", aReemplazar) :
                new ObjectParameter("AReemplazar", typeof(int));
    
            var originalParameter = original.HasValue ?
                new ObjectParameter("Original", original) :
                new ObjectParameter("Original", typeof(int));
    
            var tarifaOriginalParameter = tarifaOriginal.HasValue ?
                new ObjectParameter("TarifaOriginal", tarifaOriginal) :
                new ObjectParameter("TarifaOriginal", typeof(int));
    
            var tarifaReemplazarParameter = tarifaReemplazar.HasValue ?
                new ObjectParameter("TarifaReemplazar", tarifaReemplazar) :
                new ObjectParameter("TarifaReemplazar", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ControlTarifaC_Result>("ControlTarifaC", aReemplazarParameter, originalParameter, tarifaOriginalParameter, tarifaReemplazarParameter);
        }
    
        public virtual ObjectResult<ControlTarifas_Result> ControlTarifas(Nullable<int> recorrido, Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta, string hora, Nullable<int> linea)
        {
            var recorridoParameter = recorrido.HasValue ?
                new ObjectParameter("Recorrido", recorrido) :
                new ObjectParameter("Recorrido", typeof(int));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(System.DateTime));
    
            var horaParameter = hora != null ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(string));
    
            var lineaParameter = linea.HasValue ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ControlTarifas_Result>("ControlTarifas", recorridoParameter, desdeParameter, hastaParameter, horaParameter, lineaParameter);
        }
    
        public virtual ObjectResult<ControlTarifas2_Result> ControlTarifas2(Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta, Nullable<int> recorrido, string hora, Nullable<int> linea)
        {
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(System.DateTime));
    
            var recorridoParameter = recorrido.HasValue ?
                new ObjectParameter("Recorrido", recorrido) :
                new ObjectParameter("Recorrido", typeof(int));
    
            var horaParameter = hora != null ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(string));
    
            var lineaParameter = linea.HasValue ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ControlTarifas2_Result>("ControlTarifas2", desdeParameter, hastaParameter, recorridoParameter, horaParameter, lineaParameter);
        }
    
        public virtual ObjectResult<ControlTarifas3_Result> ControlTarifas3(Nullable<int> recorrido, string hora, Nullable<int> grilla)
        {
            var recorridoParameter = recorrido.HasValue ?
                new ObjectParameter("Recorrido", recorrido) :
                new ObjectParameter("Recorrido", typeof(int));
    
            var horaParameter = hora != null ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(string));
    
            var grillaParameter = grilla.HasValue ?
                new ObjectParameter("Grilla", grilla) :
                new ObjectParameter("Grilla", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ControlTarifas3_Result>("ControlTarifas3", recorridoParameter, horaParameter, grillaParameter);
        }
    
        public virtual int CopiaTarifa(Nullable<int> aReemplazar, Nullable<int> original, Nullable<int> tarifaOriginal, Nullable<int> tarifaReemplazar)
        {
            var aReemplazarParameter = aReemplazar.HasValue ?
                new ObjectParameter("AReemplazar", aReemplazar) :
                new ObjectParameter("AReemplazar", typeof(int));
    
            var originalParameter = original.HasValue ?
                new ObjectParameter("Original", original) :
                new ObjectParameter("Original", typeof(int));
    
            var tarifaOriginalParameter = tarifaOriginal.HasValue ?
                new ObjectParameter("TarifaOriginal", tarifaOriginal) :
                new ObjectParameter("TarifaOriginal", typeof(int));
    
            var tarifaReemplazarParameter = tarifaReemplazar.HasValue ?
                new ObjectParameter("TarifaReemplazar", tarifaReemplazar) :
                new ObjectParameter("TarifaReemplazar", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CopiaTarifa", aReemplazarParameter, originalParameter, tarifaOriginalParameter, tarifaReemplazarParameter);
        }
    
        public virtual int CtaBcoGet(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CtaBcoGet", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CtaBcoInsert(string descripcion, string cuenta, string banco, string titular, Nullable<decimal> monto, Nullable<System.DateTime> fecha, Nullable<int> prioridad, Nullable<int> desactivado)
        {
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var cuentaParameter = cuenta != null ?
                new ObjectParameter("Cuenta", cuenta) :
                new ObjectParameter("Cuenta", typeof(string));
    
            var bancoParameter = banco != null ?
                new ObjectParameter("Banco", banco) :
                new ObjectParameter("Banco", typeof(string));
    
            var titularParameter = titular != null ?
                new ObjectParameter("Titular", titular) :
                new ObjectParameter("Titular", typeof(string));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("Monto", monto) :
                new ObjectParameter("Monto", typeof(decimal));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var prioridadParameter = prioridad.HasValue ?
                new ObjectParameter("Prioridad", prioridad) :
                new ObjectParameter("Prioridad", typeof(int));
    
            var desactivadoParameter = desactivado.HasValue ?
                new ObjectParameter("Desactivado", desactivado) :
                new ObjectParameter("Desactivado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CtaBcoInsert", descripcionParameter, cuentaParameter, bancoParameter, titularParameter, montoParameter, fechaParameter, prioridadParameter, desactivadoParameter);
        }
    
        public virtual int CtaBcoUpdate(Nullable<int> id, string descripcion, string cuenta, string banco, string titular, Nullable<decimal> monto, Nullable<System.DateTime> fecha, Nullable<int> prioridad, Nullable<int> desactivado)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var cuentaParameter = cuenta != null ?
                new ObjectParameter("Cuenta", cuenta) :
                new ObjectParameter("Cuenta", typeof(string));
    
            var bancoParameter = banco != null ?
                new ObjectParameter("Banco", banco) :
                new ObjectParameter("Banco", typeof(string));
    
            var titularParameter = titular != null ?
                new ObjectParameter("Titular", titular) :
                new ObjectParameter("Titular", typeof(string));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("Monto", monto) :
                new ObjectParameter("Monto", typeof(decimal));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var prioridadParameter = prioridad.HasValue ?
                new ObjectParameter("Prioridad", prioridad) :
                new ObjectParameter("Prioridad", typeof(int));
    
            var desactivadoParameter = desactivado.HasValue ?
                new ObjectParameter("Desactivado", desactivado) :
                new ObjectParameter("Desactivado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CtaBcoUpdate", idParameter, descripcionParameter, cuentaParameter, bancoParameter, titularParameter, montoParameter, fechaParameter, prioridadParameter, desactivadoParameter);
        }
    
        public virtual ObjectResult<CtaCteAgencia_Result> CtaCteAgencia(Nullable<int> idser)
        {
            var idserParameter = idser.HasValue ?
                new ObjectParameter("Idser", idser) :
                new ObjectParameter("Idser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CtaCteAgencia_Result>("CtaCteAgencia", idserParameter);
        }
    
        public virtual ObjectResult<CtaCteAgencia3_Result> CtaCteAgencia3(Nullable<int> idser)
        {
            var idserParameter = idser.HasValue ?
                new ObjectParameter("Idser", idser) :
                new ObjectParameter("Idser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CtaCteAgencia3_Result>("CtaCteAgencia3", idserParameter);
        }
    
        public virtual ObjectResult<CtaCteAgenciaCallValida_Result> CtaCteAgenciaCallValida(Nullable<int> agenciaId)
        {
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CtaCteAgenciaCallValida_Result>("CtaCteAgenciaCallValida", agenciaIdParameter);
        }
    
        public virtual ObjectResult<CtaCteAgenciaCallValidaLiq_Result> CtaCteAgenciaCallValidaLiq(Nullable<int> liquidacionId, Nullable<int> agenciaId)
        {
            var liquidacionIdParameter = liquidacionId.HasValue ?
                new ObjectParameter("LiquidacionId", liquidacionId) :
                new ObjectParameter("LiquidacionId", typeof(int));
    
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CtaCteAgenciaCallValidaLiq_Result>("CtaCteAgenciaCallValidaLiq", liquidacionIdParameter, agenciaIdParameter);
        }
    
        public virtual ObjectResult<CtaCteAgenciaDT_Result> CtaCteAgenciaDT(Nullable<int> idser)
        {
            var idserParameter = idser.HasValue ?
                new ObjectParameter("Idser", idser) :
                new ObjectParameter("Idser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CtaCteAgenciaDT_Result>("CtaCteAgenciaDT", idserParameter);
        }
    
        public virtual ObjectResult<CtaCteAgenciaEnco_Result> CtaCteAgenciaEnco(Nullable<int> idser)
        {
            var idserParameter = idser.HasValue ?
                new ObjectParameter("Idser", idser) :
                new ObjectParameter("Idser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CtaCteAgenciaEnco_Result>("CtaCteAgenciaEnco", idserParameter);
        }
    
        public virtual ObjectResult<CtaCteAgenciaValida_Result> CtaCteAgenciaValida(Nullable<int> agenciaId)
        {
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CtaCteAgenciaValida_Result>("CtaCteAgenciaValida", agenciaIdParameter);
        }
    
        public virtual ObjectResult<CtaCteAgenciaValidaLiq_Result> CtaCteAgenciaValidaLiq(Nullable<int> liquidacionId, Nullable<int> agenciaId)
        {
            var liquidacionIdParameter = liquidacionId.HasValue ?
                new ObjectParameter("LiquidacionId", liquidacionId) :
                new ObjectParameter("LiquidacionId", typeof(int));
    
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CtaCteAgenciaValidaLiq_Result>("CtaCteAgenciaValidaLiq", liquidacionIdParameter, agenciaIdParameter);
        }
    
        public virtual ObjectResult<CtaCteDeudores_Result> CtaCteDeudores()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CtaCteDeudores_Result>("CtaCteDeudores");
        }
    
        public virtual ObjectResult<CtaCteDeudoresEnco_Result> CtaCteDeudoresEnco()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CtaCteDeudoresEnco_Result>("CtaCteDeudoresEnco");
        }
    
        public virtual ObjectResult<CtaCteEncoAgencia_Result> CtaCteEncoAgencia(Nullable<int> idser)
        {
            var idserParameter = idser.HasValue ?
                new ObjectParameter("Idser", idser) :
                new ObjectParameter("Idser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CtaCteEncoAgencia_Result>("CtaCteEncoAgencia", idserParameter);
        }
    
        public virtual int DesactivarRango(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DesactivarRango", idParameter);
        }
    
        public virtual int DesactivarRangoEnco(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DesactivarRangoEnco", idParameter);
        }
    
        public virtual int DesactivarRangoExcesos(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DesactivarRangoExcesos", idParameter);
        }
    
        public virtual int DesactivarRangoFacturas(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DesactivarRangoFacturas", idParameter);
        }
    
        public virtual int DesactivarRangoRecibos(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DesactivarRangoRecibos", idParameter);
        }
    
        public virtual int DesactivarRangoRemitos(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DesactivarRangoRemitos", idParameter);
        }
    
        public virtual ObjectResult<DescensoEncoGet_Result> DescensoEncoGet(string desde, string hasta)
        {
            var desdeParameter = desde != null ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(string));
    
            var hastaParameter = hasta != null ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DescensoEncoGet_Result>("DescensoEncoGet", desdeParameter, hastaParameter);
        }
    
        public virtual ObjectResult<DescensoGet_Result> DescensoGet(string desde, string hasta)
        {
            var desdeParameter = desde != null ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(string));
    
            var hastaParameter = hasta != null ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DescensoGet_Result>("DescensoGet", desdeParameter, hastaParameter);
        }
    
        public virtual ObjectResult<DescuentoServicioGet_Result> DescuentoServicioGet(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DescuentoServicioGet_Result>("DescuentoServicioGet", idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> DesdoblamientoAutomatico(Nullable<int> servicioEfectivoId, Nullable<int> vehiculoId)
        {
            var servicioEfectivoIdParameter = servicioEfectivoId.HasValue ?
                new ObjectParameter("ServicioEfectivoId", servicioEfectivoId) :
                new ObjectParameter("ServicioEfectivoId", typeof(int));
    
            var vehiculoIdParameter = vehiculoId.HasValue ?
                new ObjectParameter("VehiculoId", vehiculoId) :
                new ObjectParameter("VehiculoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("DesdoblamientoAutomatico", servicioEfectivoIdParameter, vehiculoIdParameter);
        }
    
        public virtual int DesdoblamientoEncomiendas(Nullable<int> servicioEfectivoOrigenId, Nullable<int> servicioEfectivoDestinoId)
        {
            var servicioEfectivoOrigenIdParameter = servicioEfectivoOrigenId.HasValue ?
                new ObjectParameter("ServicioEfectivoOrigenId", servicioEfectivoOrigenId) :
                new ObjectParameter("ServicioEfectivoOrigenId", typeof(int));
    
            var servicioEfectivoDestinoIdParameter = servicioEfectivoDestinoId.HasValue ?
                new ObjectParameter("ServicioEfectivoDestinoId", servicioEfectivoDestinoId) :
                new ObjectParameter("ServicioEfectivoDestinoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DesdoblamientoEncomiendas", servicioEfectivoOrigenIdParameter, servicioEfectivoDestinoIdParameter);
        }
    
        public virtual int DesdoblamientoManual(Nullable<int> servicioEfectivoOrigenId, Nullable<int> servicioEfectivoDestinoId, Nullable<int> asientoOrigenId, Nullable<int> asientoDestinoId, Nullable<int> desde, Nullable<int> hasta, Nullable<byte> venta)
        {
            var servicioEfectivoOrigenIdParameter = servicioEfectivoOrigenId.HasValue ?
                new ObjectParameter("ServicioEfectivoOrigenId", servicioEfectivoOrigenId) :
                new ObjectParameter("ServicioEfectivoOrigenId", typeof(int));
    
            var servicioEfectivoDestinoIdParameter = servicioEfectivoDestinoId.HasValue ?
                new ObjectParameter("ServicioEfectivoDestinoId", servicioEfectivoDestinoId) :
                new ObjectParameter("ServicioEfectivoDestinoId", typeof(int));
    
            var asientoOrigenIdParameter = asientoOrigenId.HasValue ?
                new ObjectParameter("AsientoOrigenId", asientoOrigenId) :
                new ObjectParameter("AsientoOrigenId", typeof(int));
    
            var asientoDestinoIdParameter = asientoDestinoId.HasValue ?
                new ObjectParameter("AsientoDestinoId", asientoDestinoId) :
                new ObjectParameter("AsientoDestinoId", typeof(int));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(int));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(int));
    
            var ventaParameter = venta.HasValue ?
                new ObjectParameter("Venta", venta) :
                new ObjectParameter("Venta", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DesdoblamientoManual", servicioEfectivoOrigenIdParameter, servicioEfectivoDestinoIdParameter, asientoOrigenIdParameter, asientoDestinoIdParameter, desdeParameter, hastaParameter, ventaParameter);
        }
    
        public virtual ObjectResult<DesdoblamientoServiciosEfectivosGet_Result> DesdoblamientoServiciosEfectivosGet(Nullable<int> servicioEfectivoId, Nullable<System.DateTime> fecha, Nullable<int> desde, Nullable<int> hasta)
        {
            var servicioEfectivoIdParameter = servicioEfectivoId.HasValue ?
                new ObjectParameter("ServicioEfectivoId", servicioEfectivoId) :
                new ObjectParameter("ServicioEfectivoId", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(int));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DesdoblamientoServiciosEfectivosGet_Result>("DesdoblamientoServiciosEfectivosGet", servicioEfectivoIdParameter, fechaParameter, desdeParameter, hastaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> DesdoblamientoTransaccional(Nullable<int> servicioEfectivoOrigenId, Nullable<int> servicioEfectivoDestinoId, Nullable<int> desde)
        {
            var servicioEfectivoOrigenIdParameter = servicioEfectivoOrigenId.HasValue ?
                new ObjectParameter("ServicioEfectivoOrigenId", servicioEfectivoOrigenId) :
                new ObjectParameter("ServicioEfectivoOrigenId", typeof(int));
    
            var servicioEfectivoDestinoIdParameter = servicioEfectivoDestinoId.HasValue ?
                new ObjectParameter("ServicioEfectivoDestinoId", servicioEfectivoDestinoId) :
                new ObjectParameter("ServicioEfectivoDestinoId", typeof(int));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("DesdoblamientoTransaccional", servicioEfectivoOrigenIdParameter, servicioEfectivoDestinoIdParameter, desdeParameter);
        }
    
        public virtual ObjectResult<DesdoblamientoTransaccionalServicios_Result> DesdoblamientoTransaccionalServicios(Nullable<int> servicioEfectivoId, Nullable<int> paradaId)
        {
            var servicioEfectivoIdParameter = servicioEfectivoId.HasValue ?
                new ObjectParameter("ServicioEfectivoId", servicioEfectivoId) :
                new ObjectParameter("ServicioEfectivoId", typeof(int));
    
            var paradaIdParameter = paradaId.HasValue ?
                new ObjectParameter("ParadaId", paradaId) :
                new ObjectParameter("ParadaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DesdoblamientoTransaccionalServicios_Result>("DesdoblamientoTransaccionalServicios", servicioEfectivoIdParameter, paradaIdParameter);
        }
    
        public virtual ObjectResult<DesdoblamientoVehiculosGet_Result> DesdoblamientoVehiculosGet(Nullable<int> servicioEfectivoId)
        {
            var servicioEfectivoIdParameter = servicioEfectivoId.HasValue ?
                new ObjectParameter("ServicioEfectivoId", servicioEfectivoId) :
                new ObjectParameter("ServicioEfectivoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DesdoblamientoVehiculosGet_Result>("DesdoblamientoVehiculosGet", servicioEfectivoIdParameter);
        }
    
        public virtual ObjectResult<DesxParadaxRecoGet_Result> DesxParadaxRecoGet(string desde, string hasta, Nullable<int> parada, Nullable<int> recorrido)
        {
            var desdeParameter = desde != null ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(string));
    
            var hastaParameter = hasta != null ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(string));
    
            var paradaParameter = parada.HasValue ?
                new ObjectParameter("Parada", parada) :
                new ObjectParameter("Parada", typeof(int));
    
            var recorridoParameter = recorrido.HasValue ?
                new ObjectParameter("Recorrido", recorrido) :
                new ObjectParameter("Recorrido", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DesxParadaxRecoGet_Result>("DesxParadaxRecoGet", desdeParameter, hastaParameter, paradaParameter, recorridoParameter);
        }
    
        public virtual int DevolverAbierto(Nullable<int> ticketId, Nullable<decimal> devol, Nullable<int> agenciaId, string userId)
        {
            var ticketIdParameter = ticketId.HasValue ?
                new ObjectParameter("TicketId", ticketId) :
                new ObjectParameter("TicketId", typeof(int));
    
            var devolParameter = devol.HasValue ?
                new ObjectParameter("Devol", devol) :
                new ObjectParameter("Devol", typeof(decimal));
    
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DevolverAbierto", ticketIdParameter, devolParameter, agenciaIdParameter, userIdParameter);
        }
    
        public virtual int DevolverAsiento(Nullable<int> ticketId, Nullable<decimal> devol)
        {
            var ticketIdParameter = ticketId.HasValue ?
                new ObjectParameter("TicketId", ticketId) :
                new ObjectParameter("TicketId", typeof(int));
    
            var devolParameter = devol.HasValue ?
                new ObjectParameter("Devol", devol) :
                new ObjectParameter("Devol", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DevolverAsiento", ticketIdParameter, devolParameter);
        }
    
        public virtual int DevolverAsientoFC(Nullable<int> ticketId, Nullable<decimal> devol)
        {
            var ticketIdParameter = ticketId.HasValue ?
                new ObjectParameter("TicketId", ticketId) :
                new ObjectParameter("TicketId", typeof(int));
    
            var devolParameter = devol.HasValue ?
                new ObjectParameter("Devol", devol) :
                new ObjectParameter("Devol", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DevolverAsientoFC", ticketIdParameter, devolParameter);
        }
    
        public virtual int DpoBcoGet(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DpoBcoGet", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual ObjectResult<string> dt_addtosourcecontrol(string vchSourceSafeINI, string vchProjectName, string vchComment, string vchLoginName, string vchPassword)
        {
            var vchSourceSafeINIParameter = vchSourceSafeINI != null ?
                new ObjectParameter("vchSourceSafeINI", vchSourceSafeINI) :
                new ObjectParameter("vchSourceSafeINI", typeof(string));
    
            var vchProjectNameParameter = vchProjectName != null ?
                new ObjectParameter("vchProjectName", vchProjectName) :
                new ObjectParameter("vchProjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("dt_addtosourcecontrol", vchSourceSafeINIParameter, vchProjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual ObjectResult<string> dt_addtosourcecontrol_u(string vchSourceSafeINI, string vchProjectName, string vchComment, string vchLoginName, string vchPassword)
        {
            var vchSourceSafeINIParameter = vchSourceSafeINI != null ?
                new ObjectParameter("vchSourceSafeINI", vchSourceSafeINI) :
                new ObjectParameter("vchSourceSafeINI", typeof(string));
    
            var vchProjectNameParameter = vchProjectName != null ?
                new ObjectParameter("vchProjectName", vchProjectName) :
                new ObjectParameter("vchProjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("dt_addtosourcecontrol_u", vchSourceSafeINIParameter, vchProjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_adduserobject()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_adduserobject");
        }
    
        public virtual int dt_adduserobject_vcs(string vchProperty)
        {
            var vchPropertyParameter = vchProperty != null ?
                new ObjectParameter("vchProperty", vchProperty) :
                new ObjectParameter("vchProperty", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_adduserobject_vcs", vchPropertyParameter);
        }
    
        public virtual int dt_checkinobject(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag, string txStream1, string txStream2, string txStream3)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            var txStream1Parameter = txStream1 != null ?
                new ObjectParameter("txStream1", txStream1) :
                new ObjectParameter("txStream1", typeof(string));
    
            var txStream2Parameter = txStream2 != null ?
                new ObjectParameter("txStream2", txStream2) :
                new ObjectParameter("txStream2", typeof(string));
    
            var txStream3Parameter = txStream3 != null ?
                new ObjectParameter("txStream3", txStream3) :
                new ObjectParameter("txStream3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkinobject", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter, txStream1Parameter, txStream2Parameter, txStream3Parameter);
        }
    
        public virtual int dt_checkinobject_u(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag, string txStream1, string txStream2, string txStream3)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            var txStream1Parameter = txStream1 != null ?
                new ObjectParameter("txStream1", txStream1) :
                new ObjectParameter("txStream1", typeof(string));
    
            var txStream2Parameter = txStream2 != null ?
                new ObjectParameter("txStream2", txStream2) :
                new ObjectParameter("txStream2", typeof(string));
    
            var txStream3Parameter = txStream3 != null ?
                new ObjectParameter("txStream3", txStream3) :
                new ObjectParameter("txStream3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkinobject_u", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter, txStream1Parameter, txStream2Parameter, txStream3Parameter);
        }
    
        public virtual int dt_checkoutobject(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkoutobject", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter);
        }
    
        public virtual int dt_checkoutobject_u(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkoutobject_u", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter);
        }
    
        public virtual int dt_displayoaerror(Nullable<int> iObject, Nullable<int> iresult)
        {
            var iObjectParameter = iObject.HasValue ?
                new ObjectParameter("iObject", iObject) :
                new ObjectParameter("iObject", typeof(int));
    
            var iresultParameter = iresult.HasValue ?
                new ObjectParameter("iresult", iresult) :
                new ObjectParameter("iresult", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_displayoaerror", iObjectParameter, iresultParameter);
        }
    
        public virtual int dt_displayoaerror_u(Nullable<int> iObject, Nullable<int> iresult)
        {
            var iObjectParameter = iObject.HasValue ?
                new ObjectParameter("iObject", iObject) :
                new ObjectParameter("iObject", typeof(int));
    
            var iresultParameter = iresult.HasValue ?
                new ObjectParameter("iresult", iresult) :
                new ObjectParameter("iresult", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_displayoaerror_u", iObjectParameter, iresultParameter);
        }
    
        public virtual int dt_droppropertiesbyid(Nullable<int> id, string property)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_droppropertiesbyid", idParameter, propertyParameter);
        }
    
        public virtual int dt_dropuserobjectbyid(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_dropuserobjectbyid", idParameter);
        }
    
        public virtual int dt_generateansiname(ObjectParameter name)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_generateansiname", name);
        }
    
        public virtual ObjectResult<Nullable<int>> dt_getobjwithprop(string property, string value)
        {
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_getobjwithprop", propertyParameter, valueParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> dt_getobjwithprop_u(string property, string uvalue)
        {
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var uvalueParameter = uvalue != null ?
                new ObjectParameter("uvalue", uvalue) :
                new ObjectParameter("uvalue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_getobjwithprop_u", propertyParameter, uvalueParameter);
        }
    
        public virtual ObjectResult<dt_getpropertiesbyid_Result> dt_getpropertiesbyid(Nullable<int> id, string property)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dt_getpropertiesbyid_Result>("dt_getpropertiesbyid", idParameter, propertyParameter);
        }
    
        public virtual ObjectResult<dt_getpropertiesbyid_u_Result> dt_getpropertiesbyid_u(Nullable<int> id, string property)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dt_getpropertiesbyid_u_Result>("dt_getpropertiesbyid_u", idParameter, propertyParameter);
        }
    
        public virtual int dt_getpropertiesbyid_vcs(Nullable<int> id, string property, ObjectParameter value)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_getpropertiesbyid_vcs", idParameter, propertyParameter, value);
        }
    
        public virtual int dt_getpropertiesbyid_vcs_u(Nullable<int> id, string property, ObjectParameter value)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_getpropertiesbyid_vcs_u", idParameter, propertyParameter, value);
        }
    
        public virtual int dt_isundersourcecontrol(string vchLoginName, string vchPassword, Nullable<int> iWhoToo)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iWhoTooParameter = iWhoToo.HasValue ?
                new ObjectParameter("iWhoToo", iWhoToo) :
                new ObjectParameter("iWhoToo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_isundersourcecontrol", vchLoginNameParameter, vchPasswordParameter, iWhoTooParameter);
        }
    
        public virtual int dt_isundersourcecontrol_u(string vchLoginName, string vchPassword, Nullable<int> iWhoToo)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iWhoTooParameter = iWhoToo.HasValue ?
                new ObjectParameter("iWhoToo", iWhoToo) :
                new ObjectParameter("iWhoToo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_isundersourcecontrol_u", vchLoginNameParameter, vchPasswordParameter, iWhoTooParameter);
        }
    
        public virtual int dt_removefromsourcecontrol()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_removefromsourcecontrol");
        }
    
        public virtual int dt_setpropertybyid(Nullable<int> id, string property, string value, byte[] lvalue)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var lvalueParameter = lvalue != null ?
                new ObjectParameter("lvalue", lvalue) :
                new ObjectParameter("lvalue", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_setpropertybyid", idParameter, propertyParameter, valueParameter, lvalueParameter);
        }
    
        public virtual int dt_setpropertybyid_u(Nullable<int> id, string property, string uvalue, byte[] lvalue)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var uvalueParameter = uvalue != null ?
                new ObjectParameter("uvalue", uvalue) :
                new ObjectParameter("uvalue", typeof(string));
    
            var lvalueParameter = lvalue != null ?
                new ObjectParameter("lvalue", lvalue) :
                new ObjectParameter("lvalue", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_setpropertybyid_u", idParameter, propertyParameter, uvalueParameter, lvalueParameter);
        }
    
        public virtual int dt_validateloginparams(string vchLoginName, string vchPassword)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_validateloginparams", vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_validateloginparams_u(string vchLoginName, string vchPassword)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_validateloginparams_u", vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_vcsenabled()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_vcsenabled");
        }
    
        public virtual ObjectResult<Nullable<int>> dt_verstamp006()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_verstamp006");
        }
    
        public virtual ObjectResult<Nullable<int>> dt_verstamp007()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_verstamp007");
        }
    
        public virtual ObjectResult<string> dt_whocheckedout(string chObjectType, string vchObjectName, string vchLoginName, string vchPassword)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("dt_whocheckedout", chObjectTypeParameter, vchObjectNameParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual ObjectResult<string> dt_whocheckedout_u(string chObjectType, string vchObjectName, string vchLoginName, string vchPassword)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("dt_whocheckedout_u", chObjectTypeParameter, vchObjectNameParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EfectivizarReserva(Nullable<int> asientoId, Nullable<int> paradaOrigenId, Nullable<int> paradaDestinoId, Nullable<int> servicioEfectivoId, Nullable<System.DateTime> fecha, Nullable<int> clienteId, Nullable<int> lineaId, Nullable<int> ventaId, Nullable<int> agenciaId, Nullable<int> recorridoId, Nullable<decimal> tarifa, string userId)
        {
            var asientoIdParameter = asientoId.HasValue ?
                new ObjectParameter("AsientoId", asientoId) :
                new ObjectParameter("AsientoId", typeof(int));
    
            var paradaOrigenIdParameter = paradaOrigenId.HasValue ?
                new ObjectParameter("ParadaOrigenId", paradaOrigenId) :
                new ObjectParameter("ParadaOrigenId", typeof(int));
    
            var paradaDestinoIdParameter = paradaDestinoId.HasValue ?
                new ObjectParameter("ParadaDestinoId", paradaDestinoId) :
                new ObjectParameter("ParadaDestinoId", typeof(int));
    
            var servicioEfectivoIdParameter = servicioEfectivoId.HasValue ?
                new ObjectParameter("ServicioEfectivoId", servicioEfectivoId) :
                new ObjectParameter("ServicioEfectivoId", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var clienteIdParameter = clienteId.HasValue ?
                new ObjectParameter("ClienteId", clienteId) :
                new ObjectParameter("ClienteId", typeof(int));
    
            var lineaIdParameter = lineaId.HasValue ?
                new ObjectParameter("LineaId", lineaId) :
                new ObjectParameter("LineaId", typeof(int));
    
            var ventaIdParameter = ventaId.HasValue ?
                new ObjectParameter("VentaId", ventaId) :
                new ObjectParameter("VentaId", typeof(int));
    
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var recorridoIdParameter = recorridoId.HasValue ?
                new ObjectParameter("RecorridoId", recorridoId) :
                new ObjectParameter("RecorridoId", typeof(int));
    
            var tarifaParameter = tarifa.HasValue ?
                new ObjectParameter("Tarifa", tarifa) :
                new ObjectParameter("Tarifa", typeof(decimal));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EfectivizarReserva", asientoIdParameter, paradaOrigenIdParameter, paradaDestinoIdParameter, servicioEfectivoIdParameter, fechaParameter, clienteIdParameter, lineaIdParameter, ventaIdParameter, agenciaIdParameter, recorridoIdParameter, tarifaParameter, userIdParameter);
        }
    
        public virtual int EmpleadoDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmpleadoDelete", idParameter);
        }
    
        public virtual int EmpleadoGet(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmpleadoGet", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EmpleadoInsert(string apellido, string nombre, string domicilio, Nullable<int> localidadId, string telefono)
        {
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var domicilioParameter = domicilio != null ?
                new ObjectParameter("Domicilio", domicilio) :
                new ObjectParameter("Domicilio", typeof(string));
    
            var localidadIdParameter = localidadId.HasValue ?
                new ObjectParameter("LocalidadId", localidadId) :
                new ObjectParameter("LocalidadId", typeof(int));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EmpleadoInsert", apellidoParameter, nombreParameter, domicilioParameter, localidadIdParameter, telefonoParameter);
        }
    
        public virtual int EmpleadoUpdate(Nullable<int> id, string apellido, string nombre, string domicilio, Nullable<int> localidadId, string telefono)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var domicilioParameter = domicilio != null ?
                new ObjectParameter("Domicilio", domicilio) :
                new ObjectParameter("Domicilio", typeof(string));
    
            var localidadIdParameter = localidadId.HasValue ?
                new ObjectParameter("LocalidadId", localidadId) :
                new ObjectParameter("LocalidadId", typeof(int));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmpleadoUpdate", idParameter, apellidoParameter, nombreParameter, domicilioParameter, localidadIdParameter, telefonoParameter);
        }
    
        public virtual int EmpresaGet(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmpresaGet", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual ObjectResult<EncomiendaRecepcion_Result> EncomiendaRecepcion(string fecha, Nullable<int> destino)
        {
            var fechaParameter = fecha != null ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(string));
    
            var destinoParameter = destino.HasValue ?
                new ObjectParameter("Destino", destino) :
                new ObjectParameter("Destino", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EncomiendaRecepcion_Result>("EncomiendaRecepcion", fechaParameter, destinoParameter);
        }
    
        public virtual int EstructuraDelete(Nullable<int> vehiculoId, Nullable<byte> fila, Nullable<byte> columna)
        {
            var vehiculoIdParameter = vehiculoId.HasValue ?
                new ObjectParameter("VehiculoId", vehiculoId) :
                new ObjectParameter("VehiculoId", typeof(int));
    
            var filaParameter = fila.HasValue ?
                new ObjectParameter("Fila", fila) :
                new ObjectParameter("Fila", typeof(byte));
    
            var columnaParameter = columna.HasValue ?
                new ObjectParameter("Columna", columna) :
                new ObjectParameter("Columna", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EstructuraDelete", vehiculoIdParameter, filaParameter, columnaParameter);
        }
    
        public virtual int EstructuraGet(Nullable<int> vehiculoId, Nullable<byte> fila, Nullable<byte> columna, Nullable<byte> piso, string fields)
        {
            var vehiculoIdParameter = vehiculoId.HasValue ?
                new ObjectParameter("VehiculoId", vehiculoId) :
                new ObjectParameter("VehiculoId", typeof(int));
    
            var filaParameter = fila.HasValue ?
                new ObjectParameter("Fila", fila) :
                new ObjectParameter("Fila", typeof(byte));
    
            var columnaParameter = columna.HasValue ?
                new ObjectParameter("Columna", columna) :
                new ObjectParameter("Columna", typeof(byte));
    
            var pisoParameter = piso.HasValue ?
                new ObjectParameter("Piso", piso) :
                new ObjectParameter("Piso", typeof(byte));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EstructuraGet", vehiculoIdParameter, filaParameter, columnaParameter, pisoParameter, fieldsParameter);
        }
    
        public virtual int EstructuraInsert(Nullable<int> vehiculoId, Nullable<byte> fila, Nullable<byte> columna, Nullable<int> tipoId, Nullable<int> asientoId, Nullable<byte> piso)
        {
            var vehiculoIdParameter = vehiculoId.HasValue ?
                new ObjectParameter("VehiculoId", vehiculoId) :
                new ObjectParameter("VehiculoId", typeof(int));
    
            var filaParameter = fila.HasValue ?
                new ObjectParameter("Fila", fila) :
                new ObjectParameter("Fila", typeof(byte));
    
            var columnaParameter = columna.HasValue ?
                new ObjectParameter("Columna", columna) :
                new ObjectParameter("Columna", typeof(byte));
    
            var tipoIdParameter = tipoId.HasValue ?
                new ObjectParameter("TipoId", tipoId) :
                new ObjectParameter("TipoId", typeof(int));
    
            var asientoIdParameter = asientoId.HasValue ?
                new ObjectParameter("AsientoId", asientoId) :
                new ObjectParameter("AsientoId", typeof(int));
    
            var pisoParameter = piso.HasValue ?
                new ObjectParameter("Piso", piso) :
                new ObjectParameter("Piso", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EstructuraInsert", vehiculoIdParameter, filaParameter, columnaParameter, tipoIdParameter, asientoIdParameter, pisoParameter);
        }
    
        public virtual int EstructuraUpdate(Nullable<int> vehiculoId, Nullable<byte> fila, Nullable<byte> columna, Nullable<int> tipoId, Nullable<int> asientoId, Nullable<byte> piso, Nullable<byte> filaOld, Nullable<byte> columnaOld, Nullable<byte> pisoOld)
        {
            var vehiculoIdParameter = vehiculoId.HasValue ?
                new ObjectParameter("VehiculoId", vehiculoId) :
                new ObjectParameter("VehiculoId", typeof(int));
    
            var filaParameter = fila.HasValue ?
                new ObjectParameter("Fila", fila) :
                new ObjectParameter("Fila", typeof(byte));
    
            var columnaParameter = columna.HasValue ?
                new ObjectParameter("Columna", columna) :
                new ObjectParameter("Columna", typeof(byte));
    
            var tipoIdParameter = tipoId.HasValue ?
                new ObjectParameter("TipoId", tipoId) :
                new ObjectParameter("TipoId", typeof(int));
    
            var asientoIdParameter = asientoId.HasValue ?
                new ObjectParameter("AsientoId", asientoId) :
                new ObjectParameter("AsientoId", typeof(int));
    
            var pisoParameter = piso.HasValue ?
                new ObjectParameter("Piso", piso) :
                new ObjectParameter("Piso", typeof(byte));
    
            var filaOldParameter = filaOld.HasValue ?
                new ObjectParameter("FilaOld", filaOld) :
                new ObjectParameter("FilaOld", typeof(byte));
    
            var columnaOldParameter = columnaOld.HasValue ?
                new ObjectParameter("ColumnaOld", columnaOld) :
                new ObjectParameter("ColumnaOld", typeof(byte));
    
            var pisoOldParameter = pisoOld.HasValue ?
                new ObjectParameter("PisoOld", pisoOld) :
                new ObjectParameter("PisoOld", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EstructuraUpdate", vehiculoIdParameter, filaParameter, columnaParameter, tipoIdParameter, asientoIdParameter, pisoParameter, filaOldParameter, columnaOldParameter, pisoOldParameter);
        }
    
        public virtual int GastoDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GastoDelete", idParameter);
        }
    
        public virtual int GastoGet(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GastoGet", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GastoInsert(Nullable<int> idAgencia, string idUser, Nullable<int> idTipoGasto, Nullable<decimal> monto, string detalle)
        {
            var idAgenciaParameter = idAgencia.HasValue ?
                new ObjectParameter("IdAgencia", idAgencia) :
                new ObjectParameter("IdAgencia", typeof(int));
    
            var idUserParameter = idUser != null ?
                new ObjectParameter("IdUser", idUser) :
                new ObjectParameter("IdUser", typeof(string));
    
            var idTipoGastoParameter = idTipoGasto.HasValue ?
                new ObjectParameter("IdTipoGasto", idTipoGasto) :
                new ObjectParameter("IdTipoGasto", typeof(int));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("Monto", monto) :
                new ObjectParameter("Monto", typeof(decimal));
    
            var detalleParameter = detalle != null ?
                new ObjectParameter("Detalle", detalle) :
                new ObjectParameter("Detalle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GastoInsert", idAgenciaParameter, idUserParameter, idTipoGastoParameter, montoParameter, detalleParameter);
        }
    
        public virtual ObjectResult<GastoLiquidacionGet_Result> GastoLiquidacionGet(Nullable<int> idLiquidacion)
        {
            var idLiquidacionParameter = idLiquidacion.HasValue ?
                new ObjectParameter("IdLiquidacion", idLiquidacion) :
                new ObjectParameter("IdLiquidacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GastoLiquidacionGet_Result>("GastoLiquidacionGet", idLiquidacionParameter);
        }
    
        public virtual ObjectResult<GeneralEncoGet_Result> GeneralEncoGet(string desde, string hasta, Nullable<int> empresa)
        {
            var desdeParameter = desde != null ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(string));
    
            var hastaParameter = hasta != null ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(string));
    
            var empresaParameter = empresa.HasValue ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GeneralEncoGet_Result>("GeneralEncoGet", desdeParameter, hastaParameter, empresaParameter);
        }
    
        public virtual ObjectResult<GeneralEncoGetBoletos_Result> GeneralEncoGetBoletos(string desde, string hasta, Nullable<int> empresa)
        {
            var desdeParameter = desde != null ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(string));
    
            var hastaParameter = hasta != null ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(string));
    
            var empresaParameter = empresa.HasValue ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GeneralEncoGetBoletos_Result>("GeneralEncoGetBoletos", desdeParameter, hastaParameter, empresaParameter);
        }
    
        public virtual ObjectResult<GeneralGet_Result> GeneralGet(string desde, string hasta, Nullable<int> empresa)
        {
            var desdeParameter = desde != null ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(string));
    
            var hastaParameter = hasta != null ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(string));
    
            var empresaParameter = empresa.HasValue ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GeneralGet_Result>("GeneralGet", desdeParameter, hastaParameter, empresaParameter);
        }
    
        public virtual ObjectResult<GeneralGetBoletos_Result> GeneralGetBoletos(string desde, string hasta, Nullable<int> empresa)
        {
            var desdeParameter = desde != null ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(string));
    
            var hastaParameter = hasta != null ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(string));
    
            var empresaParameter = empresa.HasValue ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GeneralGetBoletos_Result>("GeneralGetBoletos", desdeParameter, hastaParameter, empresaParameter);
        }
    
        public virtual ObjectResult<GeneralGetEnco_Result> GeneralGetEnco(string desde, string hasta, Nullable<int> empresa)
        {
            var desdeParameter = desde != null ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(string));
    
            var hastaParameter = hasta != null ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(string));
    
            var empresaParameter = empresa.HasValue ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GeneralGetEnco_Result>("GeneralGetEnco", desdeParameter, hastaParameter, empresaParameter);
        }
    
        public virtual ObjectResult<GeneralGetExceso_Result> GeneralGetExceso(string desde, string hasta, Nullable<int> empresa)
        {
            var desdeParameter = desde != null ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(string));
    
            var hastaParameter = hasta != null ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(string));
    
            var empresaParameter = empresa.HasValue ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GeneralGetExceso_Result>("GeneralGetExceso", desdeParameter, hastaParameter, empresaParameter);
        }
    
        public virtual ObjectResult<GeneralGetSeguro_Result> GeneralGetSeguro(string desde, string hasta, Nullable<int> empresa)
        {
            var desdeParameter = desde != null ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(string));
    
            var hastaParameter = hasta != null ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(string));
    
            var empresaParameter = empresa.HasValue ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GeneralGetSeguro_Result>("GeneralGetSeguro", desdeParameter, hastaParameter, empresaParameter);
        }
    
        public virtual ObjectResult<GetBoletosLow_Result> GetBoletosLow(string desde, string hasta, Nullable<int> empresa)
        {
            var desdeParameter = desde != null ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(string));
    
            var hastaParameter = hasta != null ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(string));
    
            var empresaParameter = empresa.HasValue ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBoletosLow_Result>("GetBoletosLow", desdeParameter, hastaParameter, empresaParameter);
        }
    
        public virtual int GroupDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GroupDelete", idParameter);
        }
    
        public virtual ObjectResult<GroupGet_Result> GroupGet(string id, Nullable<byte> filterStart, string filter)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var filterStartParameter = filterStart.HasValue ?
                new ObjectParameter("FilterStart", filterStart) :
                new ObjectParameter("FilterStart", typeof(byte));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GroupGet_Result>("GroupGet", idParameter, filterStartParameter, filterParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> GroupInsert(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("GroupInsert", nameParameter);
        }
    
        public virtual int GroupUpdate(Nullable<int> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GroupUpdate", idParameter, nameParameter);
        }
    
        public virtual ObjectResult<HojaDeRutaGet_Result> HojaDeRutaGet(Nullable<int> idser)
        {
            var idserParameter = idser.HasValue ?
                new ObjectParameter("Idser", idser) :
                new ObjectParameter("Idser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HojaDeRutaGet_Result>("HojaDeRutaGet", idserParameter);
        }
    
        public virtual ObjectResult<HojaDeRutaGetAdm_Result> HojaDeRutaGetAdm(Nullable<int> idser)
        {
            var idserParameter = idser.HasValue ?
                new ObjectParameter("Idser", idser) :
                new ObjectParameter("Idser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HojaDeRutaGetAdm_Result>("HojaDeRutaGetAdm", idserParameter);
        }
    
        public virtual ObjectResult<HojaDeRutaGGet_Result> HojaDeRutaGGet(Nullable<int> idser)
        {
            var idserParameter = idser.HasValue ?
                new ObjectParameter("Idser", idser) :
                new ObjectParameter("Idser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HojaDeRutaGGet_Result>("HojaDeRutaGGet", idserParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> HojaDeRutaInsert(string userId, Nullable<int> agenciaId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("HojaDeRutaInsert", userIdParameter, agenciaIdParameter);
        }
    
        public virtual ObjectResult<HojaderutaMDImprimir_Result> HojaderutaMDImprimir(Nullable<int> numero)
        {
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HojaderutaMDImprimir_Result>("HojaderutaMDImprimir", numeroParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> HojaderutaMDInsert(Nullable<int> asientoId, Nullable<int> paradaDestinoId, Nullable<int> numero, Nullable<decimal> tarifa, string userId, string coche, string chofer)
        {
            var asientoIdParameter = asientoId.HasValue ?
                new ObjectParameter("AsientoId", asientoId) :
                new ObjectParameter("AsientoId", typeof(int));
    
            var paradaDestinoIdParameter = paradaDestinoId.HasValue ?
                new ObjectParameter("ParadaDestinoId", paradaDestinoId) :
                new ObjectParameter("ParadaDestinoId", typeof(int));
    
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(int));
    
            var tarifaParameter = tarifa.HasValue ?
                new ObjectParameter("Tarifa", tarifa) :
                new ObjectParameter("Tarifa", typeof(decimal));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var cocheParameter = coche != null ?
                new ObjectParameter("Coche", coche) :
                new ObjectParameter("Coche", typeof(string));
    
            var choferParameter = chofer != null ?
                new ObjectParameter("Chofer", chofer) :
                new ObjectParameter("Chofer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("HojaderutaMDInsert", asientoIdParameter, paradaDestinoIdParameter, numeroParameter, tarifaParameter, userIdParameter, cocheParameter, choferParameter);
        }
    
        public virtual int HojaDeRutaSave(Nullable<double> numero, Nullable<int> liq)
        {
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(double));
    
            var liqParameter = liq.HasValue ?
                new ObjectParameter("Liq", liq) :
                new ObjectParameter("Liq", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HojaDeRutaSave", numeroParameter, liqParameter);
        }
    
        public virtual int HoraSalidaGet()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HoraSalidaGet");
        }
    
        public virtual ObjectResult<IvaVentasGet_Result> IvaVentasGet(string desde, string hasta)
        {
            var desdeParameter = desde != null ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(string));
    
            var hastaParameter = hasta != null ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IvaVentasGet_Result>("IvaVentasGet", desdeParameter, hastaParameter);
        }
    
        public virtual int LiberadosConf(Nullable<int> ticketId)
        {
            var ticketIdParameter = ticketId.HasValue ?
                new ObjectParameter("TicketId", ticketId) :
                new ObjectParameter("TicketId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LiberadosConf", ticketIdParameter);
        }
    
        public virtual ObjectResult<LiberadosGet_Result> LiberadosGet(Nullable<int> numero)
        {
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LiberadosGet_Result>("LiberadosGet", numeroParameter);
        }
    
        public virtual int LiberarAsiento(Nullable<int> ticketId, Nullable<int> agenciaId)
        {
            var ticketIdParameter = ticketId.HasValue ?
                new ObjectParameter("TicketId", ticketId) :
                new ObjectParameter("TicketId", typeof(int));
    
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LiberarAsiento", ticketIdParameter, agenciaIdParameter);
        }
    
        public virtual int LiberarAsientoFC(Nullable<int> ticketId)
        {
            var ticketIdParameter = ticketId.HasValue ?
                new ObjectParameter("TicketId", ticketId) :
                new ObjectParameter("TicketId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LiberarAsientoFC", ticketIdParameter);
        }
    
        public virtual int LineaDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LineaDelete", idParameter);
        }
    
        public virtual int LineaGet(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LineaGet", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> LineaInsert(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("LineaInsert", nombreParameter);
        }
    
        public virtual int LineaUpdate(Nullable<int> id, string nombre)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LineaUpdate", idParameter, nombreParameter);
        }
    
        public virtual int LiquidacionAnular(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LiquidacionAnular", idParameter);
        }
    
        public virtual int LiquidacionAnularEnco(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LiquidacionAnularEnco", idParameter);
        }
    
        public virtual int LiquidacionDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LiquidacionDelete", idParameter);
        }
    
        public virtual int LiquidacionDeleteEnco(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LiquidacionDeleteEnco", idParameter);
        }
    
        public virtual int LiquidacionesAConf(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LiquidacionesAConf", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual int LiquidacionesAConfEnco(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LiquidacionesAConfEnco", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual int LiquidacionesConfirmar(Nullable<int> idser, string userID)
        {
            var idserParameter = idser.HasValue ?
                new ObjectParameter("Idser", idser) :
                new ObjectParameter("Idser", typeof(int));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LiquidacionesConfirmar", idserParameter, userIDParameter);
        }
    
        public virtual int LiquidacionesConfirmarEnco(Nullable<int> idser, string userID)
        {
            var idserParameter = idser.HasValue ?
                new ObjectParameter("Idser", idser) :
                new ObjectParameter("Idser", typeof(int));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LiquidacionesConfirmarEnco", idserParameter, userIDParameter);
        }
    
        public virtual ObjectResult<LiquidacionesDetalle_Result> LiquidacionesDetalle(Nullable<int> idser)
        {
            var idserParameter = idser.HasValue ?
                new ObjectParameter("Idser", idser) :
                new ObjectParameter("Idser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LiquidacionesDetalle_Result>("LiquidacionesDetalle", idserParameter);
        }
    
        public virtual ObjectResult<LiquidacionesDetalleEnco_Result> LiquidacionesDetalleEnco(Nullable<int> idser)
        {
            var idserParameter = idser.HasValue ?
                new ObjectParameter("Idser", idser) :
                new ObjectParameter("Idser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LiquidacionesDetalleEnco_Result>("LiquidacionesDetalleEnco", idserParameter);
        }
    
        public virtual ObjectResult<LiquidacionesDetallePax_Result> LiquidacionesDetallePax(Nullable<int> idser)
        {
            var idserParameter = idser.HasValue ?
                new ObjectParameter("Idser", idser) :
                new ObjectParameter("Idser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LiquidacionesDetallePax_Result>("LiquidacionesDetallePax", idserParameter);
        }
    
        public virtual int LiquidacionesGet(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LiquidacionesGet", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual int LiquidacionesGetEnco(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LiquidacionesGetEnco", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual ObjectResult<LiquidacionesGetListado_Result> LiquidacionesGetListado(string desde, string hasta, string userId)
        {
            var desdeParameter = desde != null ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(string));
    
            var hastaParameter = hasta != null ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LiquidacionesGetListado_Result>("LiquidacionesGetListado", desdeParameter, hastaParameter, userIdParameter);
        }
    
        public virtual ObjectResult<LiquidacionesGetListadoEnco_Result> LiquidacionesGetListadoEnco(string desde, string hasta, string userId)
        {
            var desdeParameter = desde != null ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(string));
    
            var hastaParameter = hasta != null ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LiquidacionesGetListadoEnco_Result>("LiquidacionesGetListadoEnco", desdeParameter, hastaParameter, userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> LiquidacionInsert(string userId, Nullable<int> agenciaId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("LiquidacionInsert", userIdParameter, agenciaIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> LiquidacionInsertEnco(string userId, Nullable<int> agenciaId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("LiquidacionInsertEnco", userIdParameter, agenciaIdParameter);
        }
    
        public virtual ObjectResult<ListadoChofer_Result> ListadoChofer(Nullable<int> servicioEfectivoId)
        {
            var servicioEfectivoIdParameter = servicioEfectivoId.HasValue ?
                new ObjectParameter("ServicioEfectivoId", servicioEfectivoId) :
                new ObjectParameter("ServicioEfectivoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListadoChofer_Result>("ListadoChofer", servicioEfectivoIdParameter);
        }
    
        public virtual ObjectResult<ListadoSesiones_Result> ListadoSesiones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListadoSesiones_Result>("ListadoSesiones");
        }
    
        public virtual int LocalidadDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LocalidadDelete", idParameter);
        }
    
        public virtual int LocalidadGet(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LocalidadGet", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> LocalidadInsert(string nombre, Nullable<int> provinciaId)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var provinciaIdParameter = provinciaId.HasValue ?
                new ObjectParameter("ProvinciaId", provinciaId) :
                new ObjectParameter("ProvinciaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("LocalidadInsert", nombreParameter, provinciaIdParameter);
        }
    
        public virtual int LocalidadUpdate(Nullable<int> id, string nombre, Nullable<int> provinciaId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var provinciaIdParameter = provinciaId.HasValue ?
                new ObjectParameter("ProvinciaId", provinciaId) :
                new ObjectParameter("ProvinciaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LocalidadUpdate", idParameter, nombreParameter, provinciaIdParameter);
        }
    
        public virtual ObjectResult<LogESxFecha_Result> LogESxFecha(string desde, string hasta, string recorrido)
        {
            var desdeParameter = desde != null ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(string));
    
            var hastaParameter = hasta != null ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(string));
    
            var recorridoParameter = recorrido != null ?
                new ObjectParameter("Recorrido", recorrido) :
                new ObjectParameter("Recorrido", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LogESxFecha_Result>("LogESxFecha", desdeParameter, hastaParameter, recorridoParameter);
        }
    
        public virtual int LogInsert(Nullable<int> idUserReg, string operacion, string sqlCMD)
        {
            var idUserRegParameter = idUserReg.HasValue ?
                new ObjectParameter("idUserReg", idUserReg) :
                new ObjectParameter("idUserReg", typeof(int));
    
            var operacionParameter = operacion != null ?
                new ObjectParameter("Operacion", operacion) :
                new ObjectParameter("Operacion", typeof(string));
    
            var sqlCMDParameter = sqlCMD != null ?
                new ObjectParameter("SqlCMD", sqlCMD) :
                new ObjectParameter("SqlCMD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LogInsert", idUserRegParameter, operacionParameter, sqlCMDParameter);
        }
    
        public virtual int LowCostDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LowCostDelete", idParameter);
        }
    
        public virtual int LowCostGet(string filterType, string filter, Nullable<int> id, string fields, Nullable<byte> foreignKey)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            var foreignKeyParameter = foreignKey.HasValue ?
                new ObjectParameter("ForeignKey", foreignKey) :
                new ObjectParameter("ForeignKey", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LowCostGet", filterTypeParameter, filterParameter, idParameter, fieldsParameter, foreignKeyParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> LowCostInsert(Nullable<int> recorridoID, Nullable<int> dias, Nullable<int> descuento)
        {
            var recorridoIDParameter = recorridoID.HasValue ?
                new ObjectParameter("RecorridoID", recorridoID) :
                new ObjectParameter("RecorridoID", typeof(int));
    
            var diasParameter = dias.HasValue ?
                new ObjectParameter("Dias", dias) :
                new ObjectParameter("Dias", typeof(int));
    
            var descuentoParameter = descuento.HasValue ?
                new ObjectParameter("Descuento", descuento) :
                new ObjectParameter("Descuento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("LowCostInsert", recorridoIDParameter, diasParameter, descuentoParameter);
        }
    
        public virtual int LowCostUpdate(Nullable<int> id, Nullable<int> recorridoid, Nullable<int> dias, Nullable<int> descuento)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var recorridoidParameter = recorridoid.HasValue ?
                new ObjectParameter("recorridoid", recorridoid) :
                new ObjectParameter("recorridoid", typeof(int));
    
            var diasParameter = dias.HasValue ?
                new ObjectParameter("dias", dias) :
                new ObjectParameter("dias", typeof(int));
    
            var descuentoParameter = descuento.HasValue ?
                new ObjectParameter("descuento", descuento) :
                new ObjectParameter("descuento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LowCostUpdate", idParameter, recorridoidParameter, diasParameter, descuentoParameter);
        }
    
        public virtual int MarcaDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MarcaDelete", idParameter);
        }
    
        public virtual int MarcaGet(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MarcaGet", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> MarcaInsert(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("MarcaInsert", nombreParameter);
        }
    
        public virtual int MarcaUpdate(Nullable<int> id, string nombre)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MarcaUpdate", idParameter, nombreParameter);
        }
    
        public virtual int matiasr_DesactivarRangoFacuras(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("matiasr_DesactivarRangoFacuras", idParameter);
        }
    
        public virtual int NovedadesDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NovedadesDelete", idParameter);
        }
    
        public virtual int NovedadesGet(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NovedadesGet", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> NovedadesInsert(string titulo, string mensaje, Nullable<int> activo)
        {
            var tituloParameter = titulo != null ?
                new ObjectParameter("Titulo", titulo) :
                new ObjectParameter("Titulo", typeof(string));
    
            var mensajeParameter = mensaje != null ?
                new ObjectParameter("Mensaje", mensaje) :
                new ObjectParameter("Mensaje", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("NovedadesInsert", tituloParameter, mensajeParameter, activoParameter);
        }
    
        public virtual int NovedadesUpdate(Nullable<int> id, string titulo, string mensaje, Nullable<int> activo)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var tituloParameter = titulo != null ?
                new ObjectParameter("Titulo", titulo) :
                new ObjectParameter("Titulo", typeof(string));
    
            var mensajeParameter = mensaje != null ?
                new ObjectParameter("Mensaje", mensaje) :
                new ObjectParameter("Mensaje", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NovedadesUpdate", idParameter, tituloParameter, mensajeParameter, activoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> OfrecidosGet(string desde, string hasta, Nullable<int> empresa)
        {
            var desdeParameter = desde != null ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(string));
    
            var hastaParameter = hasta != null ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(string));
    
            var empresaParameter = empresa.HasValue ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("OfrecidosGet", desdeParameter, hastaParameter, empresaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> OfrecidosGetNew(string desde, string hasta, Nullable<int> empresa)
        {
            var desdeParameter = desde != null ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(string));
    
            var hastaParameter = hasta != null ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(string));
    
            var empresaParameter = empresa.HasValue ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("OfrecidosGetNew", desdeParameter, hastaParameter, empresaParameter);
        }
    
        public virtual ObjectResult<OriDesxRecorridoGet_Result> OriDesxRecorridoGet(string desde, string hasta, Nullable<int> recorrido)
        {
            var desdeParameter = desde != null ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(string));
    
            var hastaParameter = hasta != null ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(string));
    
            var recorridoParameter = recorrido.HasValue ?
                new ObjectParameter("Recorrido", recorrido) :
                new ObjectParameter("Recorrido", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OriDesxRecorridoGet_Result>("OriDesxRecorridoGet", desdeParameter, hastaParameter, recorridoParameter);
        }
    
        public virtual int PaisDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PaisDelete", idParameter);
        }
    
        public virtual int PaisGet(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PaisGet", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> PaisInsert(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("PaisInsert", nombreParameter);
        }
    
        public virtual int PaisUpdate(Nullable<int> id, string nombre)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PaisUpdate", idParameter, nombreParameter);
        }
    
        public virtual int ParadaDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ParadaDelete", idParameter);
        }
    
        public virtual int ParadaGet(string filterType, string filter, Nullable<int> id, string fields, Nullable<byte> foreignKey)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            var foreignKeyParameter = foreignKey.HasValue ?
                new ObjectParameter("ForeignKey", foreignKey) :
                new ObjectParameter("ForeignKey", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ParadaGet", filterTypeParameter, filterParameter, idParameter, fieldsParameter, foreignKeyParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ParadaInsert(string nombre, string domicilio, Nullable<int> localidadId, Nullable<int> pagoEnDestino, Nullable<int> entregaDomicilio, string plataforma, string nombre2, Nullable<int> paradaMD, string paradaCNRT)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var domicilioParameter = domicilio != null ?
                new ObjectParameter("Domicilio", domicilio) :
                new ObjectParameter("Domicilio", typeof(string));
    
            var localidadIdParameter = localidadId.HasValue ?
                new ObjectParameter("LocalidadId", localidadId) :
                new ObjectParameter("LocalidadId", typeof(int));
    
            var pagoEnDestinoParameter = pagoEnDestino.HasValue ?
                new ObjectParameter("PagoEnDestino", pagoEnDestino) :
                new ObjectParameter("PagoEnDestino", typeof(int));
    
            var entregaDomicilioParameter = entregaDomicilio.HasValue ?
                new ObjectParameter("EntregaDomicilio", entregaDomicilio) :
                new ObjectParameter("EntregaDomicilio", typeof(int));
    
            var plataformaParameter = plataforma != null ?
                new ObjectParameter("Plataforma", plataforma) :
                new ObjectParameter("Plataforma", typeof(string));
    
            var nombre2Parameter = nombre2 != null ?
                new ObjectParameter("Nombre2", nombre2) :
                new ObjectParameter("Nombre2", typeof(string));
    
            var paradaMDParameter = paradaMD.HasValue ?
                new ObjectParameter("ParadaMD", paradaMD) :
                new ObjectParameter("ParadaMD", typeof(int));
    
            var paradaCNRTParameter = paradaCNRT != null ?
                new ObjectParameter("ParadaCNRT", paradaCNRT) :
                new ObjectParameter("ParadaCNRT", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ParadaInsert", nombreParameter, domicilioParameter, localidadIdParameter, pagoEnDestinoParameter, entregaDomicilioParameter, plataformaParameter, nombre2Parameter, paradaMDParameter, paradaCNRTParameter);
        }
    
        public virtual int ParadaUpdate(Nullable<int> id, string nombre, string domicilio, Nullable<int> localidadId, Nullable<int> pagoEnDestino, Nullable<int> entregaDomicilio, string plataforma, string nombre2, Nullable<int> paradaMD, string paradaCNRT)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var domicilioParameter = domicilio != null ?
                new ObjectParameter("Domicilio", domicilio) :
                new ObjectParameter("Domicilio", typeof(string));
    
            var localidadIdParameter = localidadId.HasValue ?
                new ObjectParameter("LocalidadId", localidadId) :
                new ObjectParameter("LocalidadId", typeof(int));
    
            var pagoEnDestinoParameter = pagoEnDestino.HasValue ?
                new ObjectParameter("PagoEnDestino", pagoEnDestino) :
                new ObjectParameter("PagoEnDestino", typeof(int));
    
            var entregaDomicilioParameter = entregaDomicilio.HasValue ?
                new ObjectParameter("EntregaDomicilio", entregaDomicilio) :
                new ObjectParameter("EntregaDomicilio", typeof(int));
    
            var plataformaParameter = plataforma != null ?
                new ObjectParameter("Plataforma", plataforma) :
                new ObjectParameter("Plataforma", typeof(string));
    
            var nombre2Parameter = nombre2 != null ?
                new ObjectParameter("Nombre2", nombre2) :
                new ObjectParameter("Nombre2", typeof(string));
    
            var paradaMDParameter = paradaMD.HasValue ?
                new ObjectParameter("ParadaMD", paradaMD) :
                new ObjectParameter("ParadaMD", typeof(int));
    
            var paradaCNRTParameter = paradaCNRT != null ?
                new ObjectParameter("ParadaCNRT", paradaCNRT) :
                new ObjectParameter("ParadaCNRT", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ParadaUpdate", idParameter, nombreParameter, domicilioParameter, localidadIdParameter, pagoEnDestinoParameter, entregaDomicilioParameter, plataformaParameter, nombre2Parameter, paradaMDParameter, paradaCNRTParameter);
        }
    
        public virtual int PermissionDelete(Nullable<int> applicationId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PermissionDelete", applicationIdParameter);
        }
    
        public virtual ObjectResult<string> PermissionGet(string userId, Nullable<int> applicationId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("PermissionGet", userIdParameter, applicationIdParameter);
        }
    
        public virtual int PermissionInsert(Nullable<int> applicationId, string permissionTypeId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var permissionTypeIdParameter = permissionTypeId != null ?
                new ObjectParameter("PermissionTypeId", permissionTypeId) :
                new ObjectParameter("PermissionTypeId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PermissionInsert", applicationIdParameter, permissionTypeIdParameter);
        }
    
        public virtual int PermissionTypeDelete(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PermissionTypeDelete", idParameter);
        }
    
        public virtual ObjectResult<PermissionTypeGet_Result> PermissionTypeGet(string id, Nullable<byte> filterStart, string filter)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var filterStartParameter = filterStart.HasValue ?
                new ObjectParameter("FilterStart", filterStart) :
                new ObjectParameter("FilterStart", typeof(byte));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PermissionTypeGet_Result>("PermissionTypeGet", idParameter, filterStartParameter, filterParameter);
        }
    
        public virtual int PermissionTypeInsert(string id, string name)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PermissionTypeInsert", idParameter, nameParameter);
        }
    
        public virtual int PermissionTypeUpdate(string id, string name)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PermissionTypeUpdate", idParameter, nameParameter);
        }
    
        public virtual ObjectResult<PlantillaGet_Result> PlantillaGet(Nullable<int> servicioEfectivoId, Nullable<int> vehiculoId, Nullable<int> desde, Nullable<int> hasta, Nullable<int> recorridoId)
        {
            var servicioEfectivoIdParameter = servicioEfectivoId.HasValue ?
                new ObjectParameter("ServicioEfectivoId", servicioEfectivoId) :
                new ObjectParameter("ServicioEfectivoId", typeof(int));
    
            var vehiculoIdParameter = vehiculoId.HasValue ?
                new ObjectParameter("VehiculoId", vehiculoId) :
                new ObjectParameter("VehiculoId", typeof(int));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(int));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(int));
    
            var recorridoIdParameter = recorridoId.HasValue ?
                new ObjectParameter("RecorridoId", recorridoId) :
                new ObjectParameter("RecorridoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PlantillaGet_Result>("PlantillaGet", servicioEfectivoIdParameter, vehiculoIdParameter, desdeParameter, hastaParameter, recorridoIdParameter);
        }
    
        public virtual ObjectResult<PlantillaHorizontalGet_Result> PlantillaHorizontalGet(Nullable<int> servicioEfectivoId, Nullable<int> vehiculoId, Nullable<int> desde, Nullable<int> hasta, Nullable<int> recorridoId)
        {
            var servicioEfectivoIdParameter = servicioEfectivoId.HasValue ?
                new ObjectParameter("ServicioEfectivoId", servicioEfectivoId) :
                new ObjectParameter("ServicioEfectivoId", typeof(int));
    
            var vehiculoIdParameter = vehiculoId.HasValue ?
                new ObjectParameter("VehiculoId", vehiculoId) :
                new ObjectParameter("VehiculoId", typeof(int));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(int));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(int));
    
            var recorridoIdParameter = recorridoId.HasValue ?
                new ObjectParameter("RecorridoId", recorridoId) :
                new ObjectParameter("RecorridoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PlantillaHorizontalGet_Result>("PlantillaHorizontalGet", servicioEfectivoIdParameter, vehiculoIdParameter, desdeParameter, hastaParameter, recorridoIdParameter);
        }
    
        public virtual ObjectResult<PlantillaHorizontalPreviewGet_Result> PlantillaHorizontalPreviewGet(Nullable<int> vehiculoId)
        {
            var vehiculoIdParameter = vehiculoId.HasValue ?
                new ObjectParameter("VehiculoId", vehiculoId) :
                new ObjectParameter("VehiculoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PlantillaHorizontalPreviewGet_Result>("PlantillaHorizontalPreviewGet", vehiculoIdParameter);
        }
    
        public virtual ObjectResult<PlantillaPreviewGet_Result> PlantillaPreviewGet(Nullable<int> vehiculoId)
        {
            var vehiculoIdParameter = vehiculoId.HasValue ?
                new ObjectParameter("VehiculoId", vehiculoId) :
                new ObjectParameter("VehiculoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PlantillaPreviewGet_Result>("PlantillaPreviewGet", vehiculoIdParameter);
        }
    
        public virtual int ProvinciaDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProvinciaDelete", idParameter);
        }
    
        public virtual int ProvinciaGet(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProvinciaGet", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ProvinciaInsert(string nombre, Nullable<int> paisId)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var paisIdParameter = paisId.HasValue ?
                new ObjectParameter("PaisId", paisId) :
                new ObjectParameter("PaisId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ProvinciaInsert", nombreParameter, paisIdParameter);
        }
    
        public virtual int ProvinciaUpdate(Nullable<int> id, string nombre, Nullable<int> paisId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var paisIdParameter = paisId.HasValue ?
                new ObjectParameter("PaisId", paisId) :
                new ObjectParameter("PaisId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProvinciaUpdate", idParameter, nombreParameter, paisIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> RangoActivoGet(Nullable<int> agenciaId, string userId, Nullable<byte> tickets, Nullable<int> empresaId)
        {
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var ticketsParameter = tickets.HasValue ?
                new ObjectParameter("Tickets", tickets) :
                new ObjectParameter("Tickets", typeof(byte));
    
            var empresaIdParameter = empresaId.HasValue ?
                new ObjectParameter("EmpresaId", empresaId) :
                new ObjectParameter("EmpresaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("RangoActivoGet", agenciaIdParameter, userIdParameter, ticketsParameter, empresaIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> RangoActivoGetEnco(Nullable<int> agenciaId, string userId, Nullable<byte> tickets)
        {
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var ticketsParameter = tickets.HasValue ?
                new ObjectParameter("Tickets", tickets) :
                new ObjectParameter("Tickets", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("RangoActivoGetEnco", agenciaIdParameter, userIdParameter, ticketsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> RangoActivoGetFacturas(Nullable<int> agenciaId, string userId, Nullable<byte> tickets)
        {
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var ticketsParameter = tickets.HasValue ?
                new ObjectParameter("Tickets", tickets) :
                new ObjectParameter("Tickets", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("RangoActivoGetFacturas", agenciaIdParameter, userIdParameter, ticketsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> RangoActivoGetRemitos(Nullable<int> agenciaId, string userId, Nullable<byte> tickets)
        {
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var ticketsParameter = tickets.HasValue ?
                new ObjectParameter("Tickets", tickets) :
                new ObjectParameter("Tickets", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("RangoActivoGetRemitos", agenciaIdParameter, userIdParameter, ticketsParameter);
        }
    
        public virtual int RangoActivoUpdate(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RangoActivoUpdate", userIdParameter);
        }
    
        public virtual int RangoActivoUpdateFacturas(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RangoActivoUpdateFacturas", userIdParameter);
        }
    
        public virtual int RangoActivoUpdateRemitos(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RangoActivoUpdateRemitos", userIdParameter);
        }
    
        public virtual int RangoDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RangoDelete", idParameter);
        }
    
        public virtual int RangoDeleteFacturas(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RangoDeleteFacturas", idParameter);
        }
    
        public virtual int RangoDeleteRemitos(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RangoDeleteRemitos", idParameter);
        }
    
        public virtual int RangoEncoActivoUpdate(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RangoEncoActivoUpdate", userIdParameter);
        }
    
        public virtual int RangoEncoDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RangoEncoDelete", idParameter);
        }
    
        public virtual int RangoEncoGet(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RangoEncoGet", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual int RangoEncoGet2(string filterType, string filter, Nullable<int> id, string fields, string userId)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RangoEncoGet2", filterTypeParameter, filterParameter, idParameter, fieldsParameter, userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> RangoEncoInsert(Nullable<int> agenciaId, Nullable<int> inicial, Nullable<int> final, string activo, Nullable<int> proximo, Nullable<int> empresaId)
        {
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var inicialParameter = inicial.HasValue ?
                new ObjectParameter("Inicial", inicial) :
                new ObjectParameter("Inicial", typeof(int));
    
            var finalParameter = final.HasValue ?
                new ObjectParameter("Final", final) :
                new ObjectParameter("Final", typeof(int));
    
            var activoParameter = activo != null ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(string));
    
            var proximoParameter = proximo.HasValue ?
                new ObjectParameter("Proximo", proximo) :
                new ObjectParameter("Proximo", typeof(int));
    
            var empresaIdParameter = empresaId.HasValue ?
                new ObjectParameter("EmpresaId", empresaId) :
                new ObjectParameter("EmpresaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("RangoEncoInsert", agenciaIdParameter, inicialParameter, finalParameter, activoParameter, proximoParameter, empresaIdParameter);
        }
    
        public virtual int RangoEncoUpdate(Nullable<int> id, Nullable<int> agenciaId, Nullable<int> inicial, Nullable<int> final, Nullable<int> proximo, Nullable<int> empresaId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var inicialParameter = inicial.HasValue ?
                new ObjectParameter("Inicial", inicial) :
                new ObjectParameter("Inicial", typeof(int));
    
            var finalParameter = final.HasValue ?
                new ObjectParameter("Final", final) :
                new ObjectParameter("Final", typeof(int));
    
            var proximoParameter = proximo.HasValue ?
                new ObjectParameter("Proximo", proximo) :
                new ObjectParameter("Proximo", typeof(int));
    
            var empresaIdParameter = empresaId.HasValue ?
                new ObjectParameter("EmpresaId", empresaId) :
                new ObjectParameter("EmpresaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RangoEncoUpdate", idParameter, agenciaIdParameter, inicialParameter, finalParameter, proximoParameter, empresaIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> RangoExcesosActivoGet(Nullable<int> agenciaId, string userId, Nullable<byte> tickets, Nullable<int> empresaId)
        {
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var ticketsParameter = tickets.HasValue ?
                new ObjectParameter("Tickets", tickets) :
                new ObjectParameter("Tickets", typeof(byte));
    
            var empresaIdParameter = empresaId.HasValue ?
                new ObjectParameter("EmpresaId", empresaId) :
                new ObjectParameter("EmpresaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("RangoExcesosActivoGet", agenciaIdParameter, userIdParameter, ticketsParameter, empresaIdParameter);
        }
    
        public virtual int RangoExcesosActivoUpdate(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RangoExcesosActivoUpdate", userIdParameter);
        }
    
        public virtual int RangoExcesosDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RangoExcesosDelete", idParameter);
        }
    
        public virtual int RangoExcesosGet(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RangoExcesosGet", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual int RangoExcesosget2(string filterType, string filter, Nullable<int> id, string fields, string userId)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RangoExcesosget2", filterTypeParameter, filterParameter, idParameter, fieldsParameter, userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> RangoExcesosInsert(Nullable<int> agenciaId, Nullable<int> inicial, Nullable<int> final, string activo, Nullable<int> proximo, Nullable<int> empresaId)
        {
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var inicialParameter = inicial.HasValue ?
                new ObjectParameter("Inicial", inicial) :
                new ObjectParameter("Inicial", typeof(int));
    
            var finalParameter = final.HasValue ?
                new ObjectParameter("Final", final) :
                new ObjectParameter("Final", typeof(int));
    
            var activoParameter = activo != null ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(string));
    
            var proximoParameter = proximo.HasValue ?
                new ObjectParameter("Proximo", proximo) :
                new ObjectParameter("Proximo", typeof(int));
    
            var empresaIdParameter = empresaId.HasValue ?
                new ObjectParameter("EmpresaId", empresaId) :
                new ObjectParameter("EmpresaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("RangoExcesosInsert", agenciaIdParameter, inicialParameter, finalParameter, activoParameter, proximoParameter, empresaIdParameter);
        }
    
        public virtual ObjectResult<RangoExcesosNumerosGet_Result> RangoExcesosNumerosGet(Nullable<int> agenciaId, string userId, Nullable<int> empresaId)
        {
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var empresaIdParameter = empresaId.HasValue ?
                new ObjectParameter("EmpresaId", empresaId) :
                new ObjectParameter("EmpresaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RangoExcesosNumerosGet_Result>("RangoExcesosNumerosGet", agenciaIdParameter, userIdParameter, empresaIdParameter);
        }
    
        public virtual int RangoExcesosUpdate(Nullable<int> id, Nullable<int> agenciaId, Nullable<int> inicial, Nullable<int> final, Nullable<int> proximo, Nullable<int> empresaId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var inicialParameter = inicial.HasValue ?
                new ObjectParameter("Inicial", inicial) :
                new ObjectParameter("Inicial", typeof(int));
    
            var finalParameter = final.HasValue ?
                new ObjectParameter("Final", final) :
                new ObjectParameter("Final", typeof(int));
    
            var proximoParameter = proximo.HasValue ?
                new ObjectParameter("Proximo", proximo) :
                new ObjectParameter("Proximo", typeof(int));
    
            var empresaIdParameter = empresaId.HasValue ?
                new ObjectParameter("EmpresaId", empresaId) :
                new ObjectParameter("EmpresaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RangoExcesosUpdate", idParameter, agenciaIdParameter, inicialParameter, finalParameter, proximoParameter, empresaIdParameter);
        }
    
        public virtual int RangoGet(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RangoGet", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual int Rangoget2(string filterType, string filter, Nullable<int> id, string fields, string userId)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rangoget2", filterTypeParameter, filterParameter, idParameter, fieldsParameter, userIdParameter);
        }
    
        public virtual int RangoGet2Facturas(string filterType, string filter, Nullable<int> id, string fields, string userId)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RangoGet2Facturas", filterTypeParameter, filterParameter, idParameter, fieldsParameter, userIdParameter);
        }
    
        public virtual int RangoGet2Facturas1(string filterType, string filter, Nullable<int> id, string fields, string userId)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RangoGet2Facturas1", filterTypeParameter, filterParameter, idParameter, fieldsParameter, userIdParameter);
        }
    
        public virtual int RangoGet2Remitos(string filterType, string filter, Nullable<int> id, string fields, string userId)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RangoGet2Remitos", filterTypeParameter, filterParameter, idParameter, fieldsParameter, userIdParameter);
        }
    
        public virtual int RangoGetExcesos(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RangoGetExcesos", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual int RangoGetExcesos2(string filterType, string filter, Nullable<int> id, string fields, string userId)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RangoGetExcesos2", filterTypeParameter, filterParameter, idParameter, fieldsParameter, userIdParameter);
        }
    
        public virtual int RangoGetFacturas(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RangoGetFacturas", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual ObjectResult<RangoGetGen_Result> RangoGetGen()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RangoGetGen_Result>("RangoGetGen");
        }
    
        public virtual int RangoGetRecibos(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RangoGetRecibos", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual int RangoGetRemitos(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RangoGetRemitos", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> RangoInsert(Nullable<int> agenciaId, Nullable<int> inicial, Nullable<int> final, string activo, Nullable<int> proximo, Nullable<int> empresaId)
        {
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var inicialParameter = inicial.HasValue ?
                new ObjectParameter("Inicial", inicial) :
                new ObjectParameter("Inicial", typeof(int));
    
            var finalParameter = final.HasValue ?
                new ObjectParameter("Final", final) :
                new ObjectParameter("Final", typeof(int));
    
            var activoParameter = activo != null ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(string));
    
            var proximoParameter = proximo.HasValue ?
                new ObjectParameter("Proximo", proximo) :
                new ObjectParameter("Proximo", typeof(int));
    
            var empresaIdParameter = empresaId.HasValue ?
                new ObjectParameter("EmpresaId", empresaId) :
                new ObjectParameter("EmpresaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("RangoInsert", agenciaIdParameter, inicialParameter, finalParameter, activoParameter, proximoParameter, empresaIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> RangoInsertFacturas(Nullable<int> agenciaId, Nullable<double> inicial, Nullable<double> final, string activo, Nullable<double> proximo)
        {
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var inicialParameter = inicial.HasValue ?
                new ObjectParameter("Inicial", inicial) :
                new ObjectParameter("Inicial", typeof(double));
    
            var finalParameter = final.HasValue ?
                new ObjectParameter("Final", final) :
                new ObjectParameter("Final", typeof(double));
    
            var activoParameter = activo != null ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(string));
    
            var proximoParameter = proximo.HasValue ?
                new ObjectParameter("Proximo", proximo) :
                new ObjectParameter("Proximo", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("RangoInsertFacturas", agenciaIdParameter, inicialParameter, finalParameter, activoParameter, proximoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> RangoInsertGen(Nullable<int> agenciaId, Nullable<int> inicial, Nullable<int> final, string activo, Nullable<int> proximo, Nullable<int> empresaId, Nullable<int> ultimo)
        {
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var inicialParameter = inicial.HasValue ?
                new ObjectParameter("Inicial", inicial) :
                new ObjectParameter("Inicial", typeof(int));
    
            var finalParameter = final.HasValue ?
                new ObjectParameter("Final", final) :
                new ObjectParameter("Final", typeof(int));
    
            var activoParameter = activo != null ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(string));
    
            var proximoParameter = proximo.HasValue ?
                new ObjectParameter("Proximo", proximo) :
                new ObjectParameter("Proximo", typeof(int));
    
            var empresaIdParameter = empresaId.HasValue ?
                new ObjectParameter("EmpresaId", empresaId) :
                new ObjectParameter("EmpresaId", typeof(int));
    
            var ultimoParameter = ultimo.HasValue ?
                new ObjectParameter("Ultimo", ultimo) :
                new ObjectParameter("Ultimo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("RangoInsertGen", agenciaIdParameter, inicialParameter, finalParameter, activoParameter, proximoParameter, empresaIdParameter, ultimoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> RangoInsertRemitos(Nullable<int> agenciaId, Nullable<double> inicial, Nullable<double> final, string activo, Nullable<double> proximo)
        {
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var inicialParameter = inicial.HasValue ?
                new ObjectParameter("Inicial", inicial) :
                new ObjectParameter("Inicial", typeof(double));
    
            var finalParameter = final.HasValue ?
                new ObjectParameter("Final", final) :
                new ObjectParameter("Final", typeof(double));
    
            var activoParameter = activo != null ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(string));
    
            var proximoParameter = proximo.HasValue ?
                new ObjectParameter("Proximo", proximo) :
                new ObjectParameter("Proximo", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("RangoInsertRemitos", agenciaIdParameter, inicialParameter, finalParameter, activoParameter, proximoParameter);
        }
    
        public virtual ObjectResult<RangoNumerosGet_Result> RangoNumerosGet(Nullable<int> agenciaId, string userId, Nullable<int> empresaId)
        {
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var empresaIdParameter = empresaId.HasValue ?
                new ObjectParameter("EmpresaId", empresaId) :
                new ObjectParameter("EmpresaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RangoNumerosGet_Result>("RangoNumerosGet", agenciaIdParameter, userIdParameter, empresaIdParameter);
        }
    
        public virtual ObjectResult<RangoNumerosGetEnco_Result> RangoNumerosGetEnco(Nullable<int> agenciaId, string userId)
        {
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RangoNumerosGetEnco_Result>("RangoNumerosGetEnco", agenciaIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<RangoNumerosGetExcesos_Result> RangoNumerosGetExcesos(Nullable<int> agenciaId, string userId)
        {
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RangoNumerosGetExcesos_Result>("RangoNumerosGetExcesos", agenciaIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<RangoNumerosGetFacturas_Result> RangoNumerosGetFacturas(Nullable<int> agenciaId, string userId)
        {
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RangoNumerosGetFacturas_Result>("RangoNumerosGetFacturas", agenciaIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<RangoNumerosGetRemitos_Result> RangoNumerosGetRemitos(Nullable<int> agenciaId, string userId)
        {
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RangoNumerosGetRemitos_Result>("RangoNumerosGetRemitos", agenciaIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> RangoRecibosActivoGet(Nullable<int> agenciaId, string userId, Nullable<byte> tickets, Nullable<int> empresaId)
        {
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var ticketsParameter = tickets.HasValue ?
                new ObjectParameter("Tickets", tickets) :
                new ObjectParameter("Tickets", typeof(byte));
    
            var empresaIdParameter = empresaId.HasValue ?
                new ObjectParameter("EmpresaId", empresaId) :
                new ObjectParameter("EmpresaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("RangoRecibosActivoGet", agenciaIdParameter, userIdParameter, ticketsParameter, empresaIdParameter);
        }
    
        public virtual int RangoRecibosActivoUpdate(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RangoRecibosActivoUpdate", userIdParameter);
        }
    
        public virtual int RangoRecibosDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RangoRecibosDelete", idParameter);
        }
    
        public virtual int RangoRecibosGet(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RangoRecibosGet", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual int RangoRecibosget2(string filterType, string filter, Nullable<int> id, string fields, string userId)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RangoRecibosget2", filterTypeParameter, filterParameter, idParameter, fieldsParameter, userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> RangoRecibosInsert(Nullable<int> agenciaId, Nullable<int> inicial, Nullable<int> final, string activo, Nullable<int> proximo, Nullable<int> empresaId)
        {
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var inicialParameter = inicial.HasValue ?
                new ObjectParameter("Inicial", inicial) :
                new ObjectParameter("Inicial", typeof(int));
    
            var finalParameter = final.HasValue ?
                new ObjectParameter("Final", final) :
                new ObjectParameter("Final", typeof(int));
    
            var activoParameter = activo != null ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(string));
    
            var proximoParameter = proximo.HasValue ?
                new ObjectParameter("Proximo", proximo) :
                new ObjectParameter("Proximo", typeof(int));
    
            var empresaIdParameter = empresaId.HasValue ?
                new ObjectParameter("EmpresaId", empresaId) :
                new ObjectParameter("EmpresaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("RangoRecibosInsert", agenciaIdParameter, inicialParameter, finalParameter, activoParameter, proximoParameter, empresaIdParameter);
        }
    
        public virtual ObjectResult<RangoRecibosNumerosGet_Result> RangoRecibosNumerosGet(Nullable<int> agenciaId, string userId, Nullable<int> empresaId)
        {
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var empresaIdParameter = empresaId.HasValue ?
                new ObjectParameter("EmpresaId", empresaId) :
                new ObjectParameter("EmpresaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RangoRecibosNumerosGet_Result>("RangoRecibosNumerosGet", agenciaIdParameter, userIdParameter, empresaIdParameter);
        }
    
        public virtual int RangoRecibosUpdate(Nullable<int> id, Nullable<int> agenciaId, Nullable<int> inicial, Nullable<int> final, Nullable<int> proximo, Nullable<int> empresaId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var inicialParameter = inicial.HasValue ?
                new ObjectParameter("Inicial", inicial) :
                new ObjectParameter("Inicial", typeof(int));
    
            var finalParameter = final.HasValue ?
                new ObjectParameter("Final", final) :
                new ObjectParameter("Final", typeof(int));
    
            var proximoParameter = proximo.HasValue ?
                new ObjectParameter("Proximo", proximo) :
                new ObjectParameter("Proximo", typeof(int));
    
            var empresaIdParameter = empresaId.HasValue ?
                new ObjectParameter("EmpresaId", empresaId) :
                new ObjectParameter("EmpresaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RangoRecibosUpdate", idParameter, agenciaIdParameter, inicialParameter, finalParameter, proximoParameter, empresaIdParameter);
        }
    
        public virtual int RangoSumaEnco(Nullable<int> agencia)
        {
            var agenciaParameter = agencia.HasValue ?
                new ObjectParameter("Agencia", agencia) :
                new ObjectParameter("Agencia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RangoSumaEnco", agenciaParameter);
        }
    
        public virtual int RangoSumaFacturas(Nullable<int> agencia)
        {
            var agenciaParameter = agencia.HasValue ?
                new ObjectParameter("Agencia", agencia) :
                new ObjectParameter("Agencia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RangoSumaFacturas", agenciaParameter);
        }
    
        public virtual int RangoUpdate(Nullable<int> id, Nullable<int> agenciaId, Nullable<int> inicial, Nullable<int> final, Nullable<int> proximo, Nullable<int> empresaId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var inicialParameter = inicial.HasValue ?
                new ObjectParameter("Inicial", inicial) :
                new ObjectParameter("Inicial", typeof(int));
    
            var finalParameter = final.HasValue ?
                new ObjectParameter("Final", final) :
                new ObjectParameter("Final", typeof(int));
    
            var proximoParameter = proximo.HasValue ?
                new ObjectParameter("Proximo", proximo) :
                new ObjectParameter("Proximo", typeof(int));
    
            var empresaIdParameter = empresaId.HasValue ?
                new ObjectParameter("EmpresaId", empresaId) :
                new ObjectParameter("EmpresaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RangoUpdate", idParameter, agenciaIdParameter, inicialParameter, finalParameter, proximoParameter, empresaIdParameter);
        }
    
        public virtual int RangoUpdateFacturas(Nullable<int> id, Nullable<int> agenciaId, Nullable<double> inicial, Nullable<double> final, Nullable<double> proximo)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var inicialParameter = inicial.HasValue ?
                new ObjectParameter("Inicial", inicial) :
                new ObjectParameter("Inicial", typeof(double));
    
            var finalParameter = final.HasValue ?
                new ObjectParameter("Final", final) :
                new ObjectParameter("Final", typeof(double));
    
            var proximoParameter = proximo.HasValue ?
                new ObjectParameter("Proximo", proximo) :
                new ObjectParameter("Proximo", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RangoUpdateFacturas", idParameter, agenciaIdParameter, inicialParameter, finalParameter, proximoParameter);
        }
    
        public virtual int RangoUpdateRemitos(Nullable<int> id, Nullable<int> agenciaId, Nullable<double> inicial, Nullable<double> final, Nullable<double> proximo)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var inicialParameter = inicial.HasValue ?
                new ObjectParameter("Inicial", inicial) :
                new ObjectParameter("Inicial", typeof(double));
    
            var finalParameter = final.HasValue ?
                new ObjectParameter("Final", final) :
                new ObjectParameter("Final", typeof(double));
    
            var proximoParameter = proximo.HasValue ?
                new ObjectParameter("Proximo", proximo) :
                new ObjectParameter("Proximo", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RangoUpdateRemitos", idParameter, agenciaIdParameter, inicialParameter, finalParameter, proximoParameter);
        }
    
        public virtual int RangoUsadoGet(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RangoUsadoGet", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual int RecorridoDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RecorridoDelete", idParameter);
        }
    
        public virtual ObjectResult<RecorridoEmpresaGet_Result> RecorridoEmpresaGet(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RecorridoEmpresaGet_Result>("RecorridoEmpresaGet", idParameter);
        }
    
        public virtual int RecorridoGet(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RecorridoGet", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> RecorridoInsert(string nombre, Nullable<int> empresaId, string origenCNRT, string pciaOCNRT, string destinoCNRT, string pciaDCNRT, string horaP, string horaL, Nullable<int> dia)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var empresaIdParameter = empresaId.HasValue ?
                new ObjectParameter("EmpresaId", empresaId) :
                new ObjectParameter("EmpresaId", typeof(int));
    
            var origenCNRTParameter = origenCNRT != null ?
                new ObjectParameter("OrigenCNRT", origenCNRT) :
                new ObjectParameter("OrigenCNRT", typeof(string));
    
            var pciaOCNRTParameter = pciaOCNRT != null ?
                new ObjectParameter("PciaOCNRT", pciaOCNRT) :
                new ObjectParameter("PciaOCNRT", typeof(string));
    
            var destinoCNRTParameter = destinoCNRT != null ?
                new ObjectParameter("DestinoCNRT", destinoCNRT) :
                new ObjectParameter("DestinoCNRT", typeof(string));
    
            var pciaDCNRTParameter = pciaDCNRT != null ?
                new ObjectParameter("PciaDCNRT", pciaDCNRT) :
                new ObjectParameter("PciaDCNRT", typeof(string));
    
            var horaPParameter = horaP != null ?
                new ObjectParameter("HoraP", horaP) :
                new ObjectParameter("HoraP", typeof(string));
    
            var horaLParameter = horaL != null ?
                new ObjectParameter("HoraL", horaL) :
                new ObjectParameter("HoraL", typeof(string));
    
            var diaParameter = dia.HasValue ?
                new ObjectParameter("Dia", dia) :
                new ObjectParameter("Dia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("RecorridoInsert", nombreParameter, empresaIdParameter, origenCNRTParameter, pciaOCNRTParameter, destinoCNRTParameter, pciaDCNRTParameter, horaPParameter, horaLParameter, diaParameter);
        }
    
        public virtual ObjectResult<RecorridoParadasGet_Result> RecorridoParadasGet(Nullable<int> recorridoId)
        {
            var recorridoIdParameter = recorridoId.HasValue ?
                new ObjectParameter("RecorridoId", recorridoId) :
                new ObjectParameter("RecorridoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RecorridoParadasGet_Result>("RecorridoParadasGet", recorridoIdParameter);
        }
    
        public virtual int RecorridoUpdate(Nullable<int> id, string nombre, Nullable<int> empresaId, string origenCNRT, string pciaOCNRT, string destinoCNRT, string pciaDCNRT, string horaP, string horaL, Nullable<int> dia)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var empresaIdParameter = empresaId.HasValue ?
                new ObjectParameter("EmpresaId", empresaId) :
                new ObjectParameter("EmpresaId", typeof(int));
    
            var origenCNRTParameter = origenCNRT != null ?
                new ObjectParameter("OrigenCNRT", origenCNRT) :
                new ObjectParameter("OrigenCNRT", typeof(string));
    
            var pciaOCNRTParameter = pciaOCNRT != null ?
                new ObjectParameter("PciaOCNRT", pciaOCNRT) :
                new ObjectParameter("PciaOCNRT", typeof(string));
    
            var destinoCNRTParameter = destinoCNRT != null ?
                new ObjectParameter("DestinoCNRT", destinoCNRT) :
                new ObjectParameter("DestinoCNRT", typeof(string));
    
            var pciaDCNRTParameter = pciaDCNRT != null ?
                new ObjectParameter("PciaDCNRT", pciaDCNRT) :
                new ObjectParameter("PciaDCNRT", typeof(string));
    
            var horaPParameter = horaP != null ?
                new ObjectParameter("HoraP", horaP) :
                new ObjectParameter("HoraP", typeof(string));
    
            var horaLParameter = horaL != null ?
                new ObjectParameter("HoraL", horaL) :
                new ObjectParameter("HoraL", typeof(string));
    
            var diaParameter = dia.HasValue ?
                new ObjectParameter("Dia", dia) :
                new ObjectParameter("Dia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RecorridoUpdate", idParameter, nombreParameter, empresaIdParameter, origenCNRTParameter, pciaOCNRTParameter, destinoCNRTParameter, pciaDCNRTParameter, horaPParameter, horaLParameter, diaParameter);
        }
    
        public virtual int ReimprimirTicket(Nullable<int> ticketId, string userId, Nullable<int> agenciaId)
        {
            var ticketIdParameter = ticketId.HasValue ?
                new ObjectParameter("TicketId", ticketId) :
                new ObjectParameter("TicketId", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReimprimirTicket", ticketIdParameter, userIdParameter, agenciaIdParameter);
        }
    
        public virtual int Rel_Empleado_UsuarioDelete(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rel_Empleado_UsuarioDelete", userIdParameter);
        }
    
        public virtual ObjectResult<Rel_Empleado_UsuarioGet_Result> Rel_Empleado_UsuarioGet(string userId, Nullable<int> empleadoId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var empleadoIdParameter = empleadoId.HasValue ?
                new ObjectParameter("EmpleadoId", empleadoId) :
                new ObjectParameter("EmpleadoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rel_Empleado_UsuarioGet_Result>("Rel_Empleado_UsuarioGet", userIdParameter, empleadoIdParameter);
        }
    
        public virtual int Rel_Empleado_UsuarioInsert(string userId, Nullable<int> empleadoId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var empleadoIdParameter = empleadoId.HasValue ?
                new ObjectParameter("EmpleadoId", empleadoId) :
                new ObjectParameter("EmpleadoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rel_Empleado_UsuarioInsert", userIdParameter, empleadoIdParameter);
        }
    
        public virtual int Rel_Group_PermissionDelete(Nullable<int> groupId, Nullable<int> applicationId, string permissionTypeId)
        {
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(int));
    
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var permissionTypeIdParameter = permissionTypeId != null ?
                new ObjectParameter("PermissionTypeId", permissionTypeId) :
                new ObjectParameter("PermissionTypeId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rel_Group_PermissionDelete", groupIdParameter, applicationIdParameter, permissionTypeIdParameter);
        }
    
        public virtual ObjectResult<Rel_Group_PermissionGet_Result> Rel_Group_PermissionGet(Nullable<int> groupId, Nullable<int> applicationId, string haveGroup)
        {
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(int));
    
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var haveGroupParameter = haveGroup != null ?
                new ObjectParameter("HaveGroup", haveGroup) :
                new ObjectParameter("HaveGroup", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rel_Group_PermissionGet_Result>("Rel_Group_PermissionGet", groupIdParameter, applicationIdParameter, haveGroupParameter);
        }
    
        public virtual int Rel_Group_PermissionInsert(Nullable<int> groupId, Nullable<int> applicationId, string permissionTypeId)
        {
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(int));
    
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var permissionTypeIdParameter = permissionTypeId != null ?
                new ObjectParameter("PermissionTypeId", permissionTypeId) :
                new ObjectParameter("PermissionTypeId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rel_Group_PermissionInsert", groupIdParameter, applicationIdParameter, permissionTypeIdParameter);
        }
    
        public virtual int Rel_Linea_TipoServicioDelete(Nullable<int> lineaId)
        {
            var lineaIdParameter = lineaId.HasValue ?
                new ObjectParameter("LineaId", lineaId) :
                new ObjectParameter("LineaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rel_Linea_TipoServicioDelete", lineaIdParameter);
        }
    
        public virtual ObjectResult<Rel_Linea_TipoServicioGet_Result> Rel_Linea_TipoServicioGet(Nullable<int> lineaId)
        {
            var lineaIdParameter = lineaId.HasValue ?
                new ObjectParameter("LineaId", lineaId) :
                new ObjectParameter("LineaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rel_Linea_TipoServicioGet_Result>("Rel_Linea_TipoServicioGet", lineaIdParameter);
        }
    
        public virtual int Rel_Linea_TipoServicioInsert(Nullable<int> lineaId, Nullable<int> tipoServicioId)
        {
            var lineaIdParameter = lineaId.HasValue ?
                new ObjectParameter("LineaId", lineaId) :
                new ObjectParameter("LineaId", typeof(int));
    
            var tipoServicioIdParameter = tipoServicioId.HasValue ?
                new ObjectParameter("TipoServicioId", tipoServicioId) :
                new ObjectParameter("TipoServicioId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rel_Linea_TipoServicioInsert", lineaIdParameter, tipoServicioIdParameter);
        }
    
        public virtual int Rel_Reserva_AsientoInsert(Nullable<int> reservaId, Nullable<int> asientoId, Nullable<int> servicioEfectivoId, Nullable<int> recorridoId, Nullable<int> paradaOrigenId, Nullable<int> paradaDestinoId, Nullable<int> clienteId)
        {
            var reservaIdParameter = reservaId.HasValue ?
                new ObjectParameter("ReservaId", reservaId) :
                new ObjectParameter("ReservaId", typeof(int));
    
            var asientoIdParameter = asientoId.HasValue ?
                new ObjectParameter("AsientoId", asientoId) :
                new ObjectParameter("AsientoId", typeof(int));
    
            var servicioEfectivoIdParameter = servicioEfectivoId.HasValue ?
                new ObjectParameter("ServicioEfectivoId", servicioEfectivoId) :
                new ObjectParameter("ServicioEfectivoId", typeof(int));
    
            var recorridoIdParameter = recorridoId.HasValue ?
                new ObjectParameter("RecorridoId", recorridoId) :
                new ObjectParameter("RecorridoId", typeof(int));
    
            var paradaOrigenIdParameter = paradaOrigenId.HasValue ?
                new ObjectParameter("ParadaOrigenId", paradaOrigenId) :
                new ObjectParameter("ParadaOrigenId", typeof(int));
    
            var paradaDestinoIdParameter = paradaDestinoId.HasValue ?
                new ObjectParameter("ParadaDestinoId", paradaDestinoId) :
                new ObjectParameter("ParadaDestinoId", typeof(int));
    
            var clienteIdParameter = clienteId.HasValue ?
                new ObjectParameter("ClienteId", clienteId) :
                new ObjectParameter("ClienteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rel_Reserva_AsientoInsert", reservaIdParameter, asientoIdParameter, servicioEfectivoIdParameter, recorridoIdParameter, paradaOrigenIdParameter, paradaDestinoIdParameter, clienteIdParameter);
        }
    
        public virtual int Rel_Tapa_AsientoInsert(Nullable<int> reservaId, Nullable<int> asientoId, Nullable<int> servicioEfectivoId, Nullable<int> recorridoId, Nullable<int> paradaOrigenId, Nullable<int> paradaDestinoId, Nullable<int> clienteId)
        {
            var reservaIdParameter = reservaId.HasValue ?
                new ObjectParameter("ReservaId", reservaId) :
                new ObjectParameter("ReservaId", typeof(int));
    
            var asientoIdParameter = asientoId.HasValue ?
                new ObjectParameter("AsientoId", asientoId) :
                new ObjectParameter("AsientoId", typeof(int));
    
            var servicioEfectivoIdParameter = servicioEfectivoId.HasValue ?
                new ObjectParameter("ServicioEfectivoId", servicioEfectivoId) :
                new ObjectParameter("ServicioEfectivoId", typeof(int));
    
            var recorridoIdParameter = recorridoId.HasValue ?
                new ObjectParameter("RecorridoId", recorridoId) :
                new ObjectParameter("RecorridoId", typeof(int));
    
            var paradaOrigenIdParameter = paradaOrigenId.HasValue ?
                new ObjectParameter("ParadaOrigenId", paradaOrigenId) :
                new ObjectParameter("ParadaOrigenId", typeof(int));
    
            var paradaDestinoIdParameter = paradaDestinoId.HasValue ?
                new ObjectParameter("ParadaDestinoId", paradaDestinoId) :
                new ObjectParameter("ParadaDestinoId", typeof(int));
    
            var clienteIdParameter = clienteId.HasValue ?
                new ObjectParameter("ClienteId", clienteId) :
                new ObjectParameter("ClienteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rel_Tapa_AsientoInsert", reservaIdParameter, asientoIdParameter, servicioEfectivoIdParameter, recorridoIdParameter, paradaOrigenIdParameter, paradaDestinoIdParameter, clienteIdParameter);
        }
    
        public virtual int Rel_User_GroupDelete(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rel_User_GroupDelete", userIdParameter);
        }
    
        public virtual ObjectResult<Rel_User_GroupGet_Result> Rel_User_GroupGet(string userId, Nullable<int> groupId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rel_User_GroupGet_Result>("Rel_User_GroupGet", userIdParameter, groupIdParameter);
        }
    
        public virtual int Rel_User_GroupInsert(string userId, Nullable<int> groupId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rel_User_GroupInsert", userIdParameter, groupIdParameter);
        }
    
        public virtual ObjectResult<RemitidoCerradoGet_Result> RemitidoCerradoGet(Nullable<int> numero, string userId)
        {
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RemitidoCerradoGet_Result>("RemitidoCerradoGet", numeroParameter, userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> RemitirTicket(Nullable<int> ticketId, string userId, Nullable<int> agenciaId, Nullable<int> ventaId, Nullable<int> empresaId)
        {
            var ticketIdParameter = ticketId.HasValue ?
                new ObjectParameter("TicketId", ticketId) :
                new ObjectParameter("TicketId", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var ventaIdParameter = ventaId.HasValue ?
                new ObjectParameter("VentaId", ventaId) :
                new ObjectParameter("VentaId", typeof(int));
    
            var empresaIdParameter = empresaId.HasValue ?
                new ObjectParameter("EmpresaId", empresaId) :
                new ObjectParameter("EmpresaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("RemitirTicket", ticketIdParameter, userIdParameter, agenciaIdParameter, ventaIdParameter, empresaIdParameter);
        }
    
        public virtual int ReservaDelete(Nullable<int> reservaId, Nullable<int> asientoId, Nullable<int> servicioEfectivoId)
        {
            var reservaIdParameter = reservaId.HasValue ?
                new ObjectParameter("ReservaId", reservaId) :
                new ObjectParameter("ReservaId", typeof(int));
    
            var asientoIdParameter = asientoId.HasValue ?
                new ObjectParameter("AsientoId", asientoId) :
                new ObjectParameter("AsientoId", typeof(int));
    
            var servicioEfectivoIdParameter = servicioEfectivoId.HasValue ?
                new ObjectParameter("ServicioEfectivoId", servicioEfectivoId) :
                new ObjectParameter("ServicioEfectivoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReservaDelete", reservaIdParameter, asientoIdParameter, servicioEfectivoIdParameter);
        }
    
        public virtual ObjectResult<ReservaEfectivizarGet_Result> ReservaEfectivizarGet(Nullable<int> reservaId, Nullable<int> servicioEfectivoId, Nullable<int> asientoId)
        {
            var reservaIdParameter = reservaId.HasValue ?
                new ObjectParameter("ReservaId", reservaId) :
                new ObjectParameter("ReservaId", typeof(int));
    
            var servicioEfectivoIdParameter = servicioEfectivoId.HasValue ?
                new ObjectParameter("ServicioEfectivoId", servicioEfectivoId) :
                new ObjectParameter("ServicioEfectivoId", typeof(int));
    
            var asientoIdParameter = asientoId.HasValue ?
                new ObjectParameter("AsientoId", asientoId) :
                new ObjectParameter("AsientoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReservaEfectivizarGet_Result>("ReservaEfectivizarGet", reservaIdParameter, servicioEfectivoIdParameter, asientoIdParameter);
        }
    
        public virtual ObjectResult<ReservaGet_Result> ReservaGet(string apellido, string userId)
        {
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReservaGet_Result>("ReservaGet", apellidoParameter, userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ReservaInsert(Nullable<System.DateTime> fecha, Nullable<int> paradaOrigenId, Nullable<int> paradaDestinoId, Nullable<int> clienteId, string userId, Nullable<int> empleadoId, Nullable<int> agenciaId)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var paradaOrigenIdParameter = paradaOrigenId.HasValue ?
                new ObjectParameter("ParadaOrigenId", paradaOrigenId) :
                new ObjectParameter("ParadaOrigenId", typeof(int));
    
            var paradaDestinoIdParameter = paradaDestinoId.HasValue ?
                new ObjectParameter("ParadaDestinoId", paradaDestinoId) :
                new ObjectParameter("ParadaDestinoId", typeof(int));
    
            var clienteIdParameter = clienteId.HasValue ?
                new ObjectParameter("ClienteId", clienteId) :
                new ObjectParameter("ClienteId", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var empleadoIdParameter = empleadoId.HasValue ?
                new ObjectParameter("EmpleadoId", empleadoId) :
                new ObjectParameter("EmpleadoId", typeof(int));
    
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ReservaInsert", fechaParameter, paradaOrigenIdParameter, paradaDestinoIdParameter, clienteIdParameter, userIdParameter, empleadoIdParameter, agenciaIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ReservaTiempoGet(Nullable<int> agenciaId, string userId)
        {
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ReservaTiempoGet", agenciaIdParameter, userIdParameter);
        }
    
        public virtual int Reset()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Reset");
        }
    
        public virtual ObjectResult<ServicioADesdoblar_Result> ServicioADesdoblar(Nullable<int> servicioEfectivoOrigenId)
        {
            var servicioEfectivoOrigenIdParameter = servicioEfectivoOrigenId.HasValue ?
                new ObjectParameter("ServicioEfectivoOrigenId", servicioEfectivoOrigenId) :
                new ObjectParameter("ServicioEfectivoOrigenId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ServicioADesdoblar_Result>("ServicioADesdoblar", servicioEfectivoOrigenIdParameter);
        }
    
        public virtual int ServicioCumplidoGet(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ServicioCumplidoGet", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual int ServicioDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ServicioDelete", idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ServicioEfectivoCortar(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ServicioEfectivoCortar", idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ServicioEfectivoDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ServicioEfectivoDelete", idParameter);
        }
    
        public virtual int ServicioEfectivoGet(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ServicioEfectivoGet", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual int ServicioEfectivoGetadb(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ServicioEfectivoGetadb", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual int ServicioEfectivoGetcdm(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ServicioEfectivoGetcdm", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual int ServicioEfectivoGetplz(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ServicioEfectivoGetplz", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ServicioEfectivoInsert(Nullable<int> servicioId, Nullable<int> vehiculoId, Nullable<System.DateTime> fecha, string observaciones, Nullable<int> choferId, Nullable<int> choferId2, Nullable<int> recorridoId, string hora, Nullable<int> lineaId, Nullable<int> grilla, Nullable<int> disca, string horaDisca)
        {
            var servicioIdParameter = servicioId.HasValue ?
                new ObjectParameter("ServicioId", servicioId) :
                new ObjectParameter("ServicioId", typeof(int));
    
            var vehiculoIdParameter = vehiculoId.HasValue ?
                new ObjectParameter("VehiculoId", vehiculoId) :
                new ObjectParameter("VehiculoId", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var choferIdParameter = choferId.HasValue ?
                new ObjectParameter("ChoferId", choferId) :
                new ObjectParameter("ChoferId", typeof(int));
    
            var choferId2Parameter = choferId2.HasValue ?
                new ObjectParameter("ChoferId2", choferId2) :
                new ObjectParameter("ChoferId2", typeof(int));
    
            var recorridoIdParameter = recorridoId.HasValue ?
                new ObjectParameter("RecorridoId", recorridoId) :
                new ObjectParameter("RecorridoId", typeof(int));
    
            var horaParameter = hora != null ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(string));
    
            var lineaIdParameter = lineaId.HasValue ?
                new ObjectParameter("LineaId", lineaId) :
                new ObjectParameter("LineaId", typeof(int));
    
            var grillaParameter = grilla.HasValue ?
                new ObjectParameter("Grilla", grilla) :
                new ObjectParameter("Grilla", typeof(int));
    
            var discaParameter = disca.HasValue ?
                new ObjectParameter("Disca", disca) :
                new ObjectParameter("Disca", typeof(int));
    
            var horaDiscaParameter = horaDisca != null ?
                new ObjectParameter("HoraDisca", horaDisca) :
                new ObjectParameter("HoraDisca", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ServicioEfectivoInsert", servicioIdParameter, vehiculoIdParameter, fechaParameter, observacionesParameter, choferIdParameter, choferId2Parameter, recorridoIdParameter, horaParameter, lineaIdParameter, grillaParameter, discaParameter, horaDiscaParameter);
        }
    
        public virtual ObjectResult<ServicioEfectivoParadasGet_Result> ServicioEfectivoParadasGet(Nullable<int> servicioEfectivoId)
        {
            var servicioEfectivoIdParameter = servicioEfectivoId.HasValue ?
                new ObjectParameter("ServicioEfectivoId", servicioEfectivoId) :
                new ObjectParameter("ServicioEfectivoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ServicioEfectivoParadasGet_Result>("ServicioEfectivoParadasGet", servicioEfectivoIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ServicioEfectivoUpdate(Nullable<int> id, Nullable<int> servicioId, Nullable<int> vehiculoId, Nullable<System.DateTime> fecha, string observaciones, Nullable<int> choferId, Nullable<int> choferId2, Nullable<int> choferId3, Nullable<int> choferId4, Nullable<int> recorridoActualId, string hora, string horaD, Nullable<int> lineaId, Nullable<int> excesos, Nullable<int> disca, Nullable<int> descuento, Nullable<int> conGPS, Nullable<int> descuentoJubilado, Nullable<int> descuentoEstudiante, Nullable<int> descuentoEspecial, Nullable<int> lowCost)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var servicioIdParameter = servicioId.HasValue ?
                new ObjectParameter("ServicioId", servicioId) :
                new ObjectParameter("ServicioId", typeof(int));
    
            var vehiculoIdParameter = vehiculoId.HasValue ?
                new ObjectParameter("VehiculoId", vehiculoId) :
                new ObjectParameter("VehiculoId", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var choferIdParameter = choferId.HasValue ?
                new ObjectParameter("ChoferId", choferId) :
                new ObjectParameter("ChoferId", typeof(int));
    
            var choferId2Parameter = choferId2.HasValue ?
                new ObjectParameter("ChoferId2", choferId2) :
                new ObjectParameter("ChoferId2", typeof(int));
    
            var choferId3Parameter = choferId3.HasValue ?
                new ObjectParameter("ChoferId3", choferId3) :
                new ObjectParameter("ChoferId3", typeof(int));
    
            var choferId4Parameter = choferId4.HasValue ?
                new ObjectParameter("ChoferId4", choferId4) :
                new ObjectParameter("ChoferId4", typeof(int));
    
            var recorridoActualIdParameter = recorridoActualId.HasValue ?
                new ObjectParameter("RecorridoActualId", recorridoActualId) :
                new ObjectParameter("RecorridoActualId", typeof(int));
    
            var horaParameter = hora != null ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(string));
    
            var horaDParameter = horaD != null ?
                new ObjectParameter("HoraD", horaD) :
                new ObjectParameter("HoraD", typeof(string));
    
            var lineaIdParameter = lineaId.HasValue ?
                new ObjectParameter("LineaId", lineaId) :
                new ObjectParameter("LineaId", typeof(int));
    
            var excesosParameter = excesos.HasValue ?
                new ObjectParameter("Excesos", excesos) :
                new ObjectParameter("Excesos", typeof(int));
    
            var discaParameter = disca.HasValue ?
                new ObjectParameter("Disca", disca) :
                new ObjectParameter("Disca", typeof(int));
    
            var descuentoParameter = descuento.HasValue ?
                new ObjectParameter("Descuento", descuento) :
                new ObjectParameter("Descuento", typeof(int));
    
            var conGPSParameter = conGPS.HasValue ?
                new ObjectParameter("ConGPS", conGPS) :
                new ObjectParameter("ConGPS", typeof(int));
    
            var descuentoJubiladoParameter = descuentoJubilado.HasValue ?
                new ObjectParameter("DescuentoJubilado", descuentoJubilado) :
                new ObjectParameter("DescuentoJubilado", typeof(int));
    
            var descuentoEstudianteParameter = descuentoEstudiante.HasValue ?
                new ObjectParameter("DescuentoEstudiante", descuentoEstudiante) :
                new ObjectParameter("DescuentoEstudiante", typeof(int));
    
            var descuentoEspecialParameter = descuentoEspecial.HasValue ?
                new ObjectParameter("DescuentoEspecial", descuentoEspecial) :
                new ObjectParameter("DescuentoEspecial", typeof(int));
    
            var lowCostParameter = lowCost.HasValue ?
                new ObjectParameter("LowCost", lowCost) :
                new ObjectParameter("LowCost", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ServicioEfectivoUpdate", idParameter, servicioIdParameter, vehiculoIdParameter, fechaParameter, observacionesParameter, choferIdParameter, choferId2Parameter, choferId3Parameter, choferId4Parameter, recorridoActualIdParameter, horaParameter, horaDParameter, lineaIdParameter, excesosParameter, discaParameter, descuentoParameter, conGPSParameter, descuentoJubiladoParameter, descuentoEstudianteParameter, descuentoEspecialParameter, lowCostParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ServicioEfectivoUpdateObs(Nullable<int> id, string observaciones, Nullable<int> disca, string hora, Nullable<int> conGPS, string horaD)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var discaParameter = disca.HasValue ?
                new ObjectParameter("Disca", disca) :
                new ObjectParameter("Disca", typeof(int));
    
            var horaParameter = hora != null ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(string));
    
            var conGPSParameter = conGPS.HasValue ?
                new ObjectParameter("ConGPS", conGPS) :
                new ObjectParameter("ConGPS", typeof(int));
    
            var horaDParameter = horaD != null ?
                new ObjectParameter("HoraD", horaD) :
                new ObjectParameter("HoraD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ServicioEfectivoUpdateObs", idParameter, observacionesParameter, discaParameter, horaParameter, conGPSParameter, horaDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ServicioEfectivoVentaGet(Nullable<int> vehiculoId, Nullable<System.DateTime> fecha)
        {
            var vehiculoIdParameter = vehiculoId.HasValue ?
                new ObjectParameter("VehiculoId", vehiculoId) :
                new ObjectParameter("VehiculoId", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ServicioEfectivoVentaGet", vehiculoIdParameter, fechaParameter);
        }
    
        public virtual int ServicioGet(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ServicioGet", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ServicioInsert(string nombre, Nullable<int> vehiculoId, string observaciones, Nullable<int> recorridoId, Nullable<byte> dia, string hora, string activo, Nullable<int> lineaId)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var vehiculoIdParameter = vehiculoId.HasValue ?
                new ObjectParameter("VehiculoId", vehiculoId) :
                new ObjectParameter("VehiculoId", typeof(int));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var recorridoIdParameter = recorridoId.HasValue ?
                new ObjectParameter("RecorridoId", recorridoId) :
                new ObjectParameter("RecorridoId", typeof(int));
    
            var diaParameter = dia.HasValue ?
                new ObjectParameter("Dia", dia) :
                new ObjectParameter("Dia", typeof(byte));
    
            var horaParameter = hora != null ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(string));
    
            var activoParameter = activo != null ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(string));
    
            var lineaIdParameter = lineaId.HasValue ?
                new ObjectParameter("LineaId", lineaId) :
                new ObjectParameter("LineaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ServicioInsert", nombreParameter, vehiculoIdParameter, observacionesParameter, recorridoIdParameter, diaParameter, horaParameter, activoParameter, lineaIdParameter);
        }
    
        public virtual int ServicioMod(Nullable<int> servicioId, Nullable<int> disca, Nullable<int> descuento, Nullable<int> jubilado, Nullable<int> estudiante, Nullable<int> especial, Nullable<int> low)
        {
            var servicioIdParameter = servicioId.HasValue ?
                new ObjectParameter("ServicioId", servicioId) :
                new ObjectParameter("ServicioId", typeof(int));
    
            var discaParameter = disca.HasValue ?
                new ObjectParameter("Disca", disca) :
                new ObjectParameter("Disca", typeof(int));
    
            var descuentoParameter = descuento.HasValue ?
                new ObjectParameter("Descuento", descuento) :
                new ObjectParameter("Descuento", typeof(int));
    
            var jubiladoParameter = jubilado.HasValue ?
                new ObjectParameter("Jubilado", jubilado) :
                new ObjectParameter("Jubilado", typeof(int));
    
            var estudianteParameter = estudiante.HasValue ?
                new ObjectParameter("Estudiante", estudiante) :
                new ObjectParameter("Estudiante", typeof(int));
    
            var especialParameter = especial.HasValue ?
                new ObjectParameter("Especial", especial) :
                new ObjectParameter("Especial", typeof(int));
    
            var lowParameter = low.HasValue ?
                new ObjectParameter("Low", low) :
                new ObjectParameter("Low", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ServicioMod", servicioIdParameter, discaParameter, descuentoParameter, jubiladoParameter, estudianteParameter, especialParameter, lowParameter);
        }
    
        public virtual ObjectResult<ServiciosAbiertoGetO_Result> ServiciosAbiertoGetO(Nullable<int> desde, Nullable<int> hasta)
        {
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(int));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ServiciosAbiertoGetO_Result>("ServiciosAbiertoGetO", desdeParameter, hastaParameter);
        }
    
        public virtual ObjectResult<ServiciosAbiertosGet_Result> ServiciosAbiertosGet(string fecha, Nullable<int> desde, Nullable<int> hasta)
        {
            var fechaParameter = fecha != null ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(string));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(int));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ServiciosAbiertosGet_Result>("ServiciosAbiertosGet", fechaParameter, desdeParameter, hastaParameter);
        }
    
        public virtual ObjectResult<ServiciosAbiertosGet3_Result> ServiciosAbiertosGet3(string fecha, Nullable<int> desde, Nullable<int> hasta)
        {
            var fechaParameter = fecha != null ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(string));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(int));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ServiciosAbiertosGet3_Result>("ServiciosAbiertosGet3", fechaParameter, desdeParameter, hastaParameter);
        }
    
        public virtual ObjectResult<ServiciosCambiaEncomiendaGet_Result> ServiciosCambiaEncomiendaGet(string fecha, Nullable<int> servicioOriginal)
        {
            var fechaParameter = fecha != null ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(string));
    
            var servicioOriginalParameter = servicioOriginal.HasValue ?
                new ObjectParameter("ServicioOriginal", servicioOriginal) :
                new ObjectParameter("ServicioOriginal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ServiciosCambiaEncomiendaGet_Result>("ServiciosCambiaEncomiendaGet", fechaParameter, servicioOriginalParameter);
        }
    
        public virtual ObjectResult<ServiciosEnVentaGet_Result> ServiciosEnVentaGet(string fecha, Nullable<int> desde, Nullable<int> hasta)
        {
            var fechaParameter = fecha != null ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(string));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(int));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ServiciosEnVentaGet_Result>("ServiciosEnVentaGet", fechaParameter, desdeParameter, hastaParameter);
        }
    
        public virtual ObjectResult<ServiciosEnVentaGet2_Result> ServiciosEnVentaGet2(string fecha, Nullable<int> desde, Nullable<int> hasta)
        {
            var fechaParameter = fecha != null ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(string));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(int));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ServiciosEnVentaGet2_Result>("ServiciosEnVentaGet2", fechaParameter, desdeParameter, hastaParameter);
        }
    
        public virtual ObjectResult<ServiciosEnVentaGetEncomiendas_Result> ServiciosEnVentaGetEncomiendas(string fecha, Nullable<int> desde, Nullable<int> hasta)
        {
            var fechaParameter = fecha != null ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(string));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(int));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ServiciosEnVentaGetEncomiendas_Result>("ServiciosEnVentaGetEncomiendas", fechaParameter, desdeParameter, hastaParameter);
        }
    
        public virtual ObjectResult<ServiciosEnVentaGetExceso_Result> ServiciosEnVentaGetExceso(string fecha, Nullable<int> desde, Nullable<int> hasta)
        {
            var fechaParameter = fecha != null ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(string));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(int));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ServiciosEnVentaGetExceso_Result>("ServiciosEnVentaGetExceso", fechaParameter, desdeParameter, hastaParameter);
        }
    
        public virtual ObjectResult<ServiciosEnVentaGetO_Result> ServiciosEnVentaGetO(string fecha, Nullable<int> desde, Nullable<int> hasta)
        {
            var fechaParameter = fecha != null ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(string));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(int));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ServiciosEnVentaGetO_Result>("ServiciosEnVentaGetO", fechaParameter, desdeParameter, hastaParameter);
        }
    
        public virtual ObjectResult<ServiciosGetModGrilla_Result> ServiciosGetModGrilla(string desde, string hasta, Nullable<int> empresa)
        {
            var desdeParameter = desde != null ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(string));
    
            var hastaParameter = hasta != null ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(string));
    
            var empresaParameter = empresa.HasValue ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ServiciosGetModGrilla_Result>("ServiciosGetModGrilla", desdeParameter, hastaParameter, empresaParameter);
        }
    
        public virtual ObjectResult<ServiciosSinOcupacion_Result> ServiciosSinOcupacion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ServiciosSinOcupacion_Result>("ServiciosSinOcupacion");
        }
    
        public virtual int ServicioUpdate(Nullable<int> id, string nombre, Nullable<int> vehiculoId, string observaciones, Nullable<int> recorridoId, Nullable<byte> dia, string hora, string activo, Nullable<int> lineaId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var vehiculoIdParameter = vehiculoId.HasValue ?
                new ObjectParameter("VehiculoId", vehiculoId) :
                new ObjectParameter("VehiculoId", typeof(int));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var recorridoIdParameter = recorridoId.HasValue ?
                new ObjectParameter("RecorridoId", recorridoId) :
                new ObjectParameter("RecorridoId", typeof(int));
    
            var diaParameter = dia.HasValue ?
                new ObjectParameter("Dia", dia) :
                new ObjectParameter("Dia", typeof(byte));
    
            var horaParameter = hora != null ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(string));
    
            var activoParameter = activo != null ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(string));
    
            var lineaIdParameter = lineaId.HasValue ?
                new ObjectParameter("LineaId", lineaId) :
                new ObjectParameter("LineaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ServicioUpdate", idParameter, nombreParameter, vehiculoIdParameter, observacionesParameter, recorridoIdParameter, diaParameter, horaParameter, activoParameter, lineaIdParameter);
        }
    
        public virtual int SexoGet(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SexoGet", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int spUtil_ReIndexDatabase_UpdateStats()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUtil_ReIndexDatabase_UpdateStats");
        }
    
        public virtual ObjectResult<TapaChicas_Result> TapaChicas(Nullable<int> servicioId)
        {
            var servicioIdParameter = servicioId.HasValue ?
                new ObjectParameter("ServicioId", servicioId) :
                new ObjectParameter("ServicioId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TapaChicas_Result>("TapaChicas", servicioIdParameter);
        }
    
        public virtual ObjectResult<TapaGet_Result> TapaGet(Nullable<int> numero, string userId)
        {
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TapaGet_Result>("TapaGet", numeroParameter, userIdParameter);
        }
    
        public virtual ObjectResult<TapaGrandes_Result> TapaGrandes(Nullable<int> servicioId)
        {
            var servicioIdParameter = servicioId.HasValue ?
                new ObjectParameter("ServicioId", servicioId) :
                new ObjectParameter("ServicioId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TapaGrandes_Result>("TapaGrandes", servicioIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> TapaInsert(Nullable<System.DateTime> fecha, Nullable<int> paradaOrigenId, Nullable<int> paradaDestinoId, Nullable<int> clienteId, string userId, Nullable<int> agenciaId)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var paradaOrigenIdParameter = paradaOrigenId.HasValue ?
                new ObjectParameter("ParadaOrigenId", paradaOrigenId) :
                new ObjectParameter("ParadaOrigenId", typeof(int));
    
            var paradaDestinoIdParameter = paradaDestinoId.HasValue ?
                new ObjectParameter("ParadaDestinoId", paradaDestinoId) :
                new ObjectParameter("ParadaDestinoId", typeof(int));
    
            var clienteIdParameter = clienteId.HasValue ?
                new ObjectParameter("ClienteId", clienteId) :
                new ObjectParameter("ClienteId", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("TapaInsert", fechaParameter, paradaOrigenIdParameter, paradaDestinoIdParameter, clienteIdParameter, userIdParameter, agenciaIdParameter);
        }
    
        public virtual ObjectResult<TapaMedianas_Result> TapaMedianas(Nullable<int> servicioId)
        {
            var servicioIdParameter = servicioId.HasValue ?
                new ObjectParameter("ServicioId", servicioId) :
                new ObjectParameter("ServicioId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TapaMedianas_Result>("TapaMedianas", servicioIdParameter);
        }
    
        public virtual ObjectResult<Taquilla_Result> Taquilla(Nullable<int> idser)
        {
            var idserParameter = idser.HasValue ?
                new ObjectParameter("Idser", idser) :
                new ObjectParameter("Idser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Taquilla_Result>("Taquilla", idserParameter);
        }
    
        public virtual ObjectResult<Taquilla2_Result> Taquilla2(Nullable<int> idser)
        {
            var idserParameter = idser.HasValue ?
                new ObjectParameter("Idser", idser) :
                new ObjectParameter("Idser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Taquilla2_Result>("Taquilla2", idserParameter);
        }
    
        public virtual ObjectResult<TaquillaBajan_Result> TaquillaBajan(Nullable<int> idSer)
        {
            var idSerParameter = idSer.HasValue ?
                new ObjectParameter("idSer", idSer) :
                new ObjectParameter("idSer", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TaquillaBajan_Result>("TaquillaBajan", idSerParameter);
        }
    
        public virtual ObjectResult<TaquillaBolsas_Result> TaquillaBolsas(Nullable<int> idser)
        {
            var idserParameter = idser.HasValue ?
                new ObjectParameter("Idser", idser) :
                new ObjectParameter("Idser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TaquillaBolsas_Result>("TaquillaBolsas", idserParameter);
        }
    
        public virtual ObjectResult<TaquillaSeguro_Result> TaquillaSeguro(Nullable<int> idser)
        {
            var idserParameter = idser.HasValue ?
                new ObjectParameter("Idser", idser) :
                new ObjectParameter("Idser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TaquillaSeguro_Result>("TaquillaSeguro", idserParameter);
        }
    
        public virtual ObjectResult<TaquillaSuben_Result> TaquillaSuben(Nullable<int> idSer)
        {
            var idSerParameter = idSer.HasValue ?
                new ObjectParameter("idSer", idSer) :
                new ObjectParameter("idSer", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TaquillaSuben_Result>("TaquillaSuben", idSerParameter);
        }
    
        public virtual int TarifaBolsaEditGet(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TarifaBolsaEditGet", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual ObjectResult<TarifaBolsaGet_Result> TarifaBolsaGet()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TarifaBolsaGet_Result>("TarifaBolsaGet");
        }
    
        public virtual int TarifaBolsasDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TarifaBolsasDelete", idParameter);
        }
    
        public virtual int TarifaBolsasGet(string filterType, string filter, Nullable<int> id, string fields, Nullable<byte> foreignKey)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            var foreignKeyParameter = foreignKey.HasValue ?
                new ObjectParameter("ForeignKey", foreignKey) :
                new ObjectParameter("ForeignKey", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TarifaBolsasGet", filterTypeParameter, filterParameter, idParameter, fieldsParameter, foreignKeyParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> TarifaBolsasInsert(string nombre, Nullable<decimal> tarifa)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var tarifaParameter = tarifa.HasValue ?
                new ObjectParameter("Tarifa", tarifa) :
                new ObjectParameter("Tarifa", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("TarifaBolsasInsert", nombreParameter, tarifaParameter);
        }
    
        public virtual int TarifaBolsasUpdate(Nullable<int> id, string nombre, Nullable<decimal> tarifa)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var tarifaParameter = tarifa.HasValue ?
                new ObjectParameter("Tarifa", tarifa) :
                new ObjectParameter("Tarifa", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TarifaBolsasUpdate", idParameter, nombreParameter, tarifaParameter);
        }
    
        public virtual int TarifaDelete(Nullable<int> recorridoId, Nullable<int> lineaId, Nullable<int> paradaOrigenId, Nullable<int> paradaDestinoId, string fechaDesde, string fechaHasta)
        {
            var recorridoIdParameter = recorridoId.HasValue ?
                new ObjectParameter("RecorridoId", recorridoId) :
                new ObjectParameter("RecorridoId", typeof(int));
    
            var lineaIdParameter = lineaId.HasValue ?
                new ObjectParameter("LineaId", lineaId) :
                new ObjectParameter("LineaId", typeof(int));
    
            var paradaOrigenIdParameter = paradaOrigenId.HasValue ?
                new ObjectParameter("ParadaOrigenId", paradaOrigenId) :
                new ObjectParameter("ParadaOrigenId", typeof(int));
    
            var paradaDestinoIdParameter = paradaDestinoId.HasValue ?
                new ObjectParameter("ParadaDestinoId", paradaDestinoId) :
                new ObjectParameter("ParadaDestinoId", typeof(int));
    
            var fechaDesdeParameter = fechaDesde != null ?
                new ObjectParameter("FechaDesde", fechaDesde) :
                new ObjectParameter("FechaDesde", typeof(string));
    
            var fechaHastaParameter = fechaHasta != null ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TarifaDelete", recorridoIdParameter, lineaIdParameter, paradaOrigenIdParameter, paradaDestinoIdParameter, fechaDesdeParameter, fechaHastaParameter);
        }
    
        public virtual int TarifaDeleteGrilla(Nullable<int> recorridoId, Nullable<int> grilla)
        {
            var recorridoIdParameter = recorridoId.HasValue ?
                new ObjectParameter("RecorridoId", recorridoId) :
                new ObjectParameter("RecorridoId", typeof(int));
    
            var grillaParameter = grilla.HasValue ?
                new ObjectParameter("Grilla", grilla) :
                new ObjectParameter("Grilla", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TarifaDeleteGrilla", recorridoIdParameter, grillaParameter);
        }
    
        public virtual int TarifaExcesoDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TarifaExcesoDelete", idParameter);
        }
    
        public virtual int TarifaExcesoGet(string filterType, string filter, Nullable<int> id, string fields, Nullable<byte> foreignKey)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            var foreignKeyParameter = foreignKey.HasValue ?
                new ObjectParameter("ForeignKey", foreignKey) :
                new ObjectParameter("ForeignKey", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TarifaExcesoGet", filterTypeParameter, filterParameter, idParameter, fieldsParameter, foreignKeyParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> TarifaExcesoInsert(string nombre, Nullable<decimal> tarifa)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var tarifaParameter = tarifa.HasValue ?
                new ObjectParameter("Tarifa", tarifa) :
                new ObjectParameter("Tarifa", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("TarifaExcesoInsert", nombreParameter, tarifaParameter);
        }
    
        public virtual int TarifaExcesoUpdate(Nullable<int> id, string nombre, Nullable<decimal> tarifa)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var tarifaParameter = tarifa.HasValue ?
                new ObjectParameter("Tarifa", tarifa) :
                new ObjectParameter("Tarifa", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TarifaExcesoUpdate", idParameter, nombreParameter, tarifaParameter);
        }
    
        public virtual ObjectResult<TarifaGet_Result> TarifaGet(Nullable<int> id, Nullable<int> recorridoId, Nullable<int> lineaId, Nullable<int> paradaOrigenId, Nullable<int> paradaDestinoId, Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta, Nullable<int> servicioId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var recorridoIdParameter = recorridoId.HasValue ?
                new ObjectParameter("RecorridoId", recorridoId) :
                new ObjectParameter("RecorridoId", typeof(int));
    
            var lineaIdParameter = lineaId.HasValue ?
                new ObjectParameter("LineaId", lineaId) :
                new ObjectParameter("LineaId", typeof(int));
    
            var paradaOrigenIdParameter = paradaOrigenId.HasValue ?
                new ObjectParameter("ParadaOrigenId", paradaOrigenId) :
                new ObjectParameter("ParadaOrigenId", typeof(int));
    
            var paradaDestinoIdParameter = paradaDestinoId.HasValue ?
                new ObjectParameter("ParadaDestinoId", paradaDestinoId) :
                new ObjectParameter("ParadaDestinoId", typeof(int));
    
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("FechaDesde", fechaDesde) :
                new ObjectParameter("FechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(System.DateTime));
    
            var servicioIdParameter = servicioId.HasValue ?
                new ObjectParameter("ServicioId", servicioId) :
                new ObjectParameter("ServicioId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TarifaGet_Result>("TarifaGet", idParameter, recorridoIdParameter, lineaIdParameter, paradaOrigenIdParameter, paradaDestinoIdParameter, fechaDesdeParameter, fechaHastaParameter, servicioIdParameter);
        }
    
        public virtual int TarifaInsert(Nullable<int> recorridoId, Nullable<int> lineaId, Nullable<int> paradaOrigenId, Nullable<int> paradaDestinoId, Nullable<decimal> precio, Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta, Nullable<int> grilla, string hora)
        {
            var recorridoIdParameter = recorridoId.HasValue ?
                new ObjectParameter("RecorridoId", recorridoId) :
                new ObjectParameter("RecorridoId", typeof(int));
    
            var lineaIdParameter = lineaId.HasValue ?
                new ObjectParameter("LineaId", lineaId) :
                new ObjectParameter("LineaId", typeof(int));
    
            var paradaOrigenIdParameter = paradaOrigenId.HasValue ?
                new ObjectParameter("ParadaOrigenId", paradaOrigenId) :
                new ObjectParameter("ParadaOrigenId", typeof(int));
    
            var paradaDestinoIdParameter = paradaDestinoId.HasValue ?
                new ObjectParameter("ParadaDestinoId", paradaDestinoId) :
                new ObjectParameter("ParadaDestinoId", typeof(int));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("FechaDesde", fechaDesde) :
                new ObjectParameter("FechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(System.DateTime));
    
            var grillaParameter = grilla.HasValue ?
                new ObjectParameter("Grilla", grilla) :
                new ObjectParameter("Grilla", typeof(int));
    
            var horaParameter = hora != null ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TarifaInsert", recorridoIdParameter, lineaIdParameter, paradaOrigenIdParameter, paradaDestinoIdParameter, precioParameter, fechaDesdeParameter, fechaHastaParameter, grillaParameter, horaParameter);
        }
    
        public virtual ObjectResult<TarifasRangosGet_Result> TarifasRangosGet()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TarifasRangosGet_Result>("TarifasRangosGet");
        }
    
        public virtual ObjectResult<TarifasVigentes_Result> TarifasVigentes(Nullable<int> recorrido)
        {
            var recorridoParameter = recorrido.HasValue ?
                new ObjectParameter("Recorrido", recorrido) :
                new ObjectParameter("Recorrido", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TarifasVigentes_Result>("TarifasVigentes", recorridoParameter);
        }
    
        public virtual ObjectResult<TarifasVigentesDetallada_Result> TarifasVigentesDetallada(Nullable<int> recorrido, Nullable<int> grilla)
        {
            var recorridoParameter = recorrido.HasValue ?
                new ObjectParameter("Recorrido", recorrido) :
                new ObjectParameter("Recorrido", typeof(int));
    
            var grillaParameter = grilla.HasValue ?
                new ObjectParameter("Grilla", grilla) :
                new ObjectParameter("Grilla", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TarifasVigentesDetallada_Result>("TarifasVigentesDetallada", recorridoParameter, grillaParameter);
        }
    
        public virtual int TarifaUpdate(Nullable<int> id, Nullable<decimal> precio)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TarifaUpdate", idParameter, precioParameter);
        }
    
        public virtual ObjectResult<Tarjeta2Get_Result> Tarjeta2Get()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Tarjeta2Get_Result>("Tarjeta2Get");
        }
    
        public virtual int TarjetaDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TarjetaDelete", idParameter);
        }
    
        public virtual int TarjetaGet(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TarjetaGet", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual int TarjetaInsert(string tarjeta, Nullable<int> cuotas, Nullable<double> recargo, Nullable<double> recargoCall)
        {
            var tarjetaParameter = tarjeta != null ?
                new ObjectParameter("Tarjeta", tarjeta) :
                new ObjectParameter("Tarjeta", typeof(string));
    
            var cuotasParameter = cuotas.HasValue ?
                new ObjectParameter("Cuotas", cuotas) :
                new ObjectParameter("Cuotas", typeof(int));
    
            var recargoParameter = recargo.HasValue ?
                new ObjectParameter("Recargo", recargo) :
                new ObjectParameter("Recargo", typeof(double));
    
            var recargoCallParameter = recargoCall.HasValue ?
                new ObjectParameter("RecargoCall", recargoCall) :
                new ObjectParameter("RecargoCall", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TarjetaInsert", tarjetaParameter, cuotasParameter, recargoParameter, recargoCallParameter);
        }
    
        public virtual int TarjetaMovimientosInsert(string numeroTarjeta, string nombreTarjeta, Nullable<int> idTarjetas, Nullable<int> idVenta, string cupon, Nullable<decimal> monto)
        {
            var numeroTarjetaParameter = numeroTarjeta != null ?
                new ObjectParameter("NumeroTarjeta", numeroTarjeta) :
                new ObjectParameter("NumeroTarjeta", typeof(string));
    
            var nombreTarjetaParameter = nombreTarjeta != null ?
                new ObjectParameter("NombreTarjeta", nombreTarjeta) :
                new ObjectParameter("NombreTarjeta", typeof(string));
    
            var idTarjetasParameter = idTarjetas.HasValue ?
                new ObjectParameter("idTarjetas", idTarjetas) :
                new ObjectParameter("idTarjetas", typeof(int));
    
            var idVentaParameter = idVenta.HasValue ?
                new ObjectParameter("idVenta", idVenta) :
                new ObjectParameter("idVenta", typeof(int));
    
            var cuponParameter = cupon != null ?
                new ObjectParameter("Cupon", cupon) :
                new ObjectParameter("Cupon", typeof(string));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("Monto", monto) :
                new ObjectParameter("Monto", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TarjetaMovimientosInsert", numeroTarjetaParameter, nombreTarjetaParameter, idTarjetasParameter, idVentaParameter, cuponParameter, montoParameter);
        }
    
        public virtual int TarjetaUpdate(Nullable<int> idTarjetas, string tarjeta, Nullable<int> cuotas, Nullable<double> recargo, Nullable<double> recargoCall)
        {
            var idTarjetasParameter = idTarjetas.HasValue ?
                new ObjectParameter("IdTarjetas", idTarjetas) :
                new ObjectParameter("IdTarjetas", typeof(int));
    
            var tarjetaParameter = tarjeta != null ?
                new ObjectParameter("Tarjeta", tarjeta) :
                new ObjectParameter("Tarjeta", typeof(string));
    
            var cuotasParameter = cuotas.HasValue ?
                new ObjectParameter("Cuotas", cuotas) :
                new ObjectParameter("Cuotas", typeof(int));
    
            var recargoParameter = recargo.HasValue ?
                new ObjectParameter("Recargo", recargo) :
                new ObjectParameter("Recargo", typeof(double));
    
            var recargoCallParameter = recargoCall.HasValue ?
                new ObjectParameter("RecargoCall", recargoCall) :
                new ObjectParameter("RecargoCall", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TarjetaUpdate", idTarjetasParameter, tarjetaParameter, cuotasParameter, recargoParameter, recargoCallParameter);
        }
    
        public virtual int TicketAbiertoAnular(Nullable<int> ticketId)
        {
            var ticketIdParameter = ticketId.HasValue ?
                new ObjectParameter("TicketId", ticketId) :
                new ObjectParameter("TicketId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TicketAbiertoAnular", ticketIdParameter);
        }
    
        public virtual int TicketAbiertoDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TicketAbiertoDelete", idParameter);
        }
    
        public virtual ObjectResult<TicketAbiertoGet_Result> TicketAbiertoGet(Nullable<int> numero, string userId)
        {
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TicketAbiertoGet_Result>("TicketAbiertoGet", numeroParameter, userIdParameter);
        }
    
        public virtual int TicketAbiertoImprimirGet(string filtro)
        {
            var filtroParameter = filtro != null ?
                new ObjectParameter("Filtro", filtro) :
                new ObjectParameter("Filtro", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TicketAbiertoImprimirGet", filtroParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> TicketAbiertoInsert(Nullable<int> paradaOrigenId, Nullable<int> paradaDestinoId, Nullable<int> clienteId, Nullable<int> lineaId, Nullable<int> ventaId, Nullable<int> agenciaId, Nullable<int> recorridoId, Nullable<decimal> tarifa, string observaciones, string userId, Nullable<int> empresaId, Nullable<decimal> conTarjeta)
        {
            var paradaOrigenIdParameter = paradaOrigenId.HasValue ?
                new ObjectParameter("ParadaOrigenId", paradaOrigenId) :
                new ObjectParameter("ParadaOrigenId", typeof(int));
    
            var paradaDestinoIdParameter = paradaDestinoId.HasValue ?
                new ObjectParameter("ParadaDestinoId", paradaDestinoId) :
                new ObjectParameter("ParadaDestinoId", typeof(int));
    
            var clienteIdParameter = clienteId.HasValue ?
                new ObjectParameter("ClienteId", clienteId) :
                new ObjectParameter("ClienteId", typeof(int));
    
            var lineaIdParameter = lineaId.HasValue ?
                new ObjectParameter("LineaId", lineaId) :
                new ObjectParameter("LineaId", typeof(int));
    
            var ventaIdParameter = ventaId.HasValue ?
                new ObjectParameter("VentaId", ventaId) :
                new ObjectParameter("VentaId", typeof(int));
    
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var recorridoIdParameter = recorridoId.HasValue ?
                new ObjectParameter("RecorridoId", recorridoId) :
                new ObjectParameter("RecorridoId", typeof(int));
    
            var tarifaParameter = tarifa.HasValue ?
                new ObjectParameter("Tarifa", tarifa) :
                new ObjectParameter("Tarifa", typeof(decimal));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var empresaIdParameter = empresaId.HasValue ?
                new ObjectParameter("EmpresaId", empresaId) :
                new ObjectParameter("EmpresaId", typeof(int));
    
            var conTarjetaParameter = conTarjeta.HasValue ?
                new ObjectParameter("ConTarjeta", conTarjeta) :
                new ObjectParameter("ConTarjeta", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("TicketAbiertoInsert", paradaOrigenIdParameter, paradaDestinoIdParameter, clienteIdParameter, lineaIdParameter, ventaIdParameter, agenciaIdParameter, recorridoIdParameter, tarifaParameter, observacionesParameter, userIdParameter, empresaIdParameter, conTarjetaParameter);
        }
    
        public virtual ObjectResult<TicketAbiertoMarcar_Result> TicketAbiertoMarcar(Nullable<int> filtro)
        {
            var filtroParameter = filtro.HasValue ?
                new ObjectParameter("Filtro", filtro) :
                new ObjectParameter("Filtro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TicketAbiertoMarcar_Result>("TicketAbiertoMarcar", filtroParameter);
        }
    
        public virtual ObjectResult<TicketAbiertosVencidosGet_Result> TicketAbiertosVencidosGet(Nullable<int> numero)
        {
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TicketAbiertosVencidosGet_Result>("TicketAbiertosVencidosGet", numeroParameter);
        }
    
        public virtual ObjectResult<TicketARemitirGet_Result> TicketARemitirGet(Nullable<int> numero, string userId, string apellido)
        {
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TicketARemitirGet_Result>("TicketARemitirGet", numeroParameter, userIdParameter, apellidoParameter);
        }
    
        public virtual ObjectResult<TicketAValidarGet_Result> TicketAValidarGet(Nullable<int> numero, string userId, string apellido, Nullable<int> nTarj, string tTarj)
        {
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var nTarjParameter = nTarj.HasValue ?
                new ObjectParameter("NTarj", nTarj) :
                new ObjectParameter("NTarj", typeof(int));
    
            var tTarjParameter = tTarj != null ?
                new ObjectParameter("TTarj", tTarj) :
                new ObjectParameter("TTarj", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TicketAValidarGet_Result>("TicketAValidarGet", numeroParameter, userIdParameter, apellidoParameter, nTarjParameter, tTarjParameter);
        }
    
        public virtual ObjectResult<TicketCerradoGet_Result> TicketCerradoGet(Nullable<int> numero, string userId)
        {
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TicketCerradoGet_Result>("TicketCerradoGet", numeroParameter, userIdParameter);
        }
    
        public virtual ObjectResult<TicketCerradoGetFC_Result> TicketCerradoGetFC(Nullable<long> numero, string userId)
        {
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(long));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TicketCerradoGetFC_Result>("TicketCerradoGetFC", numeroParameter, userIdParameter);
        }
    
        public virtual int TicketCobrado(Nullable<int> numero, string neto, Nullable<int> liq, Nullable<int> agenciaid)
        {
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(int));
    
            var netoParameter = neto != null ?
                new ObjectParameter("Neto", neto) :
                new ObjectParameter("Neto", typeof(string));
    
            var liqParameter = liq.HasValue ?
                new ObjectParameter("Liq", liq) :
                new ObjectParameter("Liq", typeof(int));
    
            var agenciaidParameter = agenciaid.HasValue ?
                new ObjectParameter("Agenciaid", agenciaid) :
                new ObjectParameter("Agenciaid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TicketCobrado", numeroParameter, netoParameter, liqParameter, agenciaidParameter);
        }
    
        public virtual int TicketCobradoDT(Nullable<int> liq, Nullable<int> agenciaid)
        {
            var liqParameter = liq.HasValue ?
                new ObjectParameter("Liq", liq) :
                new ObjectParameter("Liq", typeof(int));
    
            var agenciaidParameter = agenciaid.HasValue ?
                new ObjectParameter("Agenciaid", agenciaid) :
                new ObjectParameter("Agenciaid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TicketCobradoDT", liqParameter, agenciaidParameter);
        }
    
        public virtual ObjectResult<TicketCobradoDTLiq_Result> TicketCobradoDTLiq(Nullable<int> liq, Nullable<int> agenciaid)
        {
            var liqParameter = liq.HasValue ?
                new ObjectParameter("Liq", liq) :
                new ObjectParameter("Liq", typeof(int));
    
            var agenciaidParameter = agenciaid.HasValue ?
                new ObjectParameter("Agenciaid", agenciaid) :
                new ObjectParameter("Agenciaid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TicketCobradoDTLiq_Result>("TicketCobradoDTLiq", liqParameter, agenciaidParameter);
        }
    
        public virtual int TicketCobradoEnco(Nullable<double> numero, string neto, Nullable<int> liq)
        {
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(double));
    
            var netoParameter = neto != null ?
                new ObjectParameter("Neto", neto) :
                new ObjectParameter("Neto", typeof(string));
    
            var liqParameter = liq.HasValue ?
                new ObjectParameter("Liq", liq) :
                new ObjectParameter("Liq", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TicketCobradoEnco", numeroParameter, netoParameter, liqParameter);
        }
    
        public virtual ObjectResult<TicketFCImprimirGetObjeto_Result> TicketFCImprimirGetObjeto(Nullable<int> filtro)
        {
            var filtroParameter = filtro.HasValue ?
                new ObjectParameter("Filtro", filtro) :
                new ObjectParameter("Filtro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TicketFCImprimirGetObjeto_Result>("TicketFCImprimirGetObjeto", filtroParameter);
        }
    
        public virtual ObjectResult<TicketGet_Result> TicketGet(Nullable<int> numero, string userId)
        {
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TicketGet_Result>("TicketGet", numeroParameter, userIdParameter);
        }
    
        public virtual int TicketImprimirGet(string filtro)
        {
            var filtroParameter = filtro != null ?
                new ObjectParameter("Filtro", filtro) :
                new ObjectParameter("Filtro", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TicketImprimirGet", filtroParameter);
        }
    
        public virtual ObjectResult<TicketImprimirGetObjeto_Result> TicketImprimirGetObjeto(Nullable<int> filtro)
        {
            var filtroParameter = filtro.HasValue ?
                new ObjectParameter("Filtro", filtro) :
                new ObjectParameter("Filtro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TicketImprimirGetObjeto_Result>("TicketImprimirGetObjeto", filtroParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> TicketInser2(Nullable<int> asientoId, Nullable<int> paradaOrigenId, Nullable<int> paradaDestinoId, Nullable<int> servicioEfectivoId, Nullable<System.DateTime> fecha, Nullable<int> clienteId, Nullable<int> lineaId, Nullable<int> ventaId, Nullable<int> agenciaId, Nullable<int> recorridoId, Nullable<decimal> tarifa, string observaciones, string userId)
        {
            var asientoIdParameter = asientoId.HasValue ?
                new ObjectParameter("AsientoId", asientoId) :
                new ObjectParameter("AsientoId", typeof(int));
    
            var paradaOrigenIdParameter = paradaOrigenId.HasValue ?
                new ObjectParameter("ParadaOrigenId", paradaOrigenId) :
                new ObjectParameter("ParadaOrigenId", typeof(int));
    
            var paradaDestinoIdParameter = paradaDestinoId.HasValue ?
                new ObjectParameter("ParadaDestinoId", paradaDestinoId) :
                new ObjectParameter("ParadaDestinoId", typeof(int));
    
            var servicioEfectivoIdParameter = servicioEfectivoId.HasValue ?
                new ObjectParameter("ServicioEfectivoId", servicioEfectivoId) :
                new ObjectParameter("ServicioEfectivoId", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var clienteIdParameter = clienteId.HasValue ?
                new ObjectParameter("ClienteId", clienteId) :
                new ObjectParameter("ClienteId", typeof(int));
    
            var lineaIdParameter = lineaId.HasValue ?
                new ObjectParameter("LineaId", lineaId) :
                new ObjectParameter("LineaId", typeof(int));
    
            var ventaIdParameter = ventaId.HasValue ?
                new ObjectParameter("VentaId", ventaId) :
                new ObjectParameter("VentaId", typeof(int));
    
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var recorridoIdParameter = recorridoId.HasValue ?
                new ObjectParameter("RecorridoId", recorridoId) :
                new ObjectParameter("RecorridoId", typeof(int));
    
            var tarifaParameter = tarifa.HasValue ?
                new ObjectParameter("Tarifa", tarifa) :
                new ObjectParameter("Tarifa", typeof(decimal));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("TicketInser2", asientoIdParameter, paradaOrigenIdParameter, paradaDestinoIdParameter, servicioEfectivoIdParameter, fechaParameter, clienteIdParameter, lineaIdParameter, ventaIdParameter, agenciaIdParameter, recorridoIdParameter, tarifaParameter, observacionesParameter, userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> TicketInsert(Nullable<int> asientoId, Nullable<int> paradaOrigenId, Nullable<int> paradaDestinoId, Nullable<int> servicioEfectivoId, Nullable<System.DateTime> fecha, Nullable<int> clienteId, Nullable<int> lineaId, Nullable<int> ventaId, Nullable<int> agenciaId, Nullable<int> recorridoId, Nullable<decimal> tarifa, string observaciones, string userId, string horaS, Nullable<int> empresaId, Nullable<decimal> conTarjeta)
        {
            var asientoIdParameter = asientoId.HasValue ?
                new ObjectParameter("AsientoId", asientoId) :
                new ObjectParameter("AsientoId", typeof(int));
    
            var paradaOrigenIdParameter = paradaOrigenId.HasValue ?
                new ObjectParameter("ParadaOrigenId", paradaOrigenId) :
                new ObjectParameter("ParadaOrigenId", typeof(int));
    
            var paradaDestinoIdParameter = paradaDestinoId.HasValue ?
                new ObjectParameter("ParadaDestinoId", paradaDestinoId) :
                new ObjectParameter("ParadaDestinoId", typeof(int));
    
            var servicioEfectivoIdParameter = servicioEfectivoId.HasValue ?
                new ObjectParameter("ServicioEfectivoId", servicioEfectivoId) :
                new ObjectParameter("ServicioEfectivoId", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var clienteIdParameter = clienteId.HasValue ?
                new ObjectParameter("ClienteId", clienteId) :
                new ObjectParameter("ClienteId", typeof(int));
    
            var lineaIdParameter = lineaId.HasValue ?
                new ObjectParameter("LineaId", lineaId) :
                new ObjectParameter("LineaId", typeof(int));
    
            var ventaIdParameter = ventaId.HasValue ?
                new ObjectParameter("VentaId", ventaId) :
                new ObjectParameter("VentaId", typeof(int));
    
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var recorridoIdParameter = recorridoId.HasValue ?
                new ObjectParameter("RecorridoId", recorridoId) :
                new ObjectParameter("RecorridoId", typeof(int));
    
            var tarifaParameter = tarifa.HasValue ?
                new ObjectParameter("Tarifa", tarifa) :
                new ObjectParameter("Tarifa", typeof(decimal));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var horaSParameter = horaS != null ?
                new ObjectParameter("HoraS", horaS) :
                new ObjectParameter("HoraS", typeof(string));
    
            var empresaIdParameter = empresaId.HasValue ?
                new ObjectParameter("EmpresaId", empresaId) :
                new ObjectParameter("EmpresaId", typeof(int));
    
            var conTarjetaParameter = conTarjeta.HasValue ?
                new ObjectParameter("ConTarjeta", conTarjeta) :
                new ObjectParameter("ConTarjeta", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("TicketInsert", asientoIdParameter, paradaOrigenIdParameter, paradaDestinoIdParameter, servicioEfectivoIdParameter, fechaParameter, clienteIdParameter, lineaIdParameter, ventaIdParameter, agenciaIdParameter, recorridoIdParameter, tarifaParameter, observacionesParameter, userIdParameter, horaSParameter, empresaIdParameter, conTarjetaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> TicketInsertExceso(Nullable<int> asientoId, Nullable<int> paradaOrigenId, Nullable<int> paradaDestinoId, Nullable<int> servicioEfectivoId, Nullable<System.DateTime> fecha, Nullable<int> clienteId, Nullable<int> lineaId, Nullable<int> ventaId, Nullable<int> agenciaId, Nullable<int> recorridoId, Nullable<decimal> tarifa, string observaciones, string userId, string horaS, Nullable<int> empresaId, Nullable<decimal> conTarjeta)
        {
            var asientoIdParameter = asientoId.HasValue ?
                new ObjectParameter("AsientoId", asientoId) :
                new ObjectParameter("AsientoId", typeof(int));
    
            var paradaOrigenIdParameter = paradaOrigenId.HasValue ?
                new ObjectParameter("ParadaOrigenId", paradaOrigenId) :
                new ObjectParameter("ParadaOrigenId", typeof(int));
    
            var paradaDestinoIdParameter = paradaDestinoId.HasValue ?
                new ObjectParameter("ParadaDestinoId", paradaDestinoId) :
                new ObjectParameter("ParadaDestinoId", typeof(int));
    
            var servicioEfectivoIdParameter = servicioEfectivoId.HasValue ?
                new ObjectParameter("ServicioEfectivoId", servicioEfectivoId) :
                new ObjectParameter("ServicioEfectivoId", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var clienteIdParameter = clienteId.HasValue ?
                new ObjectParameter("ClienteId", clienteId) :
                new ObjectParameter("ClienteId", typeof(int));
    
            var lineaIdParameter = lineaId.HasValue ?
                new ObjectParameter("LineaId", lineaId) :
                new ObjectParameter("LineaId", typeof(int));
    
            var ventaIdParameter = ventaId.HasValue ?
                new ObjectParameter("VentaId", ventaId) :
                new ObjectParameter("VentaId", typeof(int));
    
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var recorridoIdParameter = recorridoId.HasValue ?
                new ObjectParameter("RecorridoId", recorridoId) :
                new ObjectParameter("RecorridoId", typeof(int));
    
            var tarifaParameter = tarifa.HasValue ?
                new ObjectParameter("Tarifa", tarifa) :
                new ObjectParameter("Tarifa", typeof(decimal));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var horaSParameter = horaS != null ?
                new ObjectParameter("HoraS", horaS) :
                new ObjectParameter("HoraS", typeof(string));
    
            var empresaIdParameter = empresaId.HasValue ?
                new ObjectParameter("EmpresaId", empresaId) :
                new ObjectParameter("EmpresaId", typeof(int));
    
            var conTarjetaParameter = conTarjeta.HasValue ?
                new ObjectParameter("ConTarjeta", conTarjeta) :
                new ObjectParameter("ConTarjeta", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("TicketInsertExceso", asientoIdParameter, paradaOrigenIdParameter, paradaDestinoIdParameter, servicioEfectivoIdParameter, fechaParameter, clienteIdParameter, lineaIdParameter, ventaIdParameter, agenciaIdParameter, recorridoIdParameter, tarifaParameter, observacionesParameter, userIdParameter, horaSParameter, empresaIdParameter, conTarjetaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> TicketInsertFacturas(Nullable<int> asientoId, Nullable<int> paradaOrigenId, Nullable<int> paradaDestinoId, Nullable<int> servicioEfectivoId, Nullable<System.DateTime> fecha, Nullable<int> clienteId, Nullable<int> lineaId, Nullable<int> ventaId, Nullable<int> agenciaId, Nullable<int> recorridoId, Nullable<decimal> tarifa, string observaciones, string userId, string horaS, Nullable<double> numero, string destinatario)
        {
            var asientoIdParameter = asientoId.HasValue ?
                new ObjectParameter("AsientoId", asientoId) :
                new ObjectParameter("AsientoId", typeof(int));
    
            var paradaOrigenIdParameter = paradaOrigenId.HasValue ?
                new ObjectParameter("ParadaOrigenId", paradaOrigenId) :
                new ObjectParameter("ParadaOrigenId", typeof(int));
    
            var paradaDestinoIdParameter = paradaDestinoId.HasValue ?
                new ObjectParameter("ParadaDestinoId", paradaDestinoId) :
                new ObjectParameter("ParadaDestinoId", typeof(int));
    
            var servicioEfectivoIdParameter = servicioEfectivoId.HasValue ?
                new ObjectParameter("ServicioEfectivoId", servicioEfectivoId) :
                new ObjectParameter("ServicioEfectivoId", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var clienteIdParameter = clienteId.HasValue ?
                new ObjectParameter("ClienteId", clienteId) :
                new ObjectParameter("ClienteId", typeof(int));
    
            var lineaIdParameter = lineaId.HasValue ?
                new ObjectParameter("LineaId", lineaId) :
                new ObjectParameter("LineaId", typeof(int));
    
            var ventaIdParameter = ventaId.HasValue ?
                new ObjectParameter("VentaId", ventaId) :
                new ObjectParameter("VentaId", typeof(int));
    
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var recorridoIdParameter = recorridoId.HasValue ?
                new ObjectParameter("RecorridoId", recorridoId) :
                new ObjectParameter("RecorridoId", typeof(int));
    
            var tarifaParameter = tarifa.HasValue ?
                new ObjectParameter("Tarifa", tarifa) :
                new ObjectParameter("Tarifa", typeof(decimal));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var horaSParameter = horaS != null ?
                new ObjectParameter("HoraS", horaS) :
                new ObjectParameter("HoraS", typeof(string));
    
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(double));
    
            var destinatarioParameter = destinatario != null ?
                new ObjectParameter("Destinatario", destinatario) :
                new ObjectParameter("Destinatario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("TicketInsertFacturas", asientoIdParameter, paradaOrigenIdParameter, paradaDestinoIdParameter, servicioEfectivoIdParameter, fechaParameter, clienteIdParameter, lineaIdParameter, ventaIdParameter, agenciaIdParameter, recorridoIdParameter, tarifaParameter, observacionesParameter, userIdParameter, horaSParameter, numeroParameter, destinatarioParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> TicketInsertFacturasN(Nullable<int> asientoId, Nullable<int> paradaOrigenId, Nullable<int> paradaDestinoId, Nullable<int> servicioEfectivoId, Nullable<System.DateTime> fecha, string clienteId, Nullable<int> lineaId, Nullable<int> ventaId, Nullable<int> agenciaId, Nullable<int> recorridoId, Nullable<decimal> tarifa, string observaciones, string userId, string horaS, Nullable<double> numero, string destinatario, string clienteIdDes)
        {
            var asientoIdParameter = asientoId.HasValue ?
                new ObjectParameter("AsientoId", asientoId) :
                new ObjectParameter("AsientoId", typeof(int));
    
            var paradaOrigenIdParameter = paradaOrigenId.HasValue ?
                new ObjectParameter("ParadaOrigenId", paradaOrigenId) :
                new ObjectParameter("ParadaOrigenId", typeof(int));
    
            var paradaDestinoIdParameter = paradaDestinoId.HasValue ?
                new ObjectParameter("ParadaDestinoId", paradaDestinoId) :
                new ObjectParameter("ParadaDestinoId", typeof(int));
    
            var servicioEfectivoIdParameter = servicioEfectivoId.HasValue ?
                new ObjectParameter("ServicioEfectivoId", servicioEfectivoId) :
                new ObjectParameter("ServicioEfectivoId", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var clienteIdParameter = clienteId != null ?
                new ObjectParameter("ClienteId", clienteId) :
                new ObjectParameter("ClienteId", typeof(string));
    
            var lineaIdParameter = lineaId.HasValue ?
                new ObjectParameter("LineaId", lineaId) :
                new ObjectParameter("LineaId", typeof(int));
    
            var ventaIdParameter = ventaId.HasValue ?
                new ObjectParameter("VentaId", ventaId) :
                new ObjectParameter("VentaId", typeof(int));
    
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var recorridoIdParameter = recorridoId.HasValue ?
                new ObjectParameter("RecorridoId", recorridoId) :
                new ObjectParameter("RecorridoId", typeof(int));
    
            var tarifaParameter = tarifa.HasValue ?
                new ObjectParameter("Tarifa", tarifa) :
                new ObjectParameter("Tarifa", typeof(decimal));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var horaSParameter = horaS != null ?
                new ObjectParameter("HoraS", horaS) :
                new ObjectParameter("HoraS", typeof(string));
    
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(double));
    
            var destinatarioParameter = destinatario != null ?
                new ObjectParameter("Destinatario", destinatario) :
                new ObjectParameter("Destinatario", typeof(string));
    
            var clienteIdDesParameter = clienteIdDes != null ?
                new ObjectParameter("ClienteIdDes", clienteIdDes) :
                new ObjectParameter("ClienteIdDes", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("TicketInsertFacturasN", asientoIdParameter, paradaOrigenIdParameter, paradaDestinoIdParameter, servicioEfectivoIdParameter, fechaParameter, clienteIdParameter, lineaIdParameter, ventaIdParameter, agenciaIdParameter, recorridoIdParameter, tarifaParameter, observacionesParameter, userIdParameter, horaSParameter, numeroParameter, destinatarioParameter, clienteIdDesParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> TicketInsertRecibos(Nullable<int> asientoId, Nullable<int> paradaOrigenId, Nullable<int> paradaDestinoId, Nullable<int> servicioEfectivoId, Nullable<System.DateTime> fecha, Nullable<int> clienteId, Nullable<int> lineaId, Nullable<int> ventaId, Nullable<int> agenciaId, Nullable<int> recorridoId, Nullable<decimal> tarifa, string observaciones, string userId, string horaS, Nullable<int> empresaId, Nullable<decimal> conTarjeta)
        {
            var asientoIdParameter = asientoId.HasValue ?
                new ObjectParameter("AsientoId", asientoId) :
                new ObjectParameter("AsientoId", typeof(int));
    
            var paradaOrigenIdParameter = paradaOrigenId.HasValue ?
                new ObjectParameter("ParadaOrigenId", paradaOrigenId) :
                new ObjectParameter("ParadaOrigenId", typeof(int));
    
            var paradaDestinoIdParameter = paradaDestinoId.HasValue ?
                new ObjectParameter("ParadaDestinoId", paradaDestinoId) :
                new ObjectParameter("ParadaDestinoId", typeof(int));
    
            var servicioEfectivoIdParameter = servicioEfectivoId.HasValue ?
                new ObjectParameter("ServicioEfectivoId", servicioEfectivoId) :
                new ObjectParameter("ServicioEfectivoId", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var clienteIdParameter = clienteId.HasValue ?
                new ObjectParameter("ClienteId", clienteId) :
                new ObjectParameter("ClienteId", typeof(int));
    
            var lineaIdParameter = lineaId.HasValue ?
                new ObjectParameter("LineaId", lineaId) :
                new ObjectParameter("LineaId", typeof(int));
    
            var ventaIdParameter = ventaId.HasValue ?
                new ObjectParameter("VentaId", ventaId) :
                new ObjectParameter("VentaId", typeof(int));
    
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var recorridoIdParameter = recorridoId.HasValue ?
                new ObjectParameter("RecorridoId", recorridoId) :
                new ObjectParameter("RecorridoId", typeof(int));
    
            var tarifaParameter = tarifa.HasValue ?
                new ObjectParameter("Tarifa", tarifa) :
                new ObjectParameter("Tarifa", typeof(decimal));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var horaSParameter = horaS != null ?
                new ObjectParameter("HoraS", horaS) :
                new ObjectParameter("HoraS", typeof(string));
    
            var empresaIdParameter = empresaId.HasValue ?
                new ObjectParameter("EmpresaId", empresaId) :
                new ObjectParameter("EmpresaId", typeof(int));
    
            var conTarjetaParameter = conTarjeta.HasValue ?
                new ObjectParameter("ConTarjeta", conTarjeta) :
                new ObjectParameter("ConTarjeta", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("TicketInsertRecibos", asientoIdParameter, paradaOrigenIdParameter, paradaDestinoIdParameter, servicioEfectivoIdParameter, fechaParameter, clienteIdParameter, lineaIdParameter, ventaIdParameter, agenciaIdParameter, recorridoIdParameter, tarifaParameter, observacionesParameter, userIdParameter, horaSParameter, empresaIdParameter, conTarjetaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> TicketInsertRecibosCall(Nullable<int> asientoId, Nullable<int> paradaOrigenId, Nullable<int> paradaDestinoId, Nullable<int> servicioEfectivoId, Nullable<System.DateTime> fecha, Nullable<int> clienteId, Nullable<int> lineaId, Nullable<int> ventaId, Nullable<int> agenciaId, Nullable<int> recorridoId, Nullable<decimal> tarifa, string observaciones, string userId, string horaS, Nullable<int> empresaId, Nullable<decimal> conTarjeta, Nullable<int> transf)
        {
            var asientoIdParameter = asientoId.HasValue ?
                new ObjectParameter("AsientoId", asientoId) :
                new ObjectParameter("AsientoId", typeof(int));
    
            var paradaOrigenIdParameter = paradaOrigenId.HasValue ?
                new ObjectParameter("ParadaOrigenId", paradaOrigenId) :
                new ObjectParameter("ParadaOrigenId", typeof(int));
    
            var paradaDestinoIdParameter = paradaDestinoId.HasValue ?
                new ObjectParameter("ParadaDestinoId", paradaDestinoId) :
                new ObjectParameter("ParadaDestinoId", typeof(int));
    
            var servicioEfectivoIdParameter = servicioEfectivoId.HasValue ?
                new ObjectParameter("ServicioEfectivoId", servicioEfectivoId) :
                new ObjectParameter("ServicioEfectivoId", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var clienteIdParameter = clienteId.HasValue ?
                new ObjectParameter("ClienteId", clienteId) :
                new ObjectParameter("ClienteId", typeof(int));
    
            var lineaIdParameter = lineaId.HasValue ?
                new ObjectParameter("LineaId", lineaId) :
                new ObjectParameter("LineaId", typeof(int));
    
            var ventaIdParameter = ventaId.HasValue ?
                new ObjectParameter("VentaId", ventaId) :
                new ObjectParameter("VentaId", typeof(int));
    
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var recorridoIdParameter = recorridoId.HasValue ?
                new ObjectParameter("RecorridoId", recorridoId) :
                new ObjectParameter("RecorridoId", typeof(int));
    
            var tarifaParameter = tarifa.HasValue ?
                new ObjectParameter("Tarifa", tarifa) :
                new ObjectParameter("Tarifa", typeof(decimal));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var horaSParameter = horaS != null ?
                new ObjectParameter("HoraS", horaS) :
                new ObjectParameter("HoraS", typeof(string));
    
            var empresaIdParameter = empresaId.HasValue ?
                new ObjectParameter("EmpresaId", empresaId) :
                new ObjectParameter("EmpresaId", typeof(int));
    
            var conTarjetaParameter = conTarjeta.HasValue ?
                new ObjectParameter("ConTarjeta", conTarjeta) :
                new ObjectParameter("ConTarjeta", typeof(decimal));
    
            var transfParameter = transf.HasValue ?
                new ObjectParameter("Transf", transf) :
                new ObjectParameter("Transf", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("TicketInsertRecibosCall", asientoIdParameter, paradaOrigenIdParameter, paradaDestinoIdParameter, servicioEfectivoIdParameter, fechaParameter, clienteIdParameter, lineaIdParameter, ventaIdParameter, agenciaIdParameter, recorridoIdParameter, tarifaParameter, observacionesParameter, userIdParameter, horaSParameter, empresaIdParameter, conTarjetaParameter, transfParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> TicketInsertSeguro(Nullable<int> asientoId, Nullable<int> paradaOrigenId, Nullable<int> paradaDestinoId, Nullable<int> servicioEfectivoId, Nullable<System.DateTime> fecha, Nullable<int> clienteId, Nullable<int> lineaId, Nullable<int> ventaId, Nullable<int> agenciaId, Nullable<int> recorridoId, Nullable<decimal> tarifa, string observaciones, string userId, string horaS, Nullable<int> empresaId, Nullable<decimal> conTarjeta)
        {
            var asientoIdParameter = asientoId.HasValue ?
                new ObjectParameter("AsientoId", asientoId) :
                new ObjectParameter("AsientoId", typeof(int));
    
            var paradaOrigenIdParameter = paradaOrigenId.HasValue ?
                new ObjectParameter("ParadaOrigenId", paradaOrigenId) :
                new ObjectParameter("ParadaOrigenId", typeof(int));
    
            var paradaDestinoIdParameter = paradaDestinoId.HasValue ?
                new ObjectParameter("ParadaDestinoId", paradaDestinoId) :
                new ObjectParameter("ParadaDestinoId", typeof(int));
    
            var servicioEfectivoIdParameter = servicioEfectivoId.HasValue ?
                new ObjectParameter("ServicioEfectivoId", servicioEfectivoId) :
                new ObjectParameter("ServicioEfectivoId", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var clienteIdParameter = clienteId.HasValue ?
                new ObjectParameter("ClienteId", clienteId) :
                new ObjectParameter("ClienteId", typeof(int));
    
            var lineaIdParameter = lineaId.HasValue ?
                new ObjectParameter("LineaId", lineaId) :
                new ObjectParameter("LineaId", typeof(int));
    
            var ventaIdParameter = ventaId.HasValue ?
                new ObjectParameter("VentaId", ventaId) :
                new ObjectParameter("VentaId", typeof(int));
    
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var recorridoIdParameter = recorridoId.HasValue ?
                new ObjectParameter("RecorridoId", recorridoId) :
                new ObjectParameter("RecorridoId", typeof(int));
    
            var tarifaParameter = tarifa.HasValue ?
                new ObjectParameter("Tarifa", tarifa) :
                new ObjectParameter("Tarifa", typeof(decimal));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var horaSParameter = horaS != null ?
                new ObjectParameter("HoraS", horaS) :
                new ObjectParameter("HoraS", typeof(string));
    
            var empresaIdParameter = empresaId.HasValue ?
                new ObjectParameter("EmpresaId", empresaId) :
                new ObjectParameter("EmpresaId", typeof(int));
    
            var conTarjetaParameter = conTarjeta.HasValue ?
                new ObjectParameter("ConTarjeta", conTarjeta) :
                new ObjectParameter("ConTarjeta", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("TicketInsertSeguro", asientoIdParameter, paradaOrigenIdParameter, paradaDestinoIdParameter, servicioEfectivoIdParameter, fechaParameter, clienteIdParameter, lineaIdParameter, ventaIdParameter, agenciaIdParameter, recorridoIdParameter, tarifaParameter, observacionesParameter, userIdParameter, horaSParameter, empresaIdParameter, conTarjetaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> TicketInsertSeguroRemi(Nullable<int> asientoId, Nullable<int> paradaOrigenId, Nullable<int> paradaDestinoId, Nullable<int> servicioEfectivoId, Nullable<System.DateTime> fecha, Nullable<int> clienteId, Nullable<int> lineaId, Nullable<int> ventaId, Nullable<int> agenciaId, Nullable<int> recorridoId, Nullable<decimal> tarifa, string observaciones, string userId, string horaS, Nullable<int> empresaId)
        {
            var asientoIdParameter = asientoId.HasValue ?
                new ObjectParameter("AsientoId", asientoId) :
                new ObjectParameter("AsientoId", typeof(int));
    
            var paradaOrigenIdParameter = paradaOrigenId.HasValue ?
                new ObjectParameter("ParadaOrigenId", paradaOrigenId) :
                new ObjectParameter("ParadaOrigenId", typeof(int));
    
            var paradaDestinoIdParameter = paradaDestinoId.HasValue ?
                new ObjectParameter("ParadaDestinoId", paradaDestinoId) :
                new ObjectParameter("ParadaDestinoId", typeof(int));
    
            var servicioEfectivoIdParameter = servicioEfectivoId.HasValue ?
                new ObjectParameter("ServicioEfectivoId", servicioEfectivoId) :
                new ObjectParameter("ServicioEfectivoId", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var clienteIdParameter = clienteId.HasValue ?
                new ObjectParameter("ClienteId", clienteId) :
                new ObjectParameter("ClienteId", typeof(int));
    
            var lineaIdParameter = lineaId.HasValue ?
                new ObjectParameter("LineaId", lineaId) :
                new ObjectParameter("LineaId", typeof(int));
    
            var ventaIdParameter = ventaId.HasValue ?
                new ObjectParameter("VentaId", ventaId) :
                new ObjectParameter("VentaId", typeof(int));
    
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var recorridoIdParameter = recorridoId.HasValue ?
                new ObjectParameter("RecorridoId", recorridoId) :
                new ObjectParameter("RecorridoId", typeof(int));
    
            var tarifaParameter = tarifa.HasValue ?
                new ObjectParameter("Tarifa", tarifa) :
                new ObjectParameter("Tarifa", typeof(decimal));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var horaSParameter = horaS != null ?
                new ObjectParameter("HoraS", horaS) :
                new ObjectParameter("HoraS", typeof(string));
    
            var empresaIdParameter = empresaId.HasValue ?
                new ObjectParameter("EmpresaId", empresaId) :
                new ObjectParameter("EmpresaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("TicketInsertSeguroRemi", asientoIdParameter, paradaOrigenIdParameter, paradaDestinoIdParameter, servicioEfectivoIdParameter, fechaParameter, clienteIdParameter, lineaIdParameter, ventaIdParameter, agenciaIdParameter, recorridoIdParameter, tarifaParameter, observacionesParameter, userIdParameter, horaSParameter, empresaIdParameter);
        }
    
        public virtual ObjectResult<TicketReImprimirGetObjeto_Result> TicketReImprimirGetObjeto(Nullable<int> filtro)
        {
            var filtroParameter = filtro.HasValue ?
                new ObjectParameter("Filtro", filtro) :
                new ObjectParameter("Filtro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TicketReImprimirGetObjeto_Result>("TicketReImprimirGetObjeto", filtroParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> TicketReservaInsert(Nullable<int> asientoId, Nullable<int> paradaOrigenId, Nullable<int> paradaDestinoId, Nullable<int> servicioEfectivoId, Nullable<System.DateTime> fecha, Nullable<int> clienteId, Nullable<int> lineaId, Nullable<int> ventaId, Nullable<int> agenciaId, Nullable<int> recorridoId, Nullable<decimal> tarifa, string observaciones, string userId, string horaS, Nullable<int> empresaId, Nullable<decimal> conTarjeta)
        {
            var asientoIdParameter = asientoId.HasValue ?
                new ObjectParameter("AsientoId", asientoId) :
                new ObjectParameter("AsientoId", typeof(int));
    
            var paradaOrigenIdParameter = paradaOrigenId.HasValue ?
                new ObjectParameter("ParadaOrigenId", paradaOrigenId) :
                new ObjectParameter("ParadaOrigenId", typeof(int));
    
            var paradaDestinoIdParameter = paradaDestinoId.HasValue ?
                new ObjectParameter("ParadaDestinoId", paradaDestinoId) :
                new ObjectParameter("ParadaDestinoId", typeof(int));
    
            var servicioEfectivoIdParameter = servicioEfectivoId.HasValue ?
                new ObjectParameter("ServicioEfectivoId", servicioEfectivoId) :
                new ObjectParameter("ServicioEfectivoId", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var clienteIdParameter = clienteId.HasValue ?
                new ObjectParameter("ClienteId", clienteId) :
                new ObjectParameter("ClienteId", typeof(int));
    
            var lineaIdParameter = lineaId.HasValue ?
                new ObjectParameter("LineaId", lineaId) :
                new ObjectParameter("LineaId", typeof(int));
    
            var ventaIdParameter = ventaId.HasValue ?
                new ObjectParameter("VentaId", ventaId) :
                new ObjectParameter("VentaId", typeof(int));
    
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var recorridoIdParameter = recorridoId.HasValue ?
                new ObjectParameter("RecorridoId", recorridoId) :
                new ObjectParameter("RecorridoId", typeof(int));
    
            var tarifaParameter = tarifa.HasValue ?
                new ObjectParameter("Tarifa", tarifa) :
                new ObjectParameter("Tarifa", typeof(decimal));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var horaSParameter = horaS != null ?
                new ObjectParameter("HoraS", horaS) :
                new ObjectParameter("HoraS", typeof(string));
    
            var empresaIdParameter = empresaId.HasValue ?
                new ObjectParameter("EmpresaId", empresaId) :
                new ObjectParameter("EmpresaId", typeof(int));
    
            var conTarjetaParameter = conTarjeta.HasValue ?
                new ObjectParameter("ConTarjeta", conTarjeta) :
                new ObjectParameter("ConTarjeta", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("TicketReservaInsert", asientoIdParameter, paradaOrigenIdParameter, paradaDestinoIdParameter, servicioEfectivoIdParameter, fechaParameter, clienteIdParameter, lineaIdParameter, ventaIdParameter, agenciaIdParameter, recorridoIdParameter, tarifaParameter, observacionesParameter, userIdParameter, horaSParameter, empresaIdParameter, conTarjetaParameter);
        }
    
        public virtual int TicketValidar(Nullable<int> ticketId, string userId, Nullable<int> agenciaId, Nullable<int> ventaId, Nullable<int> empresaId, Nullable<decimal> importe, Nullable<decimal> monto)
        {
            var ticketIdParameter = ticketId.HasValue ?
                new ObjectParameter("TicketId", ticketId) :
                new ObjectParameter("TicketId", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var ventaIdParameter = ventaId.HasValue ?
                new ObjectParameter("VentaId", ventaId) :
                new ObjectParameter("VentaId", typeof(int));
    
            var empresaIdParameter = empresaId.HasValue ?
                new ObjectParameter("EmpresaId", empresaId) :
                new ObjectParameter("EmpresaId", typeof(int));
    
            var importeParameter = importe.HasValue ?
                new ObjectParameter("Importe", importe) :
                new ObjectParameter("Importe", typeof(decimal));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("Monto", monto) :
                new ObjectParameter("Monto", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TicketValidar", ticketIdParameter, userIdParameter, agenciaIdParameter, ventaIdParameter, empresaIdParameter, importeParameter, montoParameter);
        }
    
        public virtual ObjectResult<timpru_Result> timpru(string filtro)
        {
            var filtroParameter = filtro != null ?
                new ObjectParameter("Filtro", filtro) :
                new ObjectParameter("Filtro", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<timpru_Result>("timpru", filtroParameter);
        }
    
        public virtual int TipoDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TipoDelete", idParameter);
        }
    
        public virtual int TipoDocumentoDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TipoDocumentoDelete", idParameter);
        }
    
        public virtual int TipoDocumentoGet(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TipoDocumentoGet", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> TipoDocumentoInsert(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("TipoDocumentoInsert", nombreParameter);
        }
    
        public virtual int TipoDocumentoUpdate(Nullable<int> id, string nombre)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TipoDocumentoUpdate", idParameter, nombreParameter);
        }
    
        public virtual int TipoGastoDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TipoGastoDelete", idParameter);
        }
    
        public virtual int TipoGastoGet(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TipoGastoGet", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> TipoGastoInsert(string gasto)
        {
            var gastoParameter = gasto != null ?
                new ObjectParameter("Gasto", gasto) :
                new ObjectParameter("Gasto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("TipoGastoInsert", gastoParameter);
        }
    
        public virtual int TipoGastoUpdate(Nullable<int> id, string gasto)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var gastoParameter = gasto != null ?
                new ObjectParameter("Gasto", gasto) :
                new ObjectParameter("Gasto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TipoGastoUpdate", idParameter, gastoParameter);
        }
    
        public virtual int TipoGet(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TipoGet", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> TipoInsert(string nombre, string color, string imagen, string titulo)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var colorParameter = color != null ?
                new ObjectParameter("Color", color) :
                new ObjectParameter("Color", typeof(string));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("Imagen", imagen) :
                new ObjectParameter("Imagen", typeof(string));
    
            var tituloParameter = titulo != null ?
                new ObjectParameter("Titulo", titulo) :
                new ObjectParameter("Titulo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("TipoInsert", nombreParameter, colorParameter, imagenParameter, tituloParameter);
        }
    
        public virtual int TipoServicioDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TipoServicioDelete", idParameter);
        }
    
        public virtual int TipoServicioGet(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TipoServicioGet", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> TipoServicioInsert(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("TipoServicioInsert", nombreParameter);
        }
    
        public virtual int TipoServicioUpdate(Nullable<int> id, string nombre)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TipoServicioUpdate", idParameter, nombreParameter);
        }
    
        public virtual int TipoUpdate(Nullable<int> id, string nombre, string color, string imagen, string titulo)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var colorParameter = color != null ?
                new ObjectParameter("Color", color) :
                new ObjectParameter("Color", typeof(string));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("Imagen", imagen) :
                new ObjectParameter("Imagen", typeof(string));
    
            var tituloParameter = titulo != null ?
                new ObjectParameter("Titulo", titulo) :
                new ObjectParameter("Titulo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TipoUpdate", idParameter, nombreParameter, colorParameter, imagenParameter, tituloParameter);
        }
    
        public virtual ObjectResult<TraigoServicio_Result> TraigoServicio(Nullable<int> servicioId)
        {
            var servicioIdParameter = servicioId.HasValue ?
                new ObjectParameter("ServicioId", servicioId) :
                new ObjectParameter("ServicioId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TraigoServicio_Result>("TraigoServicio", servicioIdParameter);
        }
    
        public virtual int TrayectoDelete(Nullable<int> recorridoId, Nullable<int> paradaId)
        {
            var recorridoIdParameter = recorridoId.HasValue ?
                new ObjectParameter("RecorridoId", recorridoId) :
                new ObjectParameter("RecorridoId", typeof(int));
    
            var paradaIdParameter = paradaId.HasValue ?
                new ObjectParameter("ParadaId", paradaId) :
                new ObjectParameter("ParadaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TrayectoDelete", recorridoIdParameter, paradaIdParameter);
        }
    
        public virtual int TrayectoGet(Nullable<int> recorridoId, Nullable<int> paradaId, string fields, string filterType, string filter)
        {
            var recorridoIdParameter = recorridoId.HasValue ?
                new ObjectParameter("RecorridoId", recorridoId) :
                new ObjectParameter("RecorridoId", typeof(int));
    
            var paradaIdParameter = paradaId.HasValue ?
                new ObjectParameter("ParadaId", paradaId) :
                new ObjectParameter("ParadaId", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TrayectoGet", recorridoIdParameter, paradaIdParameter, fieldsParameter, filterTypeParameter, filterParameter);
        }
    
        public virtual int TrayectoGetList(Nullable<int> recorridoId)
        {
            var recorridoIdParameter = recorridoId.HasValue ?
                new ObjectParameter("RecorridoId", recorridoId) :
                new ObjectParameter("RecorridoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TrayectoGetList", recorridoIdParameter);
        }
    
        public virtual int TrayectoInsert(Nullable<int> recorridoId, Nullable<int> paradaId, Nullable<byte> orden, string duracion, Nullable<decimal> tarifa)
        {
            var recorridoIdParameter = recorridoId.HasValue ?
                new ObjectParameter("RecorridoId", recorridoId) :
                new ObjectParameter("RecorridoId", typeof(int));
    
            var paradaIdParameter = paradaId.HasValue ?
                new ObjectParameter("ParadaId", paradaId) :
                new ObjectParameter("ParadaId", typeof(int));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(byte));
    
            var duracionParameter = duracion != null ?
                new ObjectParameter("Duracion", duracion) :
                new ObjectParameter("Duracion", typeof(string));
    
            var tarifaParameter = tarifa.HasValue ?
                new ObjectParameter("Tarifa", tarifa) :
                new ObjectParameter("Tarifa", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TrayectoInsert", recorridoIdParameter, paradaIdParameter, ordenParameter, duracionParameter, tarifaParameter);
        }
    
        public virtual int TrayectoOrderUpdate(Nullable<int> recorridoId, Nullable<int> paradaId, Nullable<byte> orden)
        {
            var recorridoIdParameter = recorridoId.HasValue ?
                new ObjectParameter("RecorridoId", recorridoId) :
                new ObjectParameter("RecorridoId", typeof(int));
    
            var paradaIdParameter = paradaId.HasValue ?
                new ObjectParameter("ParadaId", paradaId) :
                new ObjectParameter("ParadaId", typeof(int));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TrayectoOrderUpdate", recorridoIdParameter, paradaIdParameter, ordenParameter);
        }
    
        public virtual int TrayectoUpdate(Nullable<int> recorridoId, Nullable<int> paradaOldId, Nullable<int> paradaId, Nullable<byte> orden, string duracion, Nullable<decimal> tarifa)
        {
            var recorridoIdParameter = recorridoId.HasValue ?
                new ObjectParameter("RecorridoId", recorridoId) :
                new ObjectParameter("RecorridoId", typeof(int));
    
            var paradaOldIdParameter = paradaOldId.HasValue ?
                new ObjectParameter("ParadaOldId", paradaOldId) :
                new ObjectParameter("ParadaOldId", typeof(int));
    
            var paradaIdParameter = paradaId.HasValue ?
                new ObjectParameter("ParadaId", paradaId) :
                new ObjectParameter("ParadaId", typeof(int));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(byte));
    
            var duracionParameter = duracion != null ?
                new ObjectParameter("Duracion", duracion) :
                new ObjectParameter("Duracion", typeof(string));
    
            var tarifaParameter = tarifa.HasValue ?
                new ObjectParameter("Tarifa", tarifa) :
                new ObjectParameter("Tarifa", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TrayectoUpdate", recorridoIdParameter, paradaOldIdParameter, paradaIdParameter, ordenParameter, duracionParameter, tarifaParameter);
        }
    
        public virtual ObjectResult<TrayectoVta_Result> TrayectoVta(Nullable<int> servicioEfectivoId)
        {
            var servicioEfectivoIdParameter = servicioEfectivoId.HasValue ?
                new ObjectParameter("ServicioEfectivoId", servicioEfectivoId) :
                new ObjectParameter("ServicioEfectivoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TrayectoVta_Result>("TrayectoVta", servicioEfectivoIdParameter);
        }
    
        public virtual ObjectResult<TrayectoVtaA_Result> TrayectoVtaA(Nullable<int> servicioEfectivoId)
        {
            var servicioEfectivoIdParameter = servicioEfectivoId.HasValue ?
                new ObjectParameter("ServicioEfectivoId", servicioEfectivoId) :
                new ObjectParameter("ServicioEfectivoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TrayectoVtaA_Result>("TrayectoVtaA", servicioEfectivoIdParameter);
        }
    
        public virtual ObjectResult<TrayectoVtaD_Result> TrayectoVtaD(Nullable<int> servicioEfectivoId)
        {
            var servicioEfectivoIdParameter = servicioEfectivoId.HasValue ?
                new ObjectParameter("ServicioEfectivoId", servicioEfectivoId) :
                new ObjectParameter("ServicioEfectivoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TrayectoVtaD_Result>("TrayectoVtaD", servicioEfectivoIdParameter);
        }
    
        public virtual ObjectResult<TrayectoVtaP_Result> TrayectoVtaP(Nullable<int> servicioefectivoid, Nullable<int> desde, Nullable<int> hasta)
        {
            var servicioefectivoidParameter = servicioefectivoid.HasValue ?
                new ObjectParameter("Servicioefectivoid", servicioefectivoid) :
                new ObjectParameter("Servicioefectivoid", typeof(int));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(int));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TrayectoVtaP_Result>("TrayectoVtaP", servicioefectivoidParameter, desdeParameter, hastaParameter);
        }
    
        public virtual int UserDelete(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserDelete", idParameter);
        }
    
        public virtual ObjectResult<UserGet_Result> UserGet(string id, Nullable<byte> filterStart, string filter)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var filterStartParameter = filterStart.HasValue ?
                new ObjectParameter("FilterStart", filterStart) :
                new ObjectParameter("FilterStart", typeof(byte));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserGet_Result>("UserGet", idParameter, filterStartParameter, filterParameter);
        }
    
        public virtual int UserInsert(string id, string password, string name, string descuento, string bonificacion, string precioAbsoluto, string revendedor, Nullable<int> agenciaId, Nullable<int> paradaDesdeId, Nullable<int> paradaHastaId, string preview, string zonaId, Nullable<int> descJubilado, Nullable<int> descEstudiante, Nullable<int> descEspecial, Nullable<int> fCEncomienda, Nullable<int> fCEncomiendaSI, Nullable<int> descMDQ, Nullable<int> disca, Nullable<int> pagoDestino, Nullable<int> recepcion, Nullable<int> conDesc, Nullable<int> conRegistro, Nullable<int> descPromo)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descuentoParameter = descuento != null ?
                new ObjectParameter("Descuento", descuento) :
                new ObjectParameter("Descuento", typeof(string));
    
            var bonificacionParameter = bonificacion != null ?
                new ObjectParameter("Bonificacion", bonificacion) :
                new ObjectParameter("Bonificacion", typeof(string));
    
            var precioAbsolutoParameter = precioAbsoluto != null ?
                new ObjectParameter("PrecioAbsoluto", precioAbsoluto) :
                new ObjectParameter("PrecioAbsoluto", typeof(string));
    
            var revendedorParameter = revendedor != null ?
                new ObjectParameter("Revendedor", revendedor) :
                new ObjectParameter("Revendedor", typeof(string));
    
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var paradaDesdeIdParameter = paradaDesdeId.HasValue ?
                new ObjectParameter("ParadaDesdeId", paradaDesdeId) :
                new ObjectParameter("ParadaDesdeId", typeof(int));
    
            var paradaHastaIdParameter = paradaHastaId.HasValue ?
                new ObjectParameter("ParadaHastaId", paradaHastaId) :
                new ObjectParameter("ParadaHastaId", typeof(int));
    
            var previewParameter = preview != null ?
                new ObjectParameter("Preview", preview) :
                new ObjectParameter("Preview", typeof(string));
    
            var zonaIdParameter = zonaId != null ?
                new ObjectParameter("ZonaId", zonaId) :
                new ObjectParameter("ZonaId", typeof(string));
    
            var descJubiladoParameter = descJubilado.HasValue ?
                new ObjectParameter("DescJubilado", descJubilado) :
                new ObjectParameter("DescJubilado", typeof(int));
    
            var descEstudianteParameter = descEstudiante.HasValue ?
                new ObjectParameter("DescEstudiante", descEstudiante) :
                new ObjectParameter("DescEstudiante", typeof(int));
    
            var descEspecialParameter = descEspecial.HasValue ?
                new ObjectParameter("DescEspecial", descEspecial) :
                new ObjectParameter("DescEspecial", typeof(int));
    
            var fCEncomiendaParameter = fCEncomienda.HasValue ?
                new ObjectParameter("FCEncomienda", fCEncomienda) :
                new ObjectParameter("FCEncomienda", typeof(int));
    
            var fCEncomiendaSIParameter = fCEncomiendaSI.HasValue ?
                new ObjectParameter("FCEncomiendaSI", fCEncomiendaSI) :
                new ObjectParameter("FCEncomiendaSI", typeof(int));
    
            var descMDQParameter = descMDQ.HasValue ?
                new ObjectParameter("DescMDQ", descMDQ) :
                new ObjectParameter("DescMDQ", typeof(int));
    
            var discaParameter = disca.HasValue ?
                new ObjectParameter("Disca", disca) :
                new ObjectParameter("Disca", typeof(int));
    
            var pagoDestinoParameter = pagoDestino.HasValue ?
                new ObjectParameter("PagoDestino", pagoDestino) :
                new ObjectParameter("PagoDestino", typeof(int));
    
            var recepcionParameter = recepcion.HasValue ?
                new ObjectParameter("Recepcion", recepcion) :
                new ObjectParameter("Recepcion", typeof(int));
    
            var conDescParameter = conDesc.HasValue ?
                new ObjectParameter("ConDesc", conDesc) :
                new ObjectParameter("ConDesc", typeof(int));
    
            var conRegistroParameter = conRegistro.HasValue ?
                new ObjectParameter("ConRegistro", conRegistro) :
                new ObjectParameter("ConRegistro", typeof(int));
    
            var descPromoParameter = descPromo.HasValue ?
                new ObjectParameter("DescPromo", descPromo) :
                new ObjectParameter("DescPromo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserInsert", idParameter, passwordParameter, nameParameter, descuentoParameter, bonificacionParameter, precioAbsolutoParameter, revendedorParameter, agenciaIdParameter, paradaDesdeIdParameter, paradaHastaIdParameter, previewParameter, zonaIdParameter, descJubiladoParameter, descEstudianteParameter, descEspecialParameter, fCEncomiendaParameter, fCEncomiendaSIParameter, descMDQParameter, discaParameter, pagoDestinoParameter, recepcionParameter, conDescParameter, conRegistroParameter, descPromoParameter);
        }
    
        public virtual ObjectResult<UserLogin_Result> UserLogin(string userId, string password, string newPassword)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var newPasswordParameter = newPassword != null ?
                new ObjectParameter("NewPassword", newPassword) :
                new ObjectParameter("NewPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserLogin_Result>("UserLogin", userIdParameter, passwordParameter, newPasswordParameter);
        }
    
        public virtual int UserRegGet(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserRegGet", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> UserRegInsert(string nombre, string idUser, Nullable<int> clave)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var idUserParameter = idUser != null ?
                new ObjectParameter("idUser", idUser) :
                new ObjectParameter("idUser", typeof(string));
    
            var claveParameter = clave.HasValue ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("UserRegInsert", nombreParameter, idUserParameter, claveParameter);
        }
    
        public virtual int UserRegUpdate(Nullable<int> id, string nombre, string idUser, Nullable<int> clave)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var idUserParameter = idUser != null ?
                new ObjectParameter("idUser", idUser) :
                new ObjectParameter("idUser", typeof(string));
    
            var claveParameter = clave.HasValue ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserRegUpdate", idParameter, nombreParameter, idUserParameter, claveParameter);
        }
    
        public virtual int UserUpdate(string id, string password, string name, string descuento, string bonificacion, string precioAbsoluto, string revendedor, Nullable<int> agenciaId, Nullable<int> paradaDesdeId, Nullable<int> paradaHastaId, string preview, string zonaId, Nullable<int> descJubilado, Nullable<int> descEstudiante, Nullable<int> descEspecial, Nullable<int> fCEncomienda, Nullable<int> fCEncomiendaSI, Nullable<int> descMDQ, Nullable<int> disca, Nullable<int> pagoDestino, Nullable<int> recepcion, Nullable<int> conDesc, Nullable<int> conRegistro, Nullable<int> descPromo)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descuentoParameter = descuento != null ?
                new ObjectParameter("Descuento", descuento) :
                new ObjectParameter("Descuento", typeof(string));
    
            var bonificacionParameter = bonificacion != null ?
                new ObjectParameter("Bonificacion", bonificacion) :
                new ObjectParameter("Bonificacion", typeof(string));
    
            var precioAbsolutoParameter = precioAbsoluto != null ?
                new ObjectParameter("PrecioAbsoluto", precioAbsoluto) :
                new ObjectParameter("PrecioAbsoluto", typeof(string));
    
            var revendedorParameter = revendedor != null ?
                new ObjectParameter("Revendedor", revendedor) :
                new ObjectParameter("Revendedor", typeof(string));
    
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var paradaDesdeIdParameter = paradaDesdeId.HasValue ?
                new ObjectParameter("ParadaDesdeId", paradaDesdeId) :
                new ObjectParameter("ParadaDesdeId", typeof(int));
    
            var paradaHastaIdParameter = paradaHastaId.HasValue ?
                new ObjectParameter("ParadaHastaId", paradaHastaId) :
                new ObjectParameter("ParadaHastaId", typeof(int));
    
            var previewParameter = preview != null ?
                new ObjectParameter("Preview", preview) :
                new ObjectParameter("Preview", typeof(string));
    
            var zonaIdParameter = zonaId != null ?
                new ObjectParameter("ZonaId", zonaId) :
                new ObjectParameter("ZonaId", typeof(string));
    
            var descJubiladoParameter = descJubilado.HasValue ?
                new ObjectParameter("DescJubilado", descJubilado) :
                new ObjectParameter("DescJubilado", typeof(int));
    
            var descEstudianteParameter = descEstudiante.HasValue ?
                new ObjectParameter("DescEstudiante", descEstudiante) :
                new ObjectParameter("DescEstudiante", typeof(int));
    
            var descEspecialParameter = descEspecial.HasValue ?
                new ObjectParameter("DescEspecial", descEspecial) :
                new ObjectParameter("DescEspecial", typeof(int));
    
            var fCEncomiendaParameter = fCEncomienda.HasValue ?
                new ObjectParameter("FCEncomienda", fCEncomienda) :
                new ObjectParameter("FCEncomienda", typeof(int));
    
            var fCEncomiendaSIParameter = fCEncomiendaSI.HasValue ?
                new ObjectParameter("FCEncomiendaSI", fCEncomiendaSI) :
                new ObjectParameter("FCEncomiendaSI", typeof(int));
    
            var descMDQParameter = descMDQ.HasValue ?
                new ObjectParameter("DescMDQ", descMDQ) :
                new ObjectParameter("DescMDQ", typeof(int));
    
            var discaParameter = disca.HasValue ?
                new ObjectParameter("Disca", disca) :
                new ObjectParameter("Disca", typeof(int));
    
            var pagoDestinoParameter = pagoDestino.HasValue ?
                new ObjectParameter("PagoDestino", pagoDestino) :
                new ObjectParameter("PagoDestino", typeof(int));
    
            var recepcionParameter = recepcion.HasValue ?
                new ObjectParameter("Recepcion", recepcion) :
                new ObjectParameter("Recepcion", typeof(int));
    
            var conDescParameter = conDesc.HasValue ?
                new ObjectParameter("ConDesc", conDesc) :
                new ObjectParameter("ConDesc", typeof(int));
    
            var conRegistroParameter = conRegistro.HasValue ?
                new ObjectParameter("ConRegistro", conRegistro) :
                new ObjectParameter("ConRegistro", typeof(int));
    
            var descPromoParameter = descPromo.HasValue ?
                new ObjectParameter("DescPromo", descPromo) :
                new ObjectParameter("DescPromo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserUpdate", idParameter, passwordParameter, nameParameter, descuentoParameter, bonificacionParameter, precioAbsolutoParameter, revendedorParameter, agenciaIdParameter, paradaDesdeIdParameter, paradaHastaIdParameter, previewParameter, zonaIdParameter, descJubiladoParameter, descEstudianteParameter, descEspecialParameter, fCEncomiendaParameter, fCEncomiendaSIParameter, descMDQParameter, discaParameter, pagoDestinoParameter, recepcionParameter, conDescParameter, conRegistroParameter, descPromoParameter);
        }
    
        public virtual int ValidacionLiq(Nullable<int> liquidacionId, Nullable<int> agenciaId)
        {
            var liquidacionIdParameter = liquidacionId.HasValue ?
                new ObjectParameter("LiquidacionId", liquidacionId) :
                new ObjectParameter("LiquidacionId", typeof(int));
    
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ValidacionLiq", liquidacionIdParameter, agenciaIdParameter);
        }
    
        public virtual ObjectResult<ValidaImprimirGetObjeto_Result> ValidaImprimirGetObjeto(Nullable<int> filtro)
        {
            var filtroParameter = filtro.HasValue ?
                new ObjectParameter("Filtro", filtro) :
                new ObjectParameter("Filtro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ValidaImprimirGetObjeto_Result>("ValidaImprimirGetObjeto", filtroParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ValidaMacAddress(string nombrePC, string macAddress, string placa, string ipLocal, string ipPublica, string latitud, string longitud, string dHCPServer, string dHCPEnabled, string iPFilterSecurityEnabled, string hTTP_USER_AGENT, string explorador, string exploradorVersion, string sistemaOperativo, string resolucion)
        {
            var nombrePCParameter = nombrePC != null ?
                new ObjectParameter("NombrePC", nombrePC) :
                new ObjectParameter("NombrePC", typeof(string));
    
            var macAddressParameter = macAddress != null ?
                new ObjectParameter("MacAddress", macAddress) :
                new ObjectParameter("MacAddress", typeof(string));
    
            var placaParameter = placa != null ?
                new ObjectParameter("Placa", placa) :
                new ObjectParameter("Placa", typeof(string));
    
            var ipLocalParameter = ipLocal != null ?
                new ObjectParameter("IpLocal", ipLocal) :
                new ObjectParameter("IpLocal", typeof(string));
    
            var ipPublicaParameter = ipPublica != null ?
                new ObjectParameter("IpPublica", ipPublica) :
                new ObjectParameter("IpPublica", typeof(string));
    
            var latitudParameter = latitud != null ?
                new ObjectParameter("Latitud", latitud) :
                new ObjectParameter("Latitud", typeof(string));
    
            var longitudParameter = longitud != null ?
                new ObjectParameter("Longitud", longitud) :
                new ObjectParameter("Longitud", typeof(string));
    
            var dHCPServerParameter = dHCPServer != null ?
                new ObjectParameter("DHCPServer", dHCPServer) :
                new ObjectParameter("DHCPServer", typeof(string));
    
            var dHCPEnabledParameter = dHCPEnabled != null ?
                new ObjectParameter("DHCPEnabled", dHCPEnabled) :
                new ObjectParameter("DHCPEnabled", typeof(string));
    
            var iPFilterSecurityEnabledParameter = iPFilterSecurityEnabled != null ?
                new ObjectParameter("IPFilterSecurityEnabled", iPFilterSecurityEnabled) :
                new ObjectParameter("IPFilterSecurityEnabled", typeof(string));
    
            var hTTP_USER_AGENTParameter = hTTP_USER_AGENT != null ?
                new ObjectParameter("HTTP_USER_AGENT", hTTP_USER_AGENT) :
                new ObjectParameter("HTTP_USER_AGENT", typeof(string));
    
            var exploradorParameter = explorador != null ?
                new ObjectParameter("Explorador", explorador) :
                new ObjectParameter("Explorador", typeof(string));
    
            var exploradorVersionParameter = exploradorVersion != null ?
                new ObjectParameter("ExploradorVersion", exploradorVersion) :
                new ObjectParameter("ExploradorVersion", typeof(string));
    
            var sistemaOperativoParameter = sistemaOperativo != null ?
                new ObjectParameter("SistemaOperativo", sistemaOperativo) :
                new ObjectParameter("SistemaOperativo", typeof(string));
    
            var resolucionParameter = resolucion != null ?
                new ObjectParameter("Resolucion", resolucion) :
                new ObjectParameter("Resolucion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ValidaMacAddress", nombrePCParameter, macAddressParameter, placaParameter, ipLocalParameter, ipPublicaParameter, latitudParameter, longitudParameter, dHCPServerParameter, dHCPEnabledParameter, iPFilterSecurityEnabledParameter, hTTP_USER_AGENTParameter, exploradorParameter, exploradorVersionParameter, sistemaOperativoParameter, resolucionParameter);
        }
    
        public virtual int ValidarTicketCall(Nullable<int> ticketId)
        {
            var ticketIdParameter = ticketId.HasValue ?
                new ObjectParameter("TicketId", ticketId) :
                new ObjectParameter("TicketId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ValidarTicketCall", ticketIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> ValidaSesion(Nullable<int> idComputadora, string idUsuario, string password, Nullable<int> validacion)
        {
            var idComputadoraParameter = idComputadora.HasValue ?
                new ObjectParameter("IdComputadora", idComputadora) :
                new ObjectParameter("IdComputadora", typeof(int));
    
            var idUsuarioParameter = idUsuario != null ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var validacionParameter = validacion.HasValue ?
                new ObjectParameter("Validacion", validacion) :
                new ObjectParameter("Validacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("ValidaSesion", idComputadoraParameter, idUsuarioParameter, passwordParameter, validacionParameter);
        }
    
        public virtual int VehiculoDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VehiculoDelete", idParameter);
        }
    
        public virtual int VehiculoGet(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VehiculoGet", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> VehiculoInsert(string numero, Nullable<int> marcaId, Nullable<int> carroceriaId, Nullable<int> categoriaId, Nullable<int> asientos, string estado, Nullable<byte> pisos, Nullable<System.DateTime> revisionTecnica, string gPS, string dominio)
        {
            var numeroParameter = numero != null ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(string));
    
            var marcaIdParameter = marcaId.HasValue ?
                new ObjectParameter("MarcaId", marcaId) :
                new ObjectParameter("MarcaId", typeof(int));
    
            var carroceriaIdParameter = carroceriaId.HasValue ?
                new ObjectParameter("CarroceriaId", carroceriaId) :
                new ObjectParameter("CarroceriaId", typeof(int));
    
            var categoriaIdParameter = categoriaId.HasValue ?
                new ObjectParameter("CategoriaId", categoriaId) :
                new ObjectParameter("CategoriaId", typeof(int));
    
            var asientosParameter = asientos.HasValue ?
                new ObjectParameter("Asientos", asientos) :
                new ObjectParameter("Asientos", typeof(int));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var pisosParameter = pisos.HasValue ?
                new ObjectParameter("Pisos", pisos) :
                new ObjectParameter("Pisos", typeof(byte));
    
            var revisionTecnicaParameter = revisionTecnica.HasValue ?
                new ObjectParameter("RevisionTecnica", revisionTecnica) :
                new ObjectParameter("RevisionTecnica", typeof(System.DateTime));
    
            var gPSParameter = gPS != null ?
                new ObjectParameter("GPS", gPS) :
                new ObjectParameter("GPS", typeof(string));
    
            var dominioParameter = dominio != null ?
                new ObjectParameter("Dominio", dominio) :
                new ObjectParameter("Dominio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("VehiculoInsert", numeroParameter, marcaIdParameter, carroceriaIdParameter, categoriaIdParameter, asientosParameter, estadoParameter, pisosParameter, revisionTecnicaParameter, gPSParameter, dominioParameter);
        }
    
        public virtual int VehiculoUpdate(Nullable<int> id, string numero, Nullable<int> marcaId, Nullable<int> carroceriaId, Nullable<int> categoriaId, Nullable<int> asientos, string estado, Nullable<byte> pisos, Nullable<System.DateTime> revisionTecnica, string gPS, string dominio)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var numeroParameter = numero != null ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(string));
    
            var marcaIdParameter = marcaId.HasValue ?
                new ObjectParameter("MarcaId", marcaId) :
                new ObjectParameter("MarcaId", typeof(int));
    
            var carroceriaIdParameter = carroceriaId.HasValue ?
                new ObjectParameter("CarroceriaId", carroceriaId) :
                new ObjectParameter("CarroceriaId", typeof(int));
    
            var categoriaIdParameter = categoriaId.HasValue ?
                new ObjectParameter("CategoriaId", categoriaId) :
                new ObjectParameter("CategoriaId", typeof(int));
    
            var asientosParameter = asientos.HasValue ?
                new ObjectParameter("Asientos", asientos) :
                new ObjectParameter("Asientos", typeof(int));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var pisosParameter = pisos.HasValue ?
                new ObjectParameter("Pisos", pisos) :
                new ObjectParameter("Pisos", typeof(byte));
    
            var revisionTecnicaParameter = revisionTecnica.HasValue ?
                new ObjectParameter("RevisionTecnica", revisionTecnica) :
                new ObjectParameter("RevisionTecnica", typeof(System.DateTime));
    
            var gPSParameter = gPS != null ?
                new ObjectParameter("GPS", gPS) :
                new ObjectParameter("GPS", typeof(string));
    
            var dominioParameter = dominio != null ?
                new ObjectParameter("Dominio", dominio) :
                new ObjectParameter("Dominio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VehiculoUpdate", idParameter, numeroParameter, marcaIdParameter, carroceriaIdParameter, categoriaIdParameter, asientosParameter, estadoParameter, pisosParameter, revisionTecnicaParameter, gPSParameter, dominioParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> VentaInsert(string userId, Nullable<int> empleadoId, Nullable<int> clienteId, Nullable<byte> descuento, Nullable<byte> bonificacion, Nullable<decimal> precioAbsoluto, Nullable<int> agenciaId, Nullable<System.DateTime> fecha, Nullable<decimal> importe, string abierto, Nullable<decimal> conTarjeta, string tipoDescuento, Nullable<int> canjeNum)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var empleadoIdParameter = empleadoId.HasValue ?
                new ObjectParameter("EmpleadoId", empleadoId) :
                new ObjectParameter("EmpleadoId", typeof(int));
    
            var clienteIdParameter = clienteId.HasValue ?
                new ObjectParameter("ClienteId", clienteId) :
                new ObjectParameter("ClienteId", typeof(int));
    
            var descuentoParameter = descuento.HasValue ?
                new ObjectParameter("Descuento", descuento) :
                new ObjectParameter("Descuento", typeof(byte));
    
            var bonificacionParameter = bonificacion.HasValue ?
                new ObjectParameter("Bonificacion", bonificacion) :
                new ObjectParameter("Bonificacion", typeof(byte));
    
            var precioAbsolutoParameter = precioAbsoluto.HasValue ?
                new ObjectParameter("PrecioAbsoluto", precioAbsoluto) :
                new ObjectParameter("PrecioAbsoluto", typeof(decimal));
    
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var importeParameter = importe.HasValue ?
                new ObjectParameter("Importe", importe) :
                new ObjectParameter("Importe", typeof(decimal));
    
            var abiertoParameter = abierto != null ?
                new ObjectParameter("Abierto", abierto) :
                new ObjectParameter("Abierto", typeof(string));
    
            var conTarjetaParameter = conTarjeta.HasValue ?
                new ObjectParameter("ConTarjeta", conTarjeta) :
                new ObjectParameter("ConTarjeta", typeof(decimal));
    
            var tipoDescuentoParameter = tipoDescuento != null ?
                new ObjectParameter("TipoDescuento", tipoDescuento) :
                new ObjectParameter("TipoDescuento", typeof(string));
    
            var canjeNumParameter = canjeNum.HasValue ?
                new ObjectParameter("CanjeNum", canjeNum) :
                new ObjectParameter("CanjeNum", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("VentaInsert", userIdParameter, empleadoIdParameter, clienteIdParameter, descuentoParameter, bonificacionParameter, precioAbsolutoParameter, agenciaIdParameter, fechaParameter, importeParameter, abiertoParameter, conTarjetaParameter, tipoDescuentoParameter, canjeNumParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> VentaInsertFacturas(string userId, Nullable<int> empleadoId, string clienteId, Nullable<byte> descuento, Nullable<byte> bonificacion, Nullable<decimal> precioAbsoluto, Nullable<int> agenciaId, Nullable<System.DateTime> fecha, Nullable<decimal> importe, string abierto)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var empleadoIdParameter = empleadoId.HasValue ?
                new ObjectParameter("EmpleadoId", empleadoId) :
                new ObjectParameter("EmpleadoId", typeof(int));
    
            var clienteIdParameter = clienteId != null ?
                new ObjectParameter("ClienteId", clienteId) :
                new ObjectParameter("ClienteId", typeof(string));
    
            var descuentoParameter = descuento.HasValue ?
                new ObjectParameter("Descuento", descuento) :
                new ObjectParameter("Descuento", typeof(byte));
    
            var bonificacionParameter = bonificacion.HasValue ?
                new ObjectParameter("Bonificacion", bonificacion) :
                new ObjectParameter("Bonificacion", typeof(byte));
    
            var precioAbsolutoParameter = precioAbsoluto.HasValue ?
                new ObjectParameter("PrecioAbsoluto", precioAbsoluto) :
                new ObjectParameter("PrecioAbsoluto", typeof(decimal));
    
            var agenciaIdParameter = agenciaId.HasValue ?
                new ObjectParameter("AgenciaId", agenciaId) :
                new ObjectParameter("AgenciaId", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var importeParameter = importe.HasValue ?
                new ObjectParameter("Importe", importe) :
                new ObjectParameter("Importe", typeof(decimal));
    
            var abiertoParameter = abierto != null ?
                new ObjectParameter("Abierto", abierto) :
                new ObjectParameter("Abierto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("VentaInsertFacturas", userIdParameter, empleadoIdParameter, clienteIdParameter, descuentoParameter, bonificacionParameter, precioAbsolutoParameter, agenciaIdParameter, fechaParameter, importeParameter, abiertoParameter);
        }
    
        public virtual ObjectResult<VentasxAgenciaGet_Result> VentasxAgenciaGet(string desde, string hasta, Nullable<int> empresaId)
        {
            var desdeParameter = desde != null ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(string));
    
            var hastaParameter = hasta != null ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(string));
    
            var empresaIdParameter = empresaId.HasValue ?
                new ObjectParameter("EmpresaId", empresaId) :
                new ObjectParameter("EmpresaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VentasxAgenciaGet_Result>("VentasxAgenciaGet", desdeParameter, hastaParameter, empresaIdParameter);
        }
    
        public virtual ObjectResult<VentasxAgenciaxBoletoGet_Result> VentasxAgenciaxBoletoGet(string desde, string hasta, Nullable<int> empresaId)
        {
            var desdeParameter = desde != null ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(string));
    
            var hastaParameter = hasta != null ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(string));
    
            var empresaIdParameter = empresaId.HasValue ?
                new ObjectParameter("EmpresaId", empresaId) :
                new ObjectParameter("EmpresaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VentasxAgenciaxBoletoGet_Result>("VentasxAgenciaxBoletoGet", desdeParameter, hastaParameter, empresaIdParameter);
        }
    
        public virtual ObjectResult<VentasxAgenciaxDescuentoGet_Result> VentasxAgenciaxDescuentoGet(string desde, string hasta, Nullable<int> empresaId)
        {
            var desdeParameter = desde != null ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(string));
    
            var hastaParameter = hasta != null ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(string));
    
            var empresaIdParameter = empresaId.HasValue ?
                new ObjectParameter("EmpresaId", empresaId) :
                new ObjectParameter("EmpresaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VentasxAgenciaxDescuentoGet_Result>("VentasxAgenciaxDescuentoGet", desdeParameter, hastaParameter, empresaIdParameter);
        }
    
        public virtual ObjectResult<VerReimpresos_Result> VerReimpresos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerReimpresos_Result>("VerReimpresos");
        }
    
        public virtual int ZonasDelete1(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ZonasDelete1", idParameter);
        }
    
        public virtual int ZonasGet(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ZonasGet", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual int ZonasGet1(string filterType, string filter, Nullable<int> id, string fields)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ZonasGet1", filterTypeParameter, filterParameter, idParameter, fieldsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ZonasInsert1(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ZonasInsert1", nombreParameter);
        }
    
        public virtual int ZonasUpdate1(Nullable<int> id, string nombre)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ZonasUpdate1", idParameter, nombreParameter);
        }
    }
}
